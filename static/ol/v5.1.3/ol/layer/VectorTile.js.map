{"version":3,"file":"VectorTile.js","sources":["../../../src/ol/layer/VectorTile.js"],"sourcesContent":["/**\r\n * @module ol/layer/VectorTile\r\n */\r\nimport LayerType from '../LayerType.js';\r\nimport {assert} from '../asserts.js';\r\nimport TileProperty from '../layer/TileProperty.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\r\n *    point symbols and texts are always rotated with the view and pixels are\r\n *    scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\r\n *    are scaled during zoom animations. Point symbols and texts are accurately\r\n *    rendered as vectors and can stay upright on rotated views.\r\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\r\n *    even during animations, but slower performance than the other options.\r\n * @api\r\n */\r\nexport const RenderType = {\r\n  IMAGE: 'image',\r\n  HYBRID: 'hybrid',\r\n  VECTOR: 'vector'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\r\n * renderer when getting features from the vector tile for the rendering or hit-detection.\r\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\r\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\r\n * point symbol or line width.\r\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\r\n *    are always rotated with the view and pixels are scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\r\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\r\n *    rotated views.\r\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\r\n *    animations, but slower performance than the other options.\r\n *\r\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\r\n * @property {module:ol/source/VectorTile} [source] Source.\r\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\r\n * `'hybrid'`.\r\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\r\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\r\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\r\n * will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\r\n * recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created.\r\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer for vector tile data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\r\n * @api\r\n */\r\nclass VectorTileLayer extends VectorLayer {\r\n  /**\r\n   * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\r\n    assert(renderMode == undefined ||\r\n       renderMode == VectorTileRenderType.IMAGE ||\r\n       renderMode == VectorTileRenderType.HYBRID ||\r\n       renderMode == VectorTileRenderType.VECTOR,\r\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\r\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\r\n      renderMode = VectorTileRenderType.HYBRID;\r\n    }\r\n    options.renderMode = renderMode;\r\n\r\n    const baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    super(baseOptions);\r\n\r\n    this.setPreload(options.preload ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n    /**\r\n    * The layer type.\r\n    * @protected\r\n    * @type {module:ol/LayerType}\r\n    */\r\n    this.type = LayerType.VECTOR_TILE;\r\n\r\n  }\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getPreload() {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  }\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  getUseInterimTilesOnError() {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  }\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setPreload(preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  }\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  setUseInterimTilesOnError(useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\r\n * @function\r\n * @return {module:ol/source/VectorTile} Source.\r\n * @api\r\n */\r\nVectorTileLayer.prototype.getSource;\r\nexport default VectorTileLayer;\r\n"],"names":["const","let","super"],"mappings":"AAAA;;;AAGA,OAAO,SAAS,MAAM,iBAAiB,CAAC;AACxC,QAAQ,MAAM,OAAO,eAAe,CAAC;AACrC,OAAO,YAAY,MAAM,0BAA0B,CAAC;AACpD,OAAO,WAAW,MAAM,oBAAoB,CAAC;AAC7C,OAAO,oBAAoB,MAAM,kCAAkC,CAAC;AACpE,QAAQ,MAAM,OAAO,WAAW,CAAC;;;;;;;;;;;;;;;;AAgBjC,OAAOA,GAAK,CAAC,UAAU,GAAG;EACxB,KAAK,EAAE,OAAO;EACd,MAAM,EAAE,QAAQ;EAChB,MAAM,EAAE,QAAQ;CACjB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEF,IAAM,eAAe,GAAoB;EAIvC,wBAAW,CAAC,WAAW,EAAE;IACvBA,GAAK,CAAC,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC;;IAE/CC,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,oBAAoB,CAAC,MAAM,CAAC;IACnE,MAAM,CAAC,UAAU,IAAI,SAAS;OAC3B,UAAU,IAAI,oBAAoB,CAAC,KAAK;OACxC,UAAU,IAAI,oBAAoB,CAAC,MAAM;OACzC,UAAU,IAAI,oBAAoB,CAAC,MAAM;IAC5C,EAAE,CAAC,CAAC;IACJ,IAAI,OAAO,CAAC,SAAS,IAAI,UAAU,IAAI,oBAAoB,CAAC,KAAK,EAAE;MACjE,UAAU,GAAG,oBAAoB,CAAC,MAAM,CAAC;KAC1C;IACD,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;;IAEhCD,GAAK,CAAC,WAAW,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;;IAExC,OAAO,WAAW,CAAC,OAAO,CAAC;IAC3B,OAAO,WAAW,CAAC,sBAAsB,CAAC;IAC1CE,gBAAK,OAAC,WAAW,CAAC,CAAC;;IAEnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,sBAAsB,KAAK,SAAS;MACzE,OAAO,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;;;;;;;IAOzC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC;;;;;;0DAEnC;;;;;;;;4BAQD,iCAAU,GAAG;IACX,6BAA6B,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/D;;;;;;;;4BAQD,+DAAyB,GAAG;IAC1B,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACnF;;;;;;;;4BAQD,iCAAU,CAAC,OAAO,EAAE;IAClB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzC;;;;;;;;4BAQD,+DAAyB,CAAC,sBAAsB,EAAE;IAChD,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;GAC3E;;;EA3E2B,cA4E7B;;;;;;;;;AASD,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;AACpC,eAAe,eAAe,CAAC;"}
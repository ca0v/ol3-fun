{"version":3,"file":"Layer.js","sources":["../../../src/ol/layer/Layer.js"],"sourcesContent":["/**\r\n * @module ol/layer/Layer\r\n */\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getUid} from '../util.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport BaseLayer from '../layer/Base.js';\r\nimport LayerProperty from '../layer/Property.js';\r\nimport {assign} from '../obj.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\r\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\r\n * construction.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {module:ol/layer/Layer} layer\r\n * @property {number} opacity\r\n * @property {module:ol/source/Source~State} sourceState\r\n * @property {boolean} visible\r\n * @property {boolean} managed\r\n * @property {module:ol/extent~Extent} [extent]\r\n * @property {number} zIndex\r\n * @property {number} maxResolution\r\n * @property {number} minResolution\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * A visual representation of raster or vector map data.\r\n * Layers group together those properties that pertain to how the data is to be\r\n * displayed, irrespective of the source of that data.\r\n *\r\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\r\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\r\n * internally. These unmanaged layers are associated with the map using\r\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\r\n *\r\n * A generic `change` event is fired when the state of the source changes.\r\n *\r\n * @fires module:ol/render/Event~RenderEvent\r\n */\r\nclass Layer extends BaseLayer {\r\n  /**\r\n   * @param {module:ol/layer/Layer~Options} options Layer options.\r\n   */\r\n  constructor(options) {\r\n\r\n    const baseOptions = assign({}, options);\r\n    delete baseOptions.source;\r\n\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/events~EventsKey}\r\n     */\r\n    this.mapPrecomposeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/events~EventsKey}\r\n     */\r\n    this.mapRenderKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/events~EventsKey}\r\n     */\r\n    this.sourceChangeKey_ = null;\r\n\r\n    if (options.map) {\r\n      this.setMap(options.map);\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(LayerProperty.SOURCE),\r\n      this.handleSourcePropertyChange_, this);\r\n\r\n    const source = options.source ? options.source : null;\r\n    this.setSource(source);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayersArray(opt_array) {\r\n    const array = opt_array ? opt_array : [];\r\n    array.push(this);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getLayerStatesArray(opt_states) {\r\n    const states = opt_states ? opt_states : [];\r\n    states.push(this.getLayerState());\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * Get the layer source.\r\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSource() {\r\n    const source = this.get(LayerProperty.SOURCE);\r\n    return (\r\n      /** @type {module:ol/source/Source} */ (source) || null\r\n    );\r\n  }\r\n\r\n  /**\r\n    * @inheritDoc\r\n    */\r\n  getSourceState() {\r\n    const source = this.getSource();\r\n    return !source ? SourceState.UNDEFINED : source.getState();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourceChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourcePropertyChange_() {\r\n    if (this.sourceChangeKey_) {\r\n      unlistenByKey(this.sourceChangeKey_);\r\n      this.sourceChangeKey_ = null;\r\n    }\r\n    const source = this.getSource();\r\n    if (source) {\r\n      this.sourceChangeKey_ = listen(source,\r\n        EventType.CHANGE, this.handleSourceChange_, this);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Sets the layer to be rendered on top of other layers on a map. The map will\r\n   * not manage this layer in its layers collection, and the callback in\r\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\r\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\r\n   * use `#setMap(null)`.\r\n   *\r\n   * To add the layer to a map and have it managed by the map, use\r\n   * {@link module:ol/Map#addLayer} instead.\r\n   * @param {module:ol/PluggableMap} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.mapPrecomposeKey_) {\r\n      unlistenByKey(this.mapPrecomposeKey_);\r\n      this.mapPrecomposeKey_ = null;\r\n    }\r\n    if (!map) {\r\n      this.changed();\r\n    }\r\n    if (this.mapRenderKey_) {\r\n      unlistenByKey(this.mapRenderKey_);\r\n      this.mapRenderKey_ = null;\r\n    }\r\n    if (map) {\r\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\r\n        const layerState = this.getLayerState();\r\n        layerState.managed = false;\r\n        layerState.zIndex = Infinity;\r\n        evt.frameState.layerStatesArray.push(layerState);\r\n        evt.frameState.layerStates[getUid(this)] = layerState;\r\n      }, this);\r\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer source.\r\n   * @param {module:ol/source/Source} source The layer source.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSource(source) {\r\n    this.set(LayerProperty.SOURCE, source);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Return `true` if the layer is visible, and if the passed resolution is\r\n * between the layer's minResolution and maxResolution. The comparison is\r\n * inclusive for `minResolution` and exclusive for `maxResolution`.\r\n * @param {module:ol/layer/Layer~State} layerState Layer state.\r\n * @param {number} resolution Resolution.\r\n * @return {boolean} The layer is visible at the given resolution.\r\n */\r\nexport function visibleAtResolution(layerState, resolution) {\r\n  return layerState.visible && resolution >= layerState.minResolution &&\r\n      resolution < layerState.maxResolution;\r\n}\r\n\r\n\r\nexport default Layer;\r\n"],"names":["const","super"],"mappings":"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"}
{"version":3,"file":"has.js","sources":["../../src/ol/has.js"],"sourcesContent":["/**\r\n * @module ol/has\r\n */\r\n\r\nconst ua = typeof navigator !== 'undefined' ?\r\n  navigator.userAgent.toLowerCase() : '';\r\n\r\n/**\r\n * User agent string says we are dealing with Firefox as browser.\r\n * @type {boolean}\r\n */\r\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\r\n\r\n/**\r\n * User agent string says we are dealing with Safari as browser.\r\n * @type {boolean}\r\n */\r\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a WebKit engine.\r\n * @type {boolean}\r\n */\r\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a Mac as platform.\r\n * @type {boolean}\r\n */\r\nexport const MAC = ua.indexOf('macintosh') !== -1;\r\n\r\n\r\n/**\r\n * The ratio between physical pixels and device-independent pixels\r\n * (dips) on the device (`window.devicePixelRatio`).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\r\n\r\n\r\n/**\r\n * True if the browser's Canvas implementation implements {get,set}LineDash.\r\n * @type {boolean}\r\n */\r\nexport const CANVAS_LINE_DASH = function() {\r\n  let has = false;\r\n  try {\r\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n  return has;\r\n}();\r\n\r\n\r\n/**\r\n * Is HTML5 geolocation supported in the current browser?\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport const GEOLOCATION = 'geolocation' in navigator;\r\n\r\n\r\n/**\r\n * True if browser supports touch events.\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport const TOUCH = 'ontouchstart' in window;\r\n\r\n\r\n/**\r\n * True if browser supports pointer events.\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport const POINTER = 'PointerEvent' in window;\r\n\r\n\r\n/**\r\n * True if browser supports ms pointer events (IE 10).\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\r\n\r\n\r\nexport {HAS as WEBGL} from './webgl.js';\r\n"],"names":["const","let"],"mappings":"AAAA;;;;AAIAA,GAAK,CAAC,EAAE,GAAG,OAAO,SAAS,KAAK,WAAW;EACzC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;;;;;;AAMzC,OAAOA,GAAK,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;AAMpD,OAAOA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;AAM/E,OAAOA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;AAM9E,OAAOA,GAAK,CAAC,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;;;;;AAUlD,OAAOA,GAAK,CAAC,kBAAkB,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;;;;;;;AAO/D,OAAOA,GAAK,CAAC,gBAAgB,GAAG,WAAW;EACzCC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;EAChB,IAAI;IACF,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;GACvE,CAAC,OAAO,CAAC,EAAE;;GAEX;EACD,OAAO,GAAG,CAAC;CACZ,EAAE,CAAC;;;;;;;;;AASJ,OAAOD,GAAK,CAAC,WAAW,GAAG,aAAa,IAAI,SAAS,CAAC;;;;;;;;;AAStD,OAAOA,GAAK,CAAC,KAAK,GAAG,cAAc,IAAI,MAAM,CAAC;;;;;;;;AAQ9C,OAAOA,GAAK,CAAC,OAAO,GAAG,cAAc,IAAI,MAAM,CAAC;;;;;;;;AAQhD,OAAOA,GAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;;;AAGxD,QAAQ,GAAG,IAAI,KAAK,OAAO,YAAY,CAAC;"}
{"version":3,"file":"Triangulation.js","sources":["../../../src/ol/reproj/Triangulation.js"],"sourcesContent":["/**\r\n * @module ol/reproj/Triangulation\r\n */\r\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\r\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\r\nimport {modulo} from '../math.js';\r\nimport {getTransform} from '../proj.js';\r\n\r\n\r\n/**\r\n * Single triangle; consists of 3 source points and 3 target points.\r\n * @typedef {Object} Triangle\r\n * @property {Array.<module:ol/coordinate~Coordinate>} source\r\n * @property {Array.<module:ol/coordinate~Coordinate>} target\r\n */\r\n\r\n\r\n/**\r\n * Maximum number of subdivision steps during raster reprojection triangulation.\r\n * Prevents high memory usage and large number of proj4 calls (for certain\r\n * transformations and areas). At most `2*(2^this)` triangles are created for\r\n * each triangulated extent (tile/image).\r\n * @type {number}\r\n */\r\nconst MAX_SUBDIVISION = 10;\r\n\r\n\r\n/**\r\n * Maximum allowed size of triangle relative to world width. When transforming\r\n * corners of world extent between certain projections, the resulting\r\n * triangulation seems to have zero error and no subdivision is performed. If\r\n * the triangle width is more than this (relative to world width; 0-1),\r\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\r\n * @type {number}\r\n */\r\nconst MAX_TRIANGLE_WIDTH = 0.25;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class containing triangulation of the given target extent.\r\n * Used for determining source data and the reprojection itself.\r\n */\r\nclass Triangulation {\r\n\r\n  /**\r\n   * @param {module:ol/proj/Projection} sourceProj Source projection.\r\n   * @param {module:ol/proj/Projection} targetProj Target projection.\r\n   * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\r\n   * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\r\n   * @param {number} errorThreshold Acceptable error (in source units).\r\n   */\r\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\r\n\r\n    /**\r\n     * @type {module:ol/proj/Projection}\r\n     * @private\r\n     */\r\n    this.sourceProj_ = sourceProj;\r\n\r\n    /**\r\n     * @type {module:ol/proj/Projection}\r\n     * @private\r\n     */\r\n    this.targetProj_ = targetProj;\r\n\r\n    /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\r\n    let transformInvCache = {};\r\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\r\n\r\n    /**\r\n     * @param {module:ol/coordinate~Coordinate} c A coordinate.\r\n     * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\r\n     * @private\r\n     */\r\n    this.transformInv_ = function(c) {\r\n      const key = c[0] + '/' + c[1];\r\n      if (!transformInvCache[key]) {\r\n        transformInvCache[key] = transformInv(c);\r\n      }\r\n      return transformInvCache[key];\r\n    };\r\n\r\n    /**\r\n     * @type {module:ol/extent~Extent}\r\n     * @private\r\n     */\r\n    this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\r\n\r\n    /**\r\n     * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\r\n     * @private\r\n     */\r\n    this.triangles_ = [];\r\n\r\n    /**\r\n     * Indicates that the triangulation crosses edge of the source projection.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.wrapsXInSource_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\r\n        !!maxSourceExtent &&\r\n        !!this.sourceProj_.getExtent() &&\r\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\r\n      getWidth(this.sourceProj_.getExtent()) : null;\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\r\n      getWidth(this.targetProj_.getExtent()) : null;\r\n\r\n    const destinationTopLeft = getTopLeft(targetExtent);\r\n    const destinationTopRight = getTopRight(targetExtent);\r\n    const destinationBottomRight = getBottomRight(targetExtent);\r\n    const destinationBottomLeft = getBottomLeft(targetExtent);\r\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\r\n    const sourceTopRight = this.transformInv_(destinationTopRight);\r\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\r\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\r\n\r\n    this.addQuad_(\r\n      destinationTopLeft, destinationTopRight,\r\n      destinationBottomRight, destinationBottomLeft,\r\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\r\n      MAX_SUBDIVISION);\r\n\r\n    if (this.wrapsXInSource_) {\r\n      let leftBound = Infinity;\r\n      this.triangles_.forEach(function(triangle, i, arr) {\r\n        leftBound = Math.min(leftBound,\r\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\r\n      });\r\n\r\n      // Shift triangles to be as close to `leftBound` as possible\r\n      // (if the distance is more than `worldWidth / 2` it can be closer.\r\n      this.triangles_.forEach(function(triangle) {\r\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\r\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\r\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\r\n            [triangle.source[1][0], triangle.source[1][1]],\r\n            [triangle.source[2][0], triangle.source[2][1]]];\r\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[0][0] -= this.sourceWorldWidth_;\r\n          }\r\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[1][0] -= this.sourceWorldWidth_;\r\n          }\r\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n            newTriangle[2][0] -= this.sourceWorldWidth_;\r\n          }\r\n\r\n          // Rarely (if the extent contains both the dateline and prime meridian)\r\n          // the shift can in turn break some triangles.\r\n          // Detect this here and don't shift in such cases.\r\n          const minX = Math.min(\r\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n          const maxX = Math.max(\r\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\r\n            triangle.source = newTriangle;\r\n          }\r\n        }\r\n      }.bind(this));\r\n    }\r\n\r\n    transformInvCache = {};\r\n  }\r\n\r\n  /**\r\n   * Adds triangle to the triangulation.\r\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\r\n   * @private\r\n   */\r\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\r\n    this.triangles_.push({\r\n      source: [aSrc, bSrc, cSrc],\r\n      target: [a, b, c]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds quad (points in clock-wise order) to the triangulation\r\n   * (and reprojects the vertices) if valid.\r\n   * Performs quad subdivision if needed to increase precision.\r\n   *\r\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\r\n   * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\r\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\r\n   * @private\r\n   */\r\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\r\n\r\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\r\n    const sourceCoverageX = this.sourceWorldWidth_ ?\r\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\r\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\r\n\r\n    // when the quad is wrapped in the source projection\r\n    // it covers most of the projection extent, but not fully\r\n    const wrapsX = this.sourceProj_.canWrapX() &&\r\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\r\n\r\n    let needsSubdivision = false;\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\r\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\r\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\r\n        needsSubdivision |=\r\n            targetCoverageX > MAX_TRIANGLE_WIDTH;\r\n      }\r\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\r\n        needsSubdivision |=\r\n            sourceCoverageX > MAX_TRIANGLE_WIDTH;\r\n      }\r\n    }\r\n\r\n    if (!needsSubdivision && this.maxSourceExtent_) {\r\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\r\n        // whole quad outside source projection extent -> ignore\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!needsSubdivision) {\r\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\r\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\r\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\r\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\r\n        if (maxSubdivision > 0) {\r\n          needsSubdivision = true;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (!needsSubdivision) {\r\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\r\n        const centerSrc = this.transformInv_(center);\r\n\r\n        let dx;\r\n        if (wrapsX) {\r\n          const centerSrcEstimX =\r\n              (modulo(aSrc[0], sourceWorldWidth) +\r\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\r\n          dx = centerSrcEstimX -\r\n              modulo(centerSrc[0], sourceWorldWidth);\r\n        } else {\r\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\r\n        }\r\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\r\n        const centerSrcErrorSquared = dx * dx + dy * dy;\r\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\r\n      }\r\n      if (needsSubdivision) {\r\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\r\n          // split horizontally (top & bottom)\r\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\r\n          const bcSrc = this.transformInv_(bc);\r\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\r\n          const daSrc = this.transformInv_(da);\r\n\r\n          this.addQuad_(\r\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\r\n          this.addQuad_(\r\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\r\n        } else {\r\n          // split vertically (left & right)\r\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n          const abSrc = this.transformInv_(ab);\r\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\r\n          const cdSrc = this.transformInv_(cd);\r\n\r\n          this.addQuad_(\r\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\r\n          this.addQuad_(\r\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (wrapsX) {\r\n      if (!this.canWrapXInSource_) {\r\n        return;\r\n      }\r\n      this.wrapsXInSource_ = true;\r\n    }\r\n\r\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\r\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\r\n  }\r\n\r\n  /**\r\n   * Calculates extent of the 'source' coordinates from all the triangles.\r\n   *\r\n   * @return {module:ol/extent~Extent} Calculated extent.\r\n   */\r\n  calculateSourceExtent() {\r\n    const extent = createEmpty();\r\n\r\n    this.triangles_.forEach(function(triangle, i, arr) {\r\n      const src = triangle.source;\r\n      extendCoordinate(extent, src[0]);\r\n      extendCoordinate(extent, src[1]);\r\n      extendCoordinate(extent, src[2]);\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\r\n   */\r\n  getTriangles() {\r\n    return this.triangles_;\r\n  }\r\n}\r\n\r\nexport default Triangulation;\r\n"],"names":["const","let"],"mappings":"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"}
{"version":3,"file":"Image.js","sources":["../../../src/ol/reproj/Image.js"],"sourcesContent":["/**\r\n * @module ol/reproj/Image\r\n */\r\nimport {ERROR_THRESHOLD} from './common.js';\r\n\r\nimport ImageBase from '../ImageBase.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\r\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\r\nimport Triangulation from '../reproj/Triangulation.js';\r\n\r\n\r\n/**\r\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected image.\r\n * See {@link module:ol/source/Image~ImageSource}.\r\n */\r\nclass ReprojImage extends ImageBase {\r\n  /**\r\n   * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\r\n   * @param {module:ol/proj/Projection} targetProj Target projection.\r\n   * @param {module:ol/extent~Extent} targetExtent Target extent.\r\n   * @param {number} targetResolution Target resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/reproj/Image~FunctionType} getImageFunction\r\n   *     Function returning source images (extent, resolution, pixelRatio).\r\n   */\r\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\r\n    const maxSourceExtent = sourceProj.getExtent();\r\n    const maxTargetExtent = targetProj.getExtent();\r\n\r\n    const limitedTargetExtent = maxTargetExtent ?\r\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n\r\n    const targetCenter = getCenter(limitedTargetExtent);\r\n    const sourceResolution = calculateSourceResolution(\r\n      sourceProj, targetProj, targetCenter, targetResolution);\r\n\r\n    const errorThresholdInPixels = ERROR_THRESHOLD;\r\n\r\n    const triangulation = new Triangulation(\r\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\r\n      sourceResolution * errorThresholdInPixels);\r\n\r\n    const sourceExtent = triangulation.calculateSourceExtent();\r\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\r\n    let state = ImageState.LOADED;\r\n    if (sourceImage) {\r\n      state = ImageState.IDLE;\r\n    }\r\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\r\n\r\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/proj/Projection}\r\n     */\r\n    this.targetProj_ = targetProj;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/extent~Extent}\r\n     */\r\n    this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!module:ol/reproj/Triangulation}\r\n     */\r\n    this.triangulation_ = triangulation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.targetResolution_ = targetResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/extent~Extent}\r\n     */\r\n    this.targetExtent_ = targetExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/ImageBase}\r\n     */\r\n    this.sourceImage_ = sourceImage;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.sourcePixelRatio_ = sourcePixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/events~EventsKey}\r\n     */\r\n    this.sourceListenerKey_ = null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    if (this.state == ImageState.LOADING) {\r\n      this.unlistenSource_();\r\n    }\r\n    ImageBase.prototype.disposeInternal.call(this);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImage() {\r\n    return this.canvas_;\r\n  }\r\n\r\n  /**\r\n   * @return {module:ol/proj/Projection} Projection.\r\n   */\r\n  getProjection() {\r\n    return this.targetProj_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  reproject_() {\r\n    const sourceState = this.sourceImage_.getState();\r\n    if (sourceState == ImageState.LOADED) {\r\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\r\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\r\n\r\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\r\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\r\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\r\n          extent: this.sourceImage_.getExtent(),\r\n          image: this.sourceImage_.getImage()\r\n        }], 0);\r\n    }\r\n    this.state = sourceState;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    if (this.state == ImageState.IDLE) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n\r\n      const sourceState = this.sourceImage_.getState();\r\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n        this.reproject_();\r\n      } else {\r\n        this.sourceListenerKey_ = listen(this.sourceImage_,\r\n          EventType.CHANGE, function(e) {\r\n            const sourceState = this.sourceImage_.getState();\r\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n              this.unlistenSource_();\r\n              this.reproject_();\r\n            }\r\n          }, this);\r\n        this.sourceImage_.load();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unlistenSource_() {\r\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\r\n    this.sourceListenerKey_ = null;\r\n  }\r\n}\r\n\r\n\r\nexport default ReprojImage;\r\n"],"names":["const","let","super"],"mappings":"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"}
{"version":3,"file":"Kinetic.js","sources":["../../src/ol/Kinetic.js"],"sourcesContent":["/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nclass Kinetic {\r\n\r\n  /**\r\n   * @param {number} decay Rate of decay (must be negative).\r\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n   * @param {number} delay Delay to consider to calculate the kinetic\r\n   *     initial values (milliseconds).\r\n   */\r\n  constructor(decay, minVelocity, delay) {\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.decay_ = decay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minVelocity_ = minVelocity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delay_ = delay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n    this.points_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  begin() {\r\n    this.points_.length = 0;\r\n    this.angle_ = 0;\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   */\r\n  update(x, y) {\r\n    this.points_.push(x, y, Date.now());\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether we should do kinetic animation.\r\n   */\r\n  end() {\r\n    if (this.points_.length < 6) {\r\n      // at least 2 points are required (i.e. there must be at least 6 elements\r\n      // in the array)\r\n      return false;\r\n    }\r\n    const delay = Date.now() - this.delay_;\r\n    const lastIndex = this.points_.length - 3;\r\n    if (this.points_[lastIndex + 2] < delay) {\r\n      // the last tracked point is too old, which means that the user stopped\r\n      // panning before releasing the map\r\n      return false;\r\n    }\r\n\r\n    // get the first point which still falls into the delay time\r\n    let firstIndex = lastIndex - 3;\r\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n      firstIndex -= 3;\r\n    }\r\n\r\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n    // we don't want a duration of 0 (divide by zero)\r\n    // we also make sure the user panned for a duration of at least one frame\r\n    // (1/60s) to compute sane displacement values\r\n    if (duration < 1000 / 60) {\r\n      return false;\r\n    }\r\n\r\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n    this.angle_ = Math.atan2(dy, dx);\r\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n    return this.initialVelocity_ > this.minVelocity_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Total distance travelled (pixels).\r\n   */\r\n  getDistance() {\r\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Angle of the kinetic panning animation (radians).\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n}\r\n\r\nexport default Kinetic;\r\n"],"names":["const","let"],"mappings":"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"}
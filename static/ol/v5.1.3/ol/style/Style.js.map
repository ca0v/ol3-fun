{"version":3,"file":"Style.js","sources":["../../../src/ol/style/Style.js"],"sourcesContent":["/**\r\n * @module ol/style/Style\r\n */\r\n\r\n/**\r\n * Feature styles.\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *\r\n *  var fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)'\r\n *  });\r\n *  var stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25\r\n *  });\r\n *  var styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke\r\n *    })\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *  import GeometryType from 'ol/geom/GeometryType';\r\n *\r\n *  var white = [255, 255, 255, 1];\r\n *  var blue = [0, 153, 255, 1];\r\n *  var width = 3;\r\n *  styles[GeometryType.POLYGON] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5]\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POLYGON] =\r\n *      styles[GeometryType.POLYGON];\r\n *  styles[GeometryType.LINE_STRING] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2\r\n *      })\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_LINE_STRING] =\r\n *      styles[GeometryType.LINE_STRING];\r\n *  styles[GeometryType.POINT] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2\r\n *        })\r\n *      }),\r\n *      zIndex: Infinity\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POINT] =\r\n *      styles[GeometryType.POINT];\r\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n *      styles[GeometryType.POLYGON].concat(\r\n *          styles[GeometryType.LINE_STRING],\r\n *          styles[GeometryType.POINT]\r\n *      );\r\n * ```\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport CircleStyle from '../style/Circle.js';\r\nimport Fill from '../style/Fill.js';\r\nimport Stroke from '../style/Stroke.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\r\n * vector layer can be styled.\r\n *\r\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\r\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\r\n */\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\r\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\r\n * RenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {module:ol/style/Fill} [fill] Fill style.\r\n * @property {module:ol/style/Image} [image] Image style.\r\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\r\n * @property {module:ol/style/Text} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n * @api\r\n */\r\nclass Style {\r\n  /**\r\n   * @param {module:ol/style/Style~Options=} opt_options Style options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!module:ol/style/Style~GeometryFunction}\r\n     */\r\n    this.geometryFunction_ = defaultGeometryFunction;\r\n\r\n    if (options.geometry !== undefined) {\r\n      this.setGeometry(options.geometry);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/style/Fill}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n       * @private\r\n       * @type {module:ol/style/Image}\r\n       */\r\n    this.image_ = options.image !== undefined ? options.image : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/style/Style~RenderFunction|null}\r\n     */\r\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/style/Stroke}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/style/Text}\r\n     */\r\n    this.text_ = options.text !== undefined ? options.text : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zIndex_ = options.zIndex;\r\n\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {module:ol/style/Style} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    let geometry = this.getGeometry();\r\n    if (geometry && geometry.clone) {\r\n      geometry = geometry.clone();\r\n    }\r\n    return new Style({\r\n      geometry: geometry,\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      image: this.getImage() ? this.getImage().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      text: this.getText() ? this.getText().clone() : undefined,\r\n      zIndex: this.getZIndex()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setRenderer} or the `renderer` constructor option.\r\n   * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n   * and `image` options of the style will be ignored.\r\n   * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setRenderer(renderer) {\r\n    this.renderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Get the geometry to be rendered.\r\n   * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\r\n   * Feature property or geometry or function that returns the geometry that will\r\n   * be rendered with this style.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n\r\n  /**\r\n   * Get the function used to generate a geometry for rendering.\r\n   * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\r\n   * and returns the geometry to render instead of the feature's geometry.\r\n   * @api\r\n   */\r\n  getGeometryFunction() {\r\n    return this.geometryFunction_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style.\r\n   * @return {module:ol/style/Fill} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {module:ol/style/Fill} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Get the image style.\r\n   * @return {module:ol/style/Image} Image style.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Set the image style.\r\n   * @param {module:ol/style/Image} image Image style.\r\n   * @api\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style.\r\n   * @return {module:ol/style/Stroke} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {module:ol/style/Stroke} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Get the text style.\r\n   * @return {module:ol/style/Text} Text style.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Set the text style.\r\n   * @param {module:ol/style/Text} text Text style.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Get the z-index for the style.\r\n   * @return {number|undefined} ZIndex.\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return this.zIndex_;\r\n  }\r\n\r\n  /**\r\n   * Set a geometry that is rendered instead of the feature's geometry.\r\n   *\r\n   * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\r\n   *     Feature property or geometry or function returning a geometry to render\r\n   *     for this style.\r\n   * @api\r\n   */\r\n  setGeometry(geometry) {\r\n    if (typeof geometry === 'function') {\r\n      this.geometryFunction_ = geometry;\r\n    } else if (typeof geometry === 'string') {\r\n      this.geometryFunction_ = function(feature) {\r\n        return (\r\n          /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\r\n        );\r\n      };\r\n    } else if (!geometry) {\r\n      this.geometryFunction_ = defaultGeometryFunction;\r\n    } else if (geometry !== undefined) {\r\n      this.geometryFunction_ = function() {\r\n        return (\r\n          /** @type {module:ol/geom/Geometry} */ (geometry)\r\n        );\r\n      };\r\n    }\r\n    this.geometry_ = geometry;\r\n  }\r\n\r\n  /**\r\n   * Set the z-index.\r\n   *\r\n   * @param {number|undefined} zIndex ZIndex.\r\n   * @api\r\n   */\r\n  setZIndex(zIndex) {\r\n    this.zIndex_ = zIndex;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {module:ol/style/Style~StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n  let styleFunction;\r\n\r\n  if (typeof obj === 'function') {\r\n    styleFunction = obj;\r\n  } else {\r\n    /**\r\n     * @type {Array.<module:ol/style/Style>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(obj instanceof Style,\r\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\r\n      styles = [obj];\r\n    }\r\n    styleFunction = function() {\r\n      return styles;\r\n    };\r\n  }\r\n  return styleFunction;\r\n}\r\n\r\n\r\n/**\r\n * @type {Array.<module:ol/style/Style>}\r\n */\r\nlet defaultStyles = null;\r\n\r\n\r\n/**\r\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array.<module:ol/style/Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n  // We don't use an immediately-invoked function\r\n  // and a closure so we don't get an error at script evaluation time in\r\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\r\n  // canvas.getContext('2d') at construction time, which will cause an.error\r\n  // in such browsers.)\r\n  if (!defaultStyles) {\r\n    const fill = new Fill({\r\n      color: 'rgba(255,255,255,0.4)'\r\n    });\r\n    const stroke = new Stroke({\r\n      color: '#3399CC',\r\n      width: 1.25\r\n    });\r\n    defaultStyles = [\r\n      new Style({\r\n        image: new CircleStyle({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          radius: 5\r\n        }),\r\n        fill: fill,\r\n        stroke: stroke\r\n      })\r\n    ];\r\n  }\r\n  return defaultStyles;\r\n}\r\n\r\n\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\r\n  const styles = {};\r\n  const white = [255, 255, 255, 1];\r\n  const blue = [0, 153, 255, 1];\r\n  const width = 3;\r\n  styles[GeometryType.POLYGON] = [\r\n    new Style({\r\n      fill: new Fill({\r\n        color: [255, 255, 255, 0.5]\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POLYGON] =\r\n      styles[GeometryType.POLYGON];\r\n\r\n  styles[GeometryType.LINE_STRING] = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: white,\r\n        width: width + 2\r\n      })\r\n    }),\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: blue,\r\n        width: width\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_LINE_STRING] =\r\n      styles[GeometryType.LINE_STRING];\r\n\r\n  styles[GeometryType.CIRCLE] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING]\r\n      );\r\n\r\n\r\n  styles[GeometryType.POINT] = [\r\n    new Style({\r\n      image: new CircleStyle({\r\n        radius: width * 2,\r\n        fill: new Fill({\r\n          color: blue\r\n        }),\r\n        stroke: new Stroke({\r\n          color: white,\r\n          width: width / 2\r\n        })\r\n      }),\r\n      zIndex: Infinity\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POINT] =\r\n      styles[GeometryType.POINT];\r\n\r\n  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING],\r\n        styles[GeometryType.POINT]\r\n      );\r\n\r\n  return styles;\r\n}\r\n\r\n\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\r\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n  return feature.getGeometry();\r\n}\r\n\r\nexport default Style;\r\n"],"names":["const","let"],"mappings":"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"}
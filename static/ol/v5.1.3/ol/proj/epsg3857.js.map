{"version":3,"file":"epsg3857.js","sources":["../../../src/ol/proj/epsg3857.js"],"sourcesContent":["/**\r\n * @module ol/proj/epsg3857\r\n */\r\nimport {cosh} from '../math.js';\r\nimport Projection from '../proj/Projection.js';\r\nimport Units from '../proj/Units.js';\r\n\r\n\r\n/**\r\n * Radius of WGS84 sphere\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RADIUS = 6378137;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const HALF_SIZE = Math.PI * RADIUS;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {module:ol/extent~Extent}\r\n */\r\nexport const EXTENT = [\r\n  -HALF_SIZE, -HALF_SIZE,\r\n  HALF_SIZE, HALF_SIZE\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {module:ol/extent~Extent}\r\n */\r\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for web/spherical Mercator (EPSG:3857).\r\n */\r\nclass EPSG3857Projection extends Projection {\r\n\r\n  /**\r\n   * @param {string} code Code.\r\n   */\r\n  constructor(code) {\r\n    super({\r\n      code: code,\r\n      units: Units.METERS,\r\n      extent: EXTENT,\r\n      global: true,\r\n      worldExtent: WORLD_EXTENT,\r\n      getPointResolution: function(resolution, point) {\r\n        return resolution / cosh(point[1] / RADIUS);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Projections equal to EPSG:3857.\r\n *\r\n * @const\r\n * @type {Array.<module:ol/proj/Projection>}\r\n */\r\nexport const PROJECTIONS = [\r\n  new EPSG3857Projection('EPSG:3857'),\r\n  new EPSG3857Projection('EPSG:102100'),\r\n  new EPSG3857Projection('EPSG:102113'),\r\n  new EPSG3857Projection('EPSG:900913'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\r\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\r\n];\r\n\r\n\r\n/**\r\n * Transformation from EPSG:4326 to EPSG:3857.\r\n *\r\n * @param {Array.<number>} input Input array of coordinate values.\r\n * @param {Array.<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array.<number>} Output array of coordinate values.\r\n */\r\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\r\n  const length = input.length;\r\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  let output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  const halfSize = HALF_SIZE;\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = halfSize * input[i] / 180;\r\n    let y = RADIUS *\r\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\r\n    if (y > halfSize) {\r\n      y = halfSize;\r\n    } else if (y < -halfSize) {\r\n      y = -halfSize;\r\n    }\r\n    output[i + 1] = y;\r\n  }\r\n  return output;\r\n}\r\n\r\n\r\n/**\r\n * Transformation from EPSG:3857 to EPSG:4326.\r\n *\r\n * @param {Array.<number>} input Input array of coordinate values.\r\n * @param {Array.<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array.<number>} Output array of coordinate values.\r\n */\r\nexport function toEPSG4326(input, opt_output, opt_dimension) {\r\n  const length = input.length;\r\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  let output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = 180 * input[i] / HALF_SIZE;\r\n    output[i + 1] = 360 * Math.atan(\r\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\r\n  }\r\n  return output;\r\n}\r\n"],"names":["const","super","let"],"mappings":"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"}
{"version":3,"file":"featureloader.js","sources":["../../src/ol/featureloader.js"],"sourcesContent":["/**\r\n * @module ol/featureloader\r\n */\r\nimport {UNDEFINED} from './functions.js';\r\nimport FormatType from './format/FormatType.js';\r\n\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * load features.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\r\n * a `{number}` representing the resolution (map units per pixel) and an\r\n * {@link module:ol/proj/Projection} for the projection  as\r\n * arguments. `this` within the function is bound to the\r\n * {@link module:ol/source/Vector} it's called from.\r\n *\r\n * The function is responsible for loading the features and adding them to the\r\n * source.\r\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\r\n *                    module:ol/proj/Projection)} FeatureLoader\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * get the url to load features from.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area\r\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\r\n * and an {@link module:ol/proj/Projection} for the projection  as\r\n * arguments and returns a `{string}` representing the URL.\r\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\r\n * @param {module:ol/format/Feature} format Feature format.\r\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\r\n *     Function called with the loaded features and optionally with the data\r\n *     projection. Called with the vector tile or source as `this`.\r\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\r\n *     Function called when loading failed. Called with the vector tile or\r\n *     source as `this`.\r\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\r\n */\r\nexport function loadFeaturesXhr(url, format, success, failure) {\r\n  return (\r\n    /**\r\n     * @param {module:ol/extent~Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {module:ol/proj/Projection} projection Projection.\r\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\r\n     */\r\n    function(extent, resolution, projection) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('GET',\r\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\r\n        true);\r\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\r\n        xhr.responseType = 'arraybuffer';\r\n      }\r\n      /**\r\n       * @param {Event} event Event.\r\n       * @private\r\n       */\r\n      xhr.onload = function(event) {\r\n        // status will be 0 for file:// urls\r\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\r\n          const type = format.getType();\r\n          /** @type {Document|Node|Object|string|undefined} */\r\n          let source;\r\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\r\n            source = xhr.responseText;\r\n          } else if (type == FormatType.XML) {\r\n            source = xhr.responseXML;\r\n            if (!source) {\r\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\r\n            }\r\n          } else if (type == FormatType.ARRAY_BUFFER) {\r\n            source = /** @type {ArrayBuffer} */ (xhr.response);\r\n          }\r\n          if (source) {\r\n            success.call(this, format.readFeatures(source,\r\n              {featureProjection: projection}),\r\n            format.readProjection(source), format.getLastExtent());\r\n          } else {\r\n            failure.call(this);\r\n          }\r\n        } else {\r\n          failure.call(this);\r\n        }\r\n      }.bind(this);\r\n      /**\r\n       * @private\r\n       */\r\n      xhr.onerror = function() {\r\n        failure.call(this);\r\n      }.bind(this);\r\n      xhr.send();\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Create an XHR feature loader for a `url` and `format`. The feature loader\r\n * loads features (with XHR), parses the features, and adds them to the\r\n * vector source.\r\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\r\n * @param {module:ol/format/Feature} format Feature format.\r\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function xhr(url, format) {\r\n  return loadFeaturesXhr(url, format,\r\n    /**\r\n     * @param {Array.<module:ol/Feature>} features The loaded features.\r\n     * @param {module:ol/proj/Projection} dataProjection Data\r\n     * projection.\r\n     * @this {module:ol/source/Vector}\r\n     */\r\n    function(features, dataProjection) {\r\n      this.addFeatures(features);\r\n    }, /* FIXME handle error */ UNDEFINED);\r\n}\r\n"],"names":["const","let"],"mappings":"AAAA;;;AAGA,QAAQ,SAAS,OAAO,gBAAgB,CAAC;AACzC,OAAO,UAAU,MAAM,wBAAwB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6ChD,OAAO,SAAS,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;EAC7D,OAAO;;;;;;;IAOL,SAAS,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;MACvCA,GAAK,CAAC,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;MACjC,GAAG,CAAC,IAAI,CAAC,KAAK;QACZ,OAAO,GAAG,KAAK,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,GAAG;QACrE,IAAI,CAAC,CAAC;MACR,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,UAAU,CAAC,YAAY,EAAE;QAC/C,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC;OAClC;;;;;MAKD,GAAG,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE;;QAE3B,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;UACxDA,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;;UAE9BC,GAAG,CAAC,MAAM,CAAC;UACX,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE;YACtD,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;WAC3B,MAAM,IAAI,IAAI,IAAI,UAAU,CAAC,GAAG,EAAE;YACjC,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;YACzB,IAAI,CAAC,MAAM,EAAE;cACX,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;aAC/E;WACF,MAAM,IAAI,IAAI,IAAI,UAAU,CAAC,YAAY,EAAE;YAC1C,MAAM,8BAA8B,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;WACpD;UACD,IAAI,MAAM,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,MAAM;cAC3C,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;YAClC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;WACxD,MAAM;YACL,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WACpB;SACF,MAAM;UACL,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;OACF,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;MAIb,GAAG,CAAC,OAAO,GAAG,WAAW;QACvB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACpB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACb,GAAG,CAAC,IAAI,EAAE,CAAC;KACZ;GACF,CAAC;CACH;;;;;;;;;;;;AAYD,OAAO,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE;EAC/B,OAAO,eAAe,CAAC,GAAG,EAAE,MAAM;;;;;;;IAOhC,SAAS,QAAQ,EAAE,cAAc,EAAE;MACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5B,2BAA2B,SAAS,CAAC,CAAC;CAC1C;"}
{"version":3,"file":"MapBrowserEvent.js","sources":["../../src/ol/MapBrowserEvent.js"],"sourcesContent":["/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\r\n */\r\nclass MapBrowserEvent extends MapEvent {\r\n\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {module:ol/PluggableMap} map Map.\r\n   * @param {Event} browserEvent Browser event.\r\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\r\n   */\r\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\r\n\r\n    super(type, map, opt_frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {Event}\r\n     * @api\r\n     */\r\n    this.originalEvent = browserEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {module:ol/pixel~Pixel}\r\n     * @api\r\n     */\r\n    this.pixel = map.getEventPixel(browserEvent);\r\n\r\n    /**\r\n     * The coordinate in view projection corresponding to the original browser event.\r\n     * @type {module:ol/coordinate~Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @override\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    super.preventDefault();\r\n    this.originalEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @override\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    super.stopPropagation();\r\n    this.originalEvent.stopPropagation();\r\n  }\r\n}\r\n\r\n\r\nexport default MapBrowserEvent;\r\n"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,QAAQ,MAAM,eAAe,CAAC;;;;;;;AAOrC,IAAM,eAAe,GAAiB;EASpC,wBAAW,CAAC,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE;;IAEjEA,aAAK,OAAC,IAAI,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;;;;;;;;IAQjC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;;;;;;IAOlC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;;;;;;;IAO7C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;;;;;IASzD,IAAI,CAAC,QAAQ,GAAG,YAAY,KAAK,SAAS,GAAG,YAAY,GAAG,KAAK,CAAC;;;;;;0DAEnE;;;;;;;;4BAQD,yCAAc,GAAG;IACfA,kBAAK,CAAC,mBAAc,KAAC,CAAC,CAAC;IACvB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACrC;;;;;;;;4BAQD,2CAAe,GAAG;IAChBA,kBAAK,CAAC,oBAAe,KAAC,CAAC,CAAC;IACxB,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;GACtC;;;EAlE2B,WAmE7B;;;AAGD,eAAe,eAAe,CAAC;"}
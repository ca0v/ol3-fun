{"version":3,"file":"VectorTileLayer.js","sources":["../../../../src/ol/renderer/canvas/VectorTileLayer.js"],"sourcesContent":["/**\r\n * @module ol/renderer/canvas/VectorTileLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport TileState from '../../TileState.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {listen, unlisten} from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport rbush from 'rbush';\r\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\r\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\r\nimport {equivalent as equivalentProjection} from '../../proj.js';\r\nimport Units from '../../proj/Units.js';\r\nimport ReplayType from '../../render/ReplayType.js';\r\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\r\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\r\nimport {ORDER} from '../../render/replay.js';\r\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\r\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\nimport {\r\n  create as createTransform,\r\n  compose as composeTransform,\r\n  reset as resetTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform\r\n} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\r\n */\r\nconst IMAGE_REPLAYS = {\r\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\r\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\r\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\r\n};\r\n\r\n\r\n/**\r\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\r\n */\r\nconst VECTOR_REPLAYS = {\r\n  'image': [ReplayType.DEFAULT],\r\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\r\n  'vector': ORDER\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector tile layers.\r\n * @api\r\n */\r\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\r\n\r\n  /**\r\n   * @param {module:ol/layer/VectorTile} layer VectorTile layer.\r\n   */\r\n  constructor(layer) {\r\n\r\n    super(layer, true);\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedLayerRevision_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/transform~Transform}\r\n     */\r\n    this.tmpTransform_ = createTransform();\r\n\r\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\r\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\r\n\r\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTile(z, x, y, pixelRatio, projection) {\r\n    const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\r\n    if (tile.getState() === TileState.LOADED) {\r\n      this.createReplayGroup_(tile, pixelRatio, projection);\r\n      if (this.context) {\r\n        this.renderTileImage_(tile, pixelRatio, projection);\r\n      }\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState, layerState) {\r\n    const layer = this.getLayer();\r\n    const layerRevision = layer.getRevision();\r\n    if (this.renderedLayerRevision_ != layerRevision) {\r\n      this.renderedTiles.length = 0;\r\n      const renderMode = layer.getRenderMode();\r\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\r\n        this.context = createCanvasContext2D();\r\n      }\r\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\r\n        this.context = null;\r\n      }\r\n    }\r\n    this.renderedLayerRevision_ = layerRevision;\r\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/VectorImageTile} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/proj/Projection} projection Projection.\r\n   * @private\r\n   */\r\n  createReplayGroup_(tile, pixelRatio, projection) {\r\n    const layer = this.getLayer();\r\n    const revision = layer.getRevision();\r\n    const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\r\n\r\n    const replayState = tile.getReplayState(layer);\r\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\r\n        replayState.renderedRenderOrder == renderOrder) {\r\n      return;\r\n    }\r\n\r\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\r\n    const sourceTileGrid = source.getTileGrid();\r\n    const tileGrid = source.getTileGridForProjection(projection);\r\n    const resolution = tileGrid.getResolution(tile.tileCoord[0]);\r\n    const tileExtent = tile.extent;\r\n\r\n    const zIndexKeys = {};\r\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\r\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\r\n      if (sourceTile.getState() != TileState.LOADED) {\r\n        continue;\r\n      }\r\n\r\n      const sourceTileCoord = sourceTile.tileCoord;\r\n      const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\r\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\r\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\r\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\r\n      const tileProjection = sourceTile.getProjection();\r\n      let reproject = false;\r\n      if (!equivalentProjection(projection, tileProjection)) {\r\n        reproject = true;\r\n        sourceTile.setProjection(projection);\r\n      }\r\n      replayState.dirty = false;\r\n      const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\r\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\r\n      const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n\r\n      /**\r\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\r\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\r\n       */\r\n      const render = function(feature) {\r\n        let styles;\r\n        const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\r\n        if (styleFunction) {\r\n          styles = styleFunction(feature, resolution);\r\n        }\r\n        if (styles) {\r\n          const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\r\n          this.dirty_ = this.dirty_ || dirty;\r\n          replayState.dirty = replayState.dirty || dirty;\r\n        }\r\n      };\r\n\r\n      const features = sourceTile.getFeatures();\r\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\r\n        features.sort(renderOrder);\r\n      }\r\n      for (let i = 0, ii = features.length; i < ii; ++i) {\r\n        const feature = features[i];\r\n        if (reproject) {\r\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\r\n            // projected tile extent\r\n            tileProjection.setWorldExtent(sourceTileExtent);\r\n            // tile extent in tile pixel space\r\n            tileProjection.setExtent(sourceTile.getExtent());\r\n          }\r\n          feature.getGeometry().transform(tileProjection, projection);\r\n        }\r\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\r\n          render.call(this, feature);\r\n        }\r\n      }\r\n      replayGroup.finish();\r\n      for (const r in replayGroup.getReplays()) {\r\n        zIndexKeys[r] = true;\r\n      }\r\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\r\n    }\r\n    replayState.renderedRevision = revision;\r\n    replayState.renderedRenderOrder = renderOrder;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    const resolution = frameState.viewState.resolution;\r\n    const rotation = frameState.viewState.rotation;\r\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\r\n    const layer = this.getLayer();\r\n    /** @type {!Object.<string, boolean>} */\r\n    const features = {};\r\n\r\n    /** @type {Array.<module:ol/VectorImageTile>} */\r\n    const renderedTiles = this.renderedTiles;\r\n\r\n    let bufferedExtent, found;\r\n    let i, ii, replayGroup;\r\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\r\n      const tile = renderedTiles[i];\r\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\r\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\r\n        continue;\r\n      }\r\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\r\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\r\n        if (sourceTile.getState() != TileState.LOADED) {\r\n          continue;\r\n        }\r\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\r\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\r\n          /**\r\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\r\n           * @return {?} Callback result.\r\n           */\r\n          function(feature) {\r\n            const key = getUid(feature).toString();\r\n            if (!(key in features)) {\r\n              features[key] = true;\r\n              return callback.call(thisArg, feature, layer);\r\n            }\r\n          }, null);\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/VectorTile} tile Tile.\r\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n   * @return {module:ol/transform~Transform} transform Transform.\r\n   * @private\r\n   */\r\n  getReplayTransform_(tile, frameState) {\r\n    const layer = this.getLayer();\r\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\r\n    const tileGrid = source.getTileGrid();\r\n    const tileCoord = tile.tileCoord;\r\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n    const viewState = frameState.viewState;\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const renderResolution = viewState.resolution / pixelRatio;\r\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n    const center = viewState.center;\r\n    const origin = getTopLeft(tileExtent);\r\n    const size = frameState.size;\r\n    const offsetX = Math.round(pixelRatio * size[0] / 2);\r\n    const offsetY = Math.round(pixelRatio * size[1] / 2);\r\n    return composeTransform(this.tmpTransform_,\r\n      offsetX, offsetY,\r\n      tileResolution / renderResolution, tileResolution / renderResolution,\r\n      viewState.rotation,\r\n      (origin[0] - center[0]) / tileResolution,\r\n      (center[1] - origin[1]) / tileResolution);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/events/Event} event Event.\r\n   */\r\n  handleFontsChanged_(event) {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {module:ol/events/Event} event Image style change event.\r\n   * @private\r\n   */\r\n  handleStyleImageChange_(event) {\r\n    this.renderIfReadyAndVisible();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  postCompose(context, frameState, layerState) {\r\n    const layer = this.getLayer();\r\n    const renderMode = layer.getRenderMode();\r\n    if (renderMode != VectorTileRenderType.IMAGE) {\r\n      const declutterReplays = layer.getDeclutter() ? {} : null;\r\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\r\n      const replayTypes = VECTOR_REPLAYS[renderMode];\r\n      const pixelRatio = frameState.pixelRatio;\r\n      const rotation = frameState.viewState.rotation;\r\n      const size = frameState.size;\r\n      let offsetX, offsetY;\r\n      if (rotation) {\r\n        offsetX = Math.round(pixelRatio * size[0] / 2);\r\n        offsetY = Math.round(pixelRatio * size[1] / 2);\r\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\r\n      }\r\n      if (declutterReplays) {\r\n        this.declutterTree_.clear();\r\n      }\r\n      const tiles = this.renderedTiles;\r\n      const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n      const clips = [];\r\n      const zs = [];\r\n      for (let i = tiles.length - 1; i >= 0; --i) {\r\n        const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\r\n        if (tile.getState() == TileState.ABORT) {\r\n          continue;\r\n        }\r\n        const tileCoord = tile.tileCoord;\r\n        const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\r\n        let transform = undefined;\r\n        for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\r\n          const sourceTile = tile.getTile(tile.tileKeys[t]);\r\n          if (sourceTile.getState() != TileState.LOADED) {\r\n            continue;\r\n          }\r\n          const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\r\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\r\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\r\n            // called, or it has no replays of the types we want to render\r\n            continue;\r\n          }\r\n          if (!transform) {\r\n            transform = this.getTransform(frameState, worldOffset);\r\n          }\r\n          const currentZ = sourceTile.tileCoord[0];\r\n          const currentClip = replayGroup.getClipCoords(transform);\r\n          context.save();\r\n          context.globalAlpha = layerState.opacity;\r\n          // Create a clip mask for regions in this low resolution tile that are\r\n          // already filled by a higher resolution tile\r\n          for (let j = 0, jj = clips.length; j < jj; ++j) {\r\n            const clip = clips[j];\r\n            if (currentZ < zs[j]) {\r\n              context.beginPath();\r\n              // counter-clockwise (outer ring) for current tile\r\n              context.moveTo(currentClip[0], currentClip[1]);\r\n              context.lineTo(currentClip[2], currentClip[3]);\r\n              context.lineTo(currentClip[4], currentClip[5]);\r\n              context.lineTo(currentClip[6], currentClip[7]);\r\n              // clockwise (inner ring) for higher resolution tile\r\n              context.moveTo(clip[6], clip[7]);\r\n              context.lineTo(clip[4], clip[5]);\r\n              context.lineTo(clip[2], clip[3]);\r\n              context.lineTo(clip[0], clip[1]);\r\n              context.clip();\r\n            }\r\n          }\r\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\r\n          context.restore();\r\n          clips.push(currentClip);\r\n          zs.push(currentZ);\r\n        }\r\n      }\r\n      if (declutterReplays) {\r\n        replayDeclutter(declutterReplays, context, rotation);\r\n      }\r\n      if (rotation) {\r\n        rotateAtOffset(context, rotation,\r\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\r\n      }\r\n    }\r\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\r\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  renderFeature(feature, squaredTolerance, styles, replayGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    let loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading = renderFeature(\r\n          replayGroup, feature, styles[i], squaredTolerance,\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        replayGroup, feature, styles, squaredTolerance,\r\n        this.handleStyleImageChange_, this);\r\n    }\r\n    return loading;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/VectorImageTile} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/proj/Projection} projection Projection.\r\n   * @private\r\n   */\r\n  renderTileImage_(tile, pixelRatio, projection) {\r\n    const layer = this.getLayer();\r\n    const replayState = tile.getReplayState(layer);\r\n    const revision = layer.getRevision();\r\n    const replays = IMAGE_REPLAYS[layer.getRenderMode()];\r\n    if (replays && replayState.renderedTileRevision !== revision) {\r\n      replayState.renderedTileRevision = revision;\r\n      const tileCoord = tile.wrappedTileCoord;\r\n      const z = tileCoord[0];\r\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\r\n      const tileGrid = source.getTileGridForProjection(projection);\r\n      const resolution = tileGrid.getResolution(z);\r\n      const context = tile.getContext(layer);\r\n      const size = source.getTilePixelSize(z, pixelRatio, projection);\r\n      context.canvas.width = size[0];\r\n      context.canvas.height = size[1];\r\n      const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n      for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\r\n        const sourceTile = tile.getTile(tile.tileKeys[i]);\r\n        if (sourceTile.getState() != TileState.LOADED) {\r\n          continue;\r\n        }\r\n        const pixelScale = pixelRatio / resolution;\r\n        const transform = resetTransform(this.tmpTransform_);\r\n        scaleTransform(transform, pixelScale, -pixelScale);\r\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\r\n        const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\r\n        replayGroup.replay(context, transform, 0, {}, replays);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {module:ol/layer/Layer} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.VECTOR_TILE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\r\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\r\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\r\n */\r\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\r\n};\r\n\r\n\r\nexport default CanvasVectorTileLayerRenderer;\r\n"],"names":["const","super","t","tt","let","this"],"mappings":"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"}
{"version":3,"file":"Layer.js","sources":["../../../src/ol/renderer/Layer.js"],"sourcesContent":["/**\r\n * @module ol/renderer/Layer\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport Observable from '../Observable.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {FALSE, UNDEFINED} from '../functions.js';\r\nimport SourceState from '../source/State.js';\r\n\r\nclass LayerRenderer extends Observable {\r\n\r\n  /**\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   */\r\n  constructor(layer) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/layer/Layer}\r\n     */\r\n    this.layer_ = layer;\r\n\r\n  }\r\n\r\n  /**\r\n   * Create a function that adds loaded tiles to the tile lookup.\r\n   * @param {module:ol/source/Tile} source Tile source.\r\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\r\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\r\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\r\n   * @protected\r\n   */\r\n  createLoadedTileFinder(source, projection, tiles) {\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {module:ol/TileRange} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       */\r\n      function(zoom, tileRange) {\r\n        function callback(tile) {\r\n          if (!tiles[zoom]) {\r\n            tiles[zoom] = {};\r\n          }\r\n          tiles[zoom][tile.tileCoord.toString()] = tile;\r\n        }\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {module:ol/layer/Layer} Layer.\r\n   */\r\n  getLayer() {\r\n    return this.layer_;\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image state.\r\n   * @param {module:ol/events/Event} event Image change event.\r\n   * @private\r\n   */\r\n  handleImageChange_(event) {\r\n    const image = /** @type {module:ol/Image} */ (event.target);\r\n    if (image.getState() === ImageState.LOADED) {\r\n      this.renderIfReadyAndVisible();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load the image if not already loaded, and register the image change\r\n   * listener if needed.\r\n   * @param {module:ol/ImageBase} image Image.\r\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\r\n   * @protected\r\n   */\r\n  loadImage(image) {\r\n    let imageState = image.getState();\r\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\r\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\r\n    }\r\n    if (imageState == ImageState.IDLE) {\r\n      image.load();\r\n      imageState = image.getState();\r\n    }\r\n    return imageState == ImageState.LOADED;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  renderIfReadyAndVisible() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n   * @param {module:ol/source/Tile} tileSource Tile source.\r\n   * @protected\r\n   */\r\n  scheduleExpireCache(frameState, tileSource) {\r\n    if (tileSource.canExpireCache()) {\r\n      /**\r\n       * @param {module:ol/source/Tile} tileSource Tile source.\r\n       * @param {module:ol/PluggableMap} map Map.\r\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n       */\r\n      const postRenderFunction = function(tileSource, map, frameState) {\r\n        const tileSourceKey = getUid(tileSource).toString();\r\n        if (tileSourceKey in frameState.usedTiles) {\r\n          tileSource.expireCache(frameState.viewState.projection,\r\n            frameState.usedTiles[tileSourceKey]);\r\n        }\r\n      }.bind(null, tileSource);\r\n\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\r\n   * @param {module:ol/source/Tile} tileSource Tile source.\r\n   * @param {number} z Z.\r\n   * @param {module:ol/TileRange} tileRange Tile range.\r\n   * @protected\r\n   */\r\n  updateUsedTiles(usedTiles, tileSource, z, tileRange) {\r\n    // FIXME should we use tilesToDrawByZ instead?\r\n    const tileSourceKey = getUid(tileSource).toString();\r\n    const zKey = z.toString();\r\n    if (tileSourceKey in usedTiles) {\r\n      if (zKey in usedTiles[tileSourceKey]) {\r\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\r\n      } else {\r\n        usedTiles[tileSourceKey][zKey] = tileRange;\r\n      }\r\n    } else {\r\n      usedTiles[tileSourceKey] = {};\r\n      usedTiles[tileSourceKey][zKey] = tileRange;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manage tile pyramid.\r\n   * This function performs a number of functions related to the tiles at the\r\n   * current zoom and lower zoom levels:\r\n   * - registers idle tiles in frameState.wantedTiles so that they are not\r\n   *   discarded by the tile queue\r\n   * - enqueues missing tiles\r\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n   * @param {module:ol/source/Tile} tileSource Tile source.\r\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/proj/Projection} projection Projection.\r\n   * @param {module:ol/extent~Extent} extent Extent.\r\n   * @param {number} currentZ Current Z.\r\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\r\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\r\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\r\n   * @protected\r\n   * @template T\r\n   */\r\n  manageTilePyramid(\r\n    frameState,\r\n    tileSource,\r\n    tileGrid,\r\n    pixelRatio,\r\n    projection,\r\n    extent,\r\n    currentZ,\r\n    preload,\r\n    opt_tileCallback,\r\n    opt_this\r\n  ) {\r\n    const tileSourceKey = getUid(tileSource).toString();\r\n    if (!(tileSourceKey in frameState.wantedTiles)) {\r\n      frameState.wantedTiles[tileSourceKey] = {};\r\n    }\r\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\r\n    const tileQueue = frameState.tileQueue;\r\n    const minZoom = tileGrid.getMinZoom();\r\n    let tile, tileRange, tileResolution, x, y, z;\r\n    for (z = minZoom; z <= currentZ; ++z) {\r\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\r\n      tileResolution = tileGrid.getResolution(z);\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n          if (currentZ - z <= preload) {\r\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n            if (tile.getState() == TileState.IDLE) {\r\n              wantedTiles[tile.getKey()] = true;\r\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\r\n                tileQueue.enqueue([tile, tileSourceKey,\r\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\r\n              }\r\n            }\r\n            if (opt_tileCallback !== undefined) {\r\n              opt_tileCallback.call(opt_this, tile);\r\n            }\r\n          } else {\r\n            tileSource.useTile(z, x, y, projection);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\r\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n * @param {number} hitTolerance Hit tolerance in pixels.\r\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\r\n *     callback Feature callback.\r\n * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n * @return {T|undefined} Callback result.\r\n * @template S,T\r\n */\r\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\r\n\r\n\r\n/**\r\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\r\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\r\n * @return {boolean} Is there a feature at the given coordinate?\r\n */\r\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\r\n\r\n\r\nexport default LayerRenderer;\r\n"],"names":["super","const","let"],"mappings":"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"}
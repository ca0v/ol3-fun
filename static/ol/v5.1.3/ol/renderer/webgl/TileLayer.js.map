{"version":3,"file":"TileLayer.js","sources":["../../../../src/ol/renderer/webgl/TileLayer.js"],"sourcesContent":["/**\r\n * @module ol/renderer/webgl/TileLayer\r\n */\r\n// FIXME large resolutions lead to too large framebuffers :-(\r\n// FIXME animated shaders! check in redraw\r\n\r\nimport LayerType from '../../LayerType.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createEmpty, intersects} from '../../extent.js';\r\nimport {roundUpToPowerOfTwo} from '../../math.js';\r\nimport WebGLLayerRenderer from '../webgl/Layer.js';\r\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\r\nimport Locations from '../webgl/tilelayershader/Locations.js';\r\nimport {toSize} from '../../size.js';\r\nimport {\r\n  reset as resetTransform,\r\n  rotate as rotateTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform,\r\n  apply as applyTransform\r\n} from '../../transform.js';\r\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n/**\r\n * @classdesc\r\n * WebGL renderer for tile layers.\r\n * @api\r\n */\r\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\r\n\r\n  /**\r\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\r\n   * @param {module:ol/layer/Tile} tileLayer Tile layer.\r\n   */\r\n  constructor(mapRenderer, tileLayer) {\r\n\r\n    super(mapRenderer, tileLayer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/webgl/Fragment}\r\n     */\r\n    this.fragmentShader_ = fragment;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/webgl/Vertex}\r\n     */\r\n    this.vertexShader_ = vertex;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\r\n     */\r\n    this.locations_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/webgl/Buffer}\r\n     */\r\n    this.renderArrayBuffer_ = new WebGLBuffer([\r\n      0, 0, 0, 1,\r\n      1, 0, 1, 1,\r\n      0, 1, 0, 0,\r\n      1, 1, 1, 0\r\n    ]);\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/TileRange}\r\n     */\r\n    this.renderedTileRange_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/extent~Extent}\r\n     */\r\n    this.renderedFramebufferExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/size~Size}\r\n     */\r\n    this.tmpSize_ = [0, 0];\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    const context = this.mapRenderer.getContext();\r\n    context.deleteBuffer(this.renderArrayBuffer_);\r\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  createLoadedTileFinder(source, projection, tiles) {\r\n    const mapRenderer = this.mapRenderer;\r\n\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {module:ol/TileRange} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       */\r\n      function(zoom, tileRange) {\r\n        function callback(tile) {\r\n          const loaded = mapRenderer.isTileTextureLoaded(tile);\r\n          if (loaded) {\r\n            if (!tiles[zoom]) {\r\n              tiles[zoom] = {};\r\n            }\r\n            tiles[zoom][tile.tileCoord.toString()] = tile;\r\n          }\r\n          return loaded;\r\n        }\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  handleWebGLContextLost() {\r\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\r\n    this.locations_ = null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState, layerState, context) {\r\n\r\n    const mapRenderer = this.mapRenderer;\r\n    const gl = context.getGL();\r\n\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n\r\n    const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\r\n    const tileSource = tileLayer.getSource();\r\n    const tileGrid = tileSource.getTileGridForProjection(projection);\r\n    const z = tileGrid.getZForResolution(viewState.resolution);\r\n    const tileResolution = tileGrid.getResolution(z);\r\n\r\n    const tilePixelSize =\r\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\r\n    const pixelRatio = tilePixelSize[0] /\r\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\r\n    const tilePixelResolution = tileResolution / pixelRatio;\r\n    const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\r\n\r\n    const center = viewState.center;\r\n    const extent = frameState.extent;\r\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n\r\n    let framebufferExtent;\r\n    if (this.renderedTileRange_ &&\r\n        this.renderedTileRange_.equals(tileRange) &&\r\n        this.renderedRevision_ == tileSource.getRevision()) {\r\n      framebufferExtent = this.renderedFramebufferExtent_;\r\n    } else {\r\n\r\n      const tileRangeSize = tileRange.getSize();\r\n\r\n      const maxDimension = Math.max(\r\n        tileRangeSize[0] * tilePixelSize[0],\r\n        tileRangeSize[1] * tilePixelSize[1]);\r\n      const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\r\n      const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\r\n      const origin = tileGrid.getOrigin(z);\r\n      const minX = origin[0] +\r\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\r\n      const minY = origin[1] +\r\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\r\n      framebufferExtent = [\r\n        minX, minY,\r\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\r\n      ];\r\n\r\n      this.bindFramebuffer(frameState, framebufferDimension);\r\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\r\n\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.clear(COLOR_BUFFER_BIT);\r\n      gl.disable(BLEND);\r\n\r\n      const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\r\n      context.useProgram(program);\r\n      if (!this.locations_) {\r\n        this.locations_ = new Locations(gl, program);\r\n      }\r\n\r\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\r\n      gl.enableVertexAttribArray(this.locations_.a_position);\r\n      gl.vertexAttribPointer(\r\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\r\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\r\n      gl.vertexAttribPointer(\r\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\r\n      gl.uniform1i(this.locations_.u_texture, 0);\r\n\r\n      /**\r\n       * @type {Object.<number, Object.<string, module:ol/Tile>>}\r\n       */\r\n      const tilesToDrawByZ = {};\r\n      tilesToDrawByZ[z] = {};\r\n\r\n      const findLoadedTiles = this.createLoadedTileFinder(\r\n        tileSource, projection, tilesToDrawByZ);\r\n\r\n      const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n      let allTilesLoaded = true;\r\n      const tmpExtent = createEmpty();\r\n      const tmpTileRange = new TileRange(0, 0, 0, 0);\r\n      let childTileRange, drawable, fullyLoaded, tile, tileState;\r\n      let x, y, tileExtent;\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n\r\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n          if (layerState.extent !== undefined) {\r\n            // ignore tiles outside layer extent\r\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\r\n            if (!intersects(tileExtent, layerState.extent)) {\r\n              continue;\r\n            }\r\n          }\r\n          tileState = tile.getState();\r\n          drawable = tileState == TileState.LOADED ||\r\n              tileState == TileState.EMPTY ||\r\n              tileState == TileState.ERROR && !useInterimTilesOnError;\r\n          if (!drawable) {\r\n            tile = tile.getInterimTile();\r\n          }\r\n          tileState = tile.getState();\r\n          if (tileState == TileState.LOADED) {\r\n            if (mapRenderer.isTileTextureLoaded(tile)) {\r\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n              continue;\r\n            }\r\n          } else if (tileState == TileState.EMPTY ||\r\n                     (tileState == TileState.ERROR &&\r\n                      !useInterimTilesOnError)) {\r\n            continue;\r\n          }\r\n\r\n          allTilesLoaded = false;\r\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\r\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\r\n          if (!fullyLoaded) {\r\n            childTileRange = tileGrid.getTileCoordChildTileRange(\r\n              tile.tileCoord, tmpTileRange, tmpExtent);\r\n            if (childTileRange) {\r\n              findLoadedTiles(z + 1, childTileRange);\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      /** @type {Array.<number>} */\r\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\r\n      zs.sort(numberSafeCompareFunction);\r\n      const u_tileOffset = new Float32Array(4);\r\n      for (let i = 0, ii = zs.length; i < ii; ++i) {\r\n        const tilesToDraw = tilesToDrawByZ[zs[i]];\r\n        for (const tileKey in tilesToDraw) {\r\n          tile = tilesToDraw[tileKey];\r\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\r\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\r\n              framebufferExtentDimension;\r\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\r\n              framebufferExtentDimension;\r\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\r\n              framebufferExtentDimension - 1;\r\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\r\n              framebufferExtentDimension - 1;\r\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\r\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\r\n            tileGutter * pixelRatio, LINEAR, LINEAR);\r\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\r\n        }\r\n      }\r\n\r\n      if (allTilesLoaded) {\r\n        this.renderedTileRange_ = tileRange;\r\n        this.renderedFramebufferExtent_ = framebufferExtent;\r\n        this.renderedRevision_ = tileSource.getRevision();\r\n      } else {\r\n        this.renderedTileRange_ = null;\r\n        this.renderedFramebufferExtent_ = null;\r\n        this.renderedRevision_ = -1;\r\n        frameState.animate = true;\r\n      }\r\n\r\n    }\r\n\r\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\r\n    const tileTextureQueue = mapRenderer.getTileTextureQueue();\r\n    this.manageTilePyramid(\r\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\r\n      tileLayer.getPreload(),\r\n      /**\r\n       * @param {module:ol/Tile} tile Tile.\r\n       */\r\n      function(tile) {\r\n        if (tile.getState() == TileState.LOADED &&\r\n              !mapRenderer.isTileTextureLoaded(tile) &&\r\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\r\n          tileTextureQueue.enqueue([\r\n            tile,\r\n            tileGrid.getTileCoordCenter(tile.tileCoord),\r\n            tileGrid.getResolution(tile.tileCoord[0]),\r\n            tilePixelSize, tileGutter * pixelRatio\r\n          ]);\r\n        }\r\n      }, this);\r\n    this.scheduleExpireCache(frameState, tileSource);\r\n\r\n    const texCoordMatrix = this.texCoordMatrix;\r\n    resetTransform(texCoordMatrix);\r\n    translateTransform(texCoordMatrix,\r\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\r\n            (framebufferExtent[2] - framebufferExtent[0]),\r\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\r\n            (framebufferExtent[3] - framebufferExtent[1]));\r\n    if (viewState.rotation !== 0) {\r\n      rotateTransform(texCoordMatrix, viewState.rotation);\r\n    }\r\n    scaleTransform(texCoordMatrix,\r\n      frameState.size[0] * viewState.resolution /\r\n            (framebufferExtent[2] - framebufferExtent[0]),\r\n      frameState.size[1] * viewState.resolution /\r\n            (framebufferExtent[3] - framebufferExtent[1]));\r\n    translateTransform(texCoordMatrix, -0.5, -0.5);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\r\n    if (!this.framebuffer) {\r\n      return undefined;\r\n    }\r\n\r\n    const pixelOnMapScaled = [\r\n      pixel[0] / frameState.size[0],\r\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\r\n\r\n    const pixelOnFrameBufferScaled = applyTransform(\r\n      this.texCoordMatrix, pixelOnMapScaled.slice());\r\n    const pixelOnFrameBuffer = [\r\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\r\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\r\n\r\n    const gl = this.mapRenderer.getContext().getGL();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    const imageData = new Uint8Array(4);\r\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\r\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\r\n\r\n    if (imageData[3] > 0) {\r\n      return callback.call(thisArg, this.getLayer(), imageData);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {module:ol/layer/Layer} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nWebGLTileLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.TILE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\r\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\r\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\r\n */\r\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new WebGLTileLayerRenderer(\r\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\r\n    /** @type {module:ol/layer/Tile} */ (layer)\r\n  );\r\n};\r\n\r\n\r\nexport default WebGLTileLayerRenderer;\r\n"],"names":["super","const","let","this"],"mappings":"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"}
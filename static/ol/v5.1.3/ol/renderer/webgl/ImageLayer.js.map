{"version":3,"file":"ImageLayer.js","sources":["../../../../src/ol/renderer/webgl/ImageLayer.js"],"sourcesContent":["/**\r\n * @module ol/renderer/webgl/ImageLayer\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\r\nimport {TRUE, UNDEFINED} from '../../functions.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {getIntersection, isEmpty} from '../../extent.js';\r\nimport WebGLLayerRenderer from '../webgl/Layer.js';\r\nimport {\r\n  create as createTransform,\r\n  rotate as rotateTransform,\r\n  translate as translateTransform,\r\n  scale as scaleTransform,\r\n  reset as resetTransform,\r\n  apply as applyTransform,\r\n  invert as invertTransform,\r\n  multiply as multiplyTransform\r\n} from '../../transform.js';\r\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\r\nimport {createTexture} from '../../webgl/Context.js';\r\n\r\n/**\r\n * @classdesc\r\n * WebGL renderer for image layers.\r\n * @api\r\n */\r\nclass WebGLImageLayerRenderer extends WebGLLayerRenderer {\r\n\r\n  /**\r\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\r\n   * @param {module:ol/layer/Image} imageLayer Tile layer.\r\n   */\r\n  constructor(mapRenderer, imageLayer) {\r\n\r\n    super(mapRenderer, imageLayer);\r\n\r\n    /**\r\n     * The last rendered image.\r\n     * @private\r\n     * @type {?module:ol/ImageBase}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitCanvasContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/transform~Transform}\r\n     */\r\n    this.hitTransformationMatrix_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/ImageBase} image Image.\r\n   * @private\r\n   * @return {WebGLTexture} Texture.\r\n   */\r\n  createTexture_(image) {\r\n\r\n    // We meet the conditions to work with non-power of two textures.\r\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\r\n    // http://learningwebgl.com/blog/?p=2101\r\n\r\n    const imageElement = image.getImage();\r\n    const gl = this.mapRenderer.getGL();\r\n\r\n    return createTexture(\r\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    const layer = this.getLayer();\r\n    const source = layer.getSource();\r\n    const resolution = frameState.viewState.resolution;\r\n    const rotation = frameState.viewState.rotation;\r\n    const skippedFeatureUids = frameState.skippedFeatureUids;\r\n    return source.forEachFeatureAtCoordinate(\r\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\r\n\r\n      /**\r\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\r\n       * @return {?} Callback result.\r\n       */\r\n      function(feature) {\r\n        return callback.call(thisArg, feature, layer);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState, layerState, context) {\r\n\r\n    const gl = this.mapRenderer.getGL();\r\n\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewState = frameState.viewState;\r\n    const viewCenter = viewState.center;\r\n    const viewResolution = viewState.resolution;\r\n    const viewRotation = viewState.rotation;\r\n\r\n    let image = this.image_;\r\n    let texture = this.texture;\r\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\r\n    const imageSource = imageLayer.getSource();\r\n\r\n    const hints = frameState.viewHints;\r\n\r\n    let renderedExtent = frameState.extent;\r\n    if (layerState.extent !== undefined) {\r\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\r\n    }\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\r\n        !isEmpty(renderedExtent)) {\r\n      let projection = viewState.projection;\r\n      if (!ENABLE_RASTER_REPROJECTION) {\r\n        const sourceProjection = imageSource.getProjection();\r\n        if (sourceProjection) {\r\n          projection = sourceProjection;\r\n        }\r\n      }\r\n      const image_ = imageSource.getImage(renderedExtent, viewResolution,\r\n        pixelRatio, projection);\r\n      if (image_) {\r\n        const loaded = this.loadImage(image_);\r\n        if (loaded) {\r\n          image = image_;\r\n          texture = this.createTexture_(image_);\r\n          if (this.texture) {\r\n            /**\r\n             * @param {WebGLRenderingContext} gl GL.\r\n             * @param {WebGLTexture} texture Texture.\r\n             */\r\n            const postRenderFunction = function(gl, texture) {\r\n              if (!gl.isContextLost()) {\r\n                gl.deleteTexture(texture);\r\n              }\r\n            }.bind(null, gl, this.texture);\r\n            frameState.postRenderFunctions.push(\r\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (image) {\r\n      const canvas = this.mapRenderer.getContext().getCanvas();\r\n\r\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\r\n        pixelRatio, viewCenter, viewResolution, viewRotation,\r\n        image.getExtent());\r\n      this.hitTransformationMatrix_ = null;\r\n\r\n      // Translate and scale to flip the Y coord.\r\n      const texCoordMatrix = this.texCoordMatrix;\r\n      resetTransform(texCoordMatrix);\r\n      scaleTransform(texCoordMatrix, 1, -1);\r\n      translateTransform(texCoordMatrix, 0, -1);\r\n\r\n      this.image_ = image;\r\n      this.texture = texture;\r\n    }\r\n\r\n    return !!image;\r\n  }\r\n\r\n  /**\r\n   * @param {number} canvasWidth Canvas width.\r\n   * @param {number} canvasHeight Canvas height.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\r\n   * @param {number} viewResolution View resolution.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\r\n   * @private\r\n   */\r\n  updateProjectionMatrix_(\r\n    canvasWidth,\r\n    canvasHeight,\r\n    pixelRatio,\r\n    viewCenter,\r\n    viewResolution,\r\n    viewRotation,\r\n    imageExtent\r\n  ) {\r\n\r\n    const canvasExtentWidth = canvasWidth * viewResolution;\r\n    const canvasExtentHeight = canvasHeight * viewResolution;\r\n\r\n    const projectionMatrix = this.projectionMatrix;\r\n    resetTransform(projectionMatrix);\r\n    scaleTransform(projectionMatrix,\r\n      pixelRatio * 2 / canvasExtentWidth,\r\n      pixelRatio * 2 / canvasExtentHeight);\r\n    rotateTransform(projectionMatrix, -viewRotation);\r\n    translateTransform(projectionMatrix,\r\n      imageExtent[0] - viewCenter[0],\r\n      imageExtent[1] - viewCenter[1]);\r\n    scaleTransform(projectionMatrix,\r\n      (imageExtent[2] - imageExtent[0]) / 2,\r\n      (imageExtent[3] - imageExtent[1]) / 2);\r\n    translateTransform(projectionMatrix, 1, 1);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  hasFeatureAtCoordinate(coordinate, frameState) {\r\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\r\n    return hasFeature !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\r\n    if (!this.image_ || !this.image_.getImage()) {\r\n      return undefined;\r\n    }\r\n\r\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\r\n      // for ImageCanvas sources use the original hit-detection logic,\r\n      // so that for example also transparent polygons are detected\r\n      const coordinate = applyTransform(\r\n        frameState.pixelToCoordinateTransform, pixel.slice());\r\n      const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\r\n\r\n      if (hasFeature) {\r\n        return callback.call(thisArg, this.getLayer(), null);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      const imageSize =\r\n          [this.image_.getImage().width, this.image_.getImage().height];\r\n\r\n      if (!this.hitTransformationMatrix_) {\r\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\r\n          frameState.size, imageSize);\r\n      }\r\n\r\n      const pixelOnFrameBuffer = applyTransform(\r\n        this.hitTransformationMatrix_, pixel.slice());\r\n\r\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\r\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\r\n        // outside the image, no need to check\r\n        return undefined;\r\n      }\r\n\r\n      if (!this.hitCanvasContext_) {\r\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\r\n      }\r\n\r\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\r\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\r\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\r\n\r\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\r\n      if (imageData[3] > 0) {\r\n        return callback.call(thisArg, this.getLayer(), imageData);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The transformation matrix to get the pixel on the image for a\r\n   * pixel on the map.\r\n   * @param {module:ol/size~Size} mapSize The map size.\r\n   * @param {module:ol/size~Size} imageSize The image size.\r\n   * @return {module:ol/transform~Transform} The transformation matrix.\r\n   * @private\r\n   */\r\n  getHitTransformationMatrix_(mapSize, imageSize) {\r\n    // the first matrix takes a map pixel, flips the y-axis and scales to\r\n    // a range between -1 ... 1\r\n    const mapCoordTransform = createTransform();\r\n    translateTransform(mapCoordTransform, -1, -1);\r\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\r\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\r\n    scaleTransform(mapCoordTransform, 1, -1);\r\n\r\n    // the second matrix is the inverse of the projection matrix used in the\r\n    // shader for drawing\r\n    const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\r\n\r\n    // the third matrix scales to the image dimensions and flips the y-axis again\r\n    const transform = createTransform();\r\n    translateTransform(transform, 0, imageSize[1]);\r\n    scaleTransform(transform, 1, -1);\r\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\r\n    translateTransform(transform, 1, 1);\r\n\r\n    multiplyTransform(transform, projectionMatrixInv);\r\n    multiplyTransform(transform, mapCoordTransform);\r\n\r\n    return transform;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {module:ol/layer/Layer} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nWebGLImageLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.IMAGE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\r\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\r\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\r\n */\r\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new WebGLImageLayerRenderer(\r\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\r\n    /** @type {module:ol/layer/Image} */ (layer)\r\n  );\r\n};\r\n\r\n\r\nexport default WebGLImageLayerRenderer;\r\n"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,QAAQ,0BAA0B,OAAO,wBAAwB,CAAC;AAClE,QAAQ,IAAI,EAAE,SAAS,OAAO,oBAAoB,CAAC;AACnD,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAC3C,OAAO,QAAQ,MAAM,mBAAmB,CAAC;AACzC,QAAQ,qBAAqB,OAAO,cAAc,CAAC;AACnD,QAAQ,eAAe,EAAE,OAAO,OAAO,iBAAiB,CAAC;AACzD,OAAO,kBAAkB,MAAM,mBAAmB,CAAC;AACnD;EACE,MAAM,IAAI,eAAe;EACzB,MAAM,IAAI,eAAe;EACzB,SAAS,IAAI,kBAAkB;EAC/B,KAAK,IAAI,cAAc;EACvB,KAAK,IAAI,cAAc;EACvB,KAAK,IAAI,cAAc;EACvB,MAAM,IAAI,eAAe;EACzB,QAAQ,IAAI,iBAAiB;OACxB,oBAAoB,CAAC;AAC5B,QAAQ,aAAa,OAAO,gBAAgB,CAAC;AAC7C,QAAQ,aAAa,OAAO,wBAAwB,CAAC;;;;;;;AAOrD,IAAM,uBAAuB,GAA2B;EAMtD,gCAAW,CAAC,WAAW,EAAE,UAAU,EAAE;;IAEnCA,uBAAK,OAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;;;;;;IAO/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;;IAMnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;;;;;IAM9B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;;;;;;0EAEtC;;;;;;;oCAOD,yCAAc,CAAC,KAAK,EAAE;;;;;;IAMpBC,GAAK,CAAC,YAAY,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IACtCA,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;;IAEpC,OAAO,aAAa;MAClB,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;IACnD;;;;;oCAKD,iEAA0B,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE;IAClFA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC9BA,GAAK,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IACjCA,GAAK,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IACnDA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC/CA,GAAK,CAAC,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;IACzD,OAAO,MAAM,CAAC,0BAA0B;MACtC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,kBAAkB;;;;;;MAMlE,SAAS,OAAO,EAAE;QAChB,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;OAC/C,CAAC,CAAC;IACN;;;;;oCAKD,qCAAY,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE;;IAE5CA,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;;IAEpCA,GAAK,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;IACzCA,GAAK,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;IACvCA,GAAK,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC;IACpCA,GAAK,CAAC,cAAc,GAAG,SAAS,CAAC,UAAU,CAAC;IAC5CA,GAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC;;IAExCC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IACxBA,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC3BD,GAAK,CAAC,UAAU,wCAAwC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1EA,GAAK,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;;IAE3CA,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC;;IAEnCC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC;IACvC,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;MACnC,cAAc,GAAG,eAAe,CAAC,cAAc,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;KACrE;IACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC1D,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;MAC5BA,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;MACtC,IAAI,CAAC,0BAA0B,EAAE;QAC/BD,GAAK,CAAC,gBAAgB,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;QACrD,IAAI,gBAAgB,EAAE;UACpB,UAAU,GAAG,gBAAgB,CAAC;SAC/B;OACF;MACDA,GAAK,CAAC,MAAM,GAAG,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,cAAc;QAChE,UAAU,EAAE,UAAU,CAAC,CAAC;MAC1B,IAAI,MAAM,EAAE;QACVA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE;UACV,KAAK,GAAG,MAAM,CAAC;UACf,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;UACtC,IAAI,IAAI,CAAC,OAAO,EAAE;;;;;YAKhBA,GAAK,CAAC,kBAAkB,GAAG,SAAS,EAAE,EAAE,OAAO,EAAE;cAC/C,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE;gBACvB,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;eAC3B;aACF,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,UAAU,CAAC,mBAAmB,CAAC,IAAI;uEACwB,CAAC,kBAAkB,CAAC;aAC9E,CAAC;WACH;SACF;OACF;KACF;;IAED,IAAI,KAAK,EAAE;MACTA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;;MAEzD,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM;QACtD,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY;QACpD,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;MACrB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;;;MAGrCA,GAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;MAC3C,cAAc,CAAC,cAAc,CAAC,CAAC;MAC/B,cAAc,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACtC,kBAAkB,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MAE1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;MACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAED,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB;;;;;;;;;;;;oCAYD,2DAAuB;IACrB,WAAW;IACX,YAAY;IACZ,UAAU;IACV,UAAU;IACV,cAAc;IACd,YAAY;IACZ,WAAW;IACX;;IAEAA,GAAK,CAAC,iBAAiB,GAAG,WAAW,GAAG,cAAc,CAAC;IACvDA,GAAK,CAAC,kBAAkB,GAAG,YAAY,GAAG,cAAc,CAAC;;IAEzDA,GAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC/C,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACjC,cAAc,CAAC,gBAAgB;MAC7B,UAAU,GAAG,CAAC,GAAG,iBAAiB;MAClC,UAAU,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAC;IACvC,eAAe,CAAC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC;IACjD,kBAAkB,CAAC,gBAAgB;MACjC,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;MAC9B,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,cAAc,CAAC,gBAAgB;MAC7B,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MACrC,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE5C;;;;;oCAKD,yDAAsB,CAAC,UAAU,EAAE,UAAU,EAAE;IAC7CA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1F,OAAO,UAAU,KAAK,SAAS,CAAC;IACjC;;;;;oCAKD,mDAAmB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;IACxD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;MAC3C,OAAO,SAAS,CAAC;KAClB;;IAED,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,0BAA0B,KAAK,SAAS,EAAE;;;MAGxEA,GAAK,CAAC,UAAU,GAAG,cAAc;QAC/B,UAAU,CAAC,0BAA0B,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;MACxDA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;MAE1F,IAAI,UAAU,EAAE;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;OACtD,MAAM;QACL,OAAO,SAAS,CAAC;OAClB;KACF,MAAM;MACLA,GAAK,CAAC,SAAS;UACX,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;;MAElE,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;QAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,2BAA2B;UAC9D,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OAC/B;;MAEDA,GAAK,CAAC,kBAAkB,GAAG,cAAc;QACvC,IAAI,CAAC,wBAAwB,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;;MAEhD,IAAI,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;UACjE,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE;;QAErE,OAAO,SAAS,CAAC;OAClB;;MAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;QAC3B,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OACtD;;MAED,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;QACrD,kBAAkB,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;MAElEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;MACvE,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACpB,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;OAC3D,MAAM;QACL,OAAO,SAAS,CAAC;OAClB;KACF;IACF;;;;;;;;;;oCAUD,mEAA2B,CAAC,OAAO,EAAE,SAAS,EAAE;;;IAG9CA,GAAK,CAAC,iBAAiB,GAAG,eAAe,EAAE,CAAC;IAC5C,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,cAAc,CAAC,iBAAiB,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,cAAc,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;IAIzCA,GAAK,CAAC,mBAAmB,GAAG,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;;;IAG3EA,GAAK,CAAC,SAAS,GAAG,eAAe,EAAE,CAAC;IACpC,kBAAkB,CAAC,SAAS,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,cAAc,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,kBAAkB,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEpC,iBAAiB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;IAClD,iBAAiB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;;IAEhD,OAAO,SAAS,CAAC;GAClB;;;EA3RmC,qBA4RrC;;;;;;;;AAQD,uBAAuB,CAAC,SAAS,CAAC,GAAG,SAAS,KAAK,EAAE;EACnD,OAAO,KAAK,CAAC,OAAO,EAAE,KAAK,SAAS,CAAC,KAAK,CAAC;CAC5C,CAAC;;;;;;;;;AASF,uBAAuB,CAAC,QAAQ,CAAC,GAAG,SAAS,WAAW,EAAE,KAAK,EAAE;EAC/D,OAAO,IAAI,uBAAuB;gDACY,CAAC,WAAW,CAAC;yCACpB,CAAC,KAAK,CAAC;GAC7C,CAAC;CACH,CAAC;;;AAGF,eAAe,uBAAuB,CAAC;"}
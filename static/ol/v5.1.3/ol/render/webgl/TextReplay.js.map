{"version":3,"file":"TextReplay.js","sources":["../../../../src/ol/render/webgl/TextReplay.js"],"sourcesContent":["/**\r\n * @module ol/render/webgl/TextReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport {TEXT_ALIGN} from '../replay.js';\r\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\r\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\r\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\r\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\r\nimport AtlasManager from '../../style/AtlasManager.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n/**\r\n * @typedef {Object} GlyphAtlas\r\n * @property {module:ol/style/AtlasManager} atlas\r\n * @property {Object.<string, number>} width\r\n * @property {number} height\r\n */\r\n\r\n\r\nclass WebGLTextReplay extends WebGLTextureReplay {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\r\n   */\r\n  constructor(tolerance, maxExtent) {\r\n    super(tolerance, maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<HTMLCanvasElement>}\r\n     */\r\n    this.images_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<WebGLTexture>}\r\n     */\r\n    this.textures_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\r\n     *         lineCap: (string|undefined),\r\n     *         lineDash: Array.<number>,\r\n     *         lineDashOffset: (number|undefined),\r\n     *         lineJoin: (string|undefined),\r\n     *         lineWidth: number,\r\n     *         miterLimit: (number|undefined),\r\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\r\n     *         font: (string|undefined),\r\n     *         scale: (number|undefined)}}\r\n     */\r\n    this.state_ = {\r\n      strokeColor: null,\r\n      lineCap: undefined,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineJoin: undefined,\r\n      lineWidth: 0,\r\n      miterLimit: undefined,\r\n      fillColor: null,\r\n      font: undefined,\r\n      scale: undefined\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.textAlign_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.textBaseline_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.offsetX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.offsetY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\r\n     */\r\n    this.atlases_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\r\n     */\r\n    this.currAtlas_ = undefined;\r\n\r\n    this.scale = 1;\r\n\r\n    this.opacity = 1;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  drawText(geometry, feature) {\r\n    if (this.text_) {\r\n      let flatCoordinates = null;\r\n      const offset = 0;\r\n      let end = 2;\r\n      let stride = 2;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT:\r\n          flatCoordinates = geometry.getFlatCoordinates();\r\n          end = flatCoordinates.length;\r\n          stride = geometry.getStride();\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        default:\r\n      }\r\n      this.startIndices.push(this.indices.length);\r\n      this.startIndicesFeature.push(feature);\r\n\r\n      const glyphAtlas = this.currAtlas_;\r\n      const lines = this.text_.split('\\n');\r\n      const textSize = this.getTextSize_(lines);\r\n      let i, ii, j, jj, currX, currY, charArr, charInfo;\r\n      const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\r\n      const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\r\n      const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\r\n\r\n      for (i = 0, ii = lines.length; i < ii; ++i) {\r\n        currX = 0;\r\n        currY = glyphAtlas.height * i;\r\n        charArr = lines[i].split('');\r\n\r\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\r\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\r\n\r\n          if (charInfo) {\r\n            const image = charInfo.image;\r\n\r\n            this.anchorX = anchorX - currX;\r\n            this.anchorY = anchorY - currY;\r\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\r\n            this.originY = charInfo.offsetY;\r\n            this.height = glyphAtlas.height;\r\n            this.width = j === 0 || j === charArr.length - 1 ?\r\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\r\n            this.imageHeight = image.height;\r\n            this.imageWidth = image.width;\r\n\r\n            if (this.images_.length === 0) {\r\n              this.images_.push(image);\r\n            } else {\r\n              const currentImage = this.images_[this.images_.length - 1];\r\n              if (getUid(currentImage) != getUid(image)) {\r\n                this.groupIndices.push(this.indices.length);\r\n                this.images_.push(image);\r\n              }\r\n            }\r\n\r\n            this.drawText_(flatCoordinates, offset, end, stride);\r\n          }\r\n          currX += this.width;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array.<string>} lines Label to draw split to lines.\r\n   * @return {Array.<number>} Size of the label in pixels.\r\n   */\r\n  getTextSize_(lines) {\r\n    const self = this;\r\n    const glyphAtlas = this.currAtlas_;\r\n    const textHeight = lines.length * glyphAtlas.height;\r\n    //Split every line to an array of chars, sum up their width, and select the longest.\r\n    const textWidth = lines.map(function(str) {\r\n      let sum = 0;\r\n      for (let i = 0, ii = str.length; i < ii; ++i) {\r\n        const curr = str[i];\r\n        if (!glyphAtlas.width[curr]) {\r\n          self.addCharToAtlas_(curr);\r\n        }\r\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\r\n      }\r\n      return sum;\r\n    }).reduce(function(max, curr) {\r\n      return Math.max(max, curr);\r\n    });\r\n\r\n    return [textWidth, textHeight];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   */\r\n  drawText_(flatCoordinates, offset, end, stride) {\r\n    for (let i = offset, ii = end; i < ii; i += stride) {\r\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} char Character.\r\n   */\r\n  addCharToAtlas_(char) {\r\n    if (char.length === 1) {\r\n      const glyphAtlas = this.currAtlas_;\r\n      const state = this.state_;\r\n      const mCtx = this.measureCanvas_.getContext('2d');\r\n      mCtx.font = state.font;\r\n      const width = Math.ceil(mCtx.measureText(char).width * state.scale);\r\n\r\n      const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\r\n        function(ctx, x, y) {\r\n          //Parameterize the canvas\r\n          ctx.font = /** @type {string} */ (state.font);\r\n          ctx.fillStyle = state.fillColor;\r\n          ctx.strokeStyle = state.strokeColor;\r\n          ctx.lineWidth = state.lineWidth;\r\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\r\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\r\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\r\n          ctx.textAlign = 'left';\r\n          ctx.textBaseline = 'top';\r\n          if (CANVAS_LINE_DASH && state.lineDash) {\r\n            //FIXME: use pixelRatio\r\n            ctx.setLineDash(state.lineDash);\r\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\r\n          }\r\n          if (state.scale !== 1) {\r\n            //FIXME: use pixelRatio\r\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\r\n              /** @type {number} */ (state.scale), 0, 0);\r\n          }\r\n\r\n          //Draw the character on the canvas\r\n          if (state.strokeColor) {\r\n            ctx.strokeText(char, x, y);\r\n          }\r\n          if (state.fillColor) {\r\n            ctx.fillText(char, x, y);\r\n          }\r\n        });\r\n\r\n      if (info) {\r\n        glyphAtlas.width[char] = width;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  finish(context) {\r\n    const gl = context.getGL();\r\n\r\n    this.groupIndices.push(this.indices.length);\r\n    this.hitDetectionGroupIndices = this.groupIndices;\r\n\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(this.indices);\r\n\r\n    // create textures\r\n    /** @type {Object.<string, WebGLTexture>} */\r\n    const texturePerImage = {};\r\n\r\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\r\n\r\n    this.state_ = {\r\n      strokeColor: null,\r\n      lineCap: undefined,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineJoin: undefined,\r\n      lineWidth: 0,\r\n      miterLimit: undefined,\r\n      fillColor: null,\r\n      font: undefined,\r\n      scale: undefined\r\n    };\r\n    this.text_ = '';\r\n    this.textAlign_ = undefined;\r\n    this.textBaseline_ = undefined;\r\n    this.offsetX_ = undefined;\r\n    this.offsetY_ = undefined;\r\n    this.images_ = null;\r\n    this.atlases_ = {};\r\n    this.currAtlas_ = undefined;\r\n    WebGLTextureReplay.prototype.finish.call(this, context);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setTextStyle(textStyle) {\r\n    const state = this.state_;\r\n    const textFillStyle = textStyle.getFill();\r\n    const textStrokeStyle = textStyle.getStroke();\r\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\r\n      this.text_ = '';\r\n    } else {\r\n      if (!textFillStyle) {\r\n        state.fillColor = null;\r\n      } else {\r\n        const textFillStyleColor = textFillStyle.getColor();\r\n        state.fillColor = asColorLike(textFillStyleColor ?\r\n          textFillStyleColor : DEFAULT_FILLSTYLE);\r\n      }\r\n      if (!textStrokeStyle) {\r\n        state.strokeColor = null;\r\n        state.lineWidth = 0;\r\n      } else {\r\n        const textStrokeStyleColor = textStrokeStyle.getColor();\r\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\r\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\r\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\r\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\r\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\r\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\r\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\r\n        const lineDash = textStrokeStyle.getLineDash();\r\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\r\n      }\r\n      state.font = textStyle.getFont() || DEFAULT_FONT;\r\n      state.scale = textStyle.getScale() || 1;\r\n      this.text_ = /** @type {string} */ (textStyle.getText());\r\n      const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\r\n      const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\r\n      this.textAlign_ = textAlign === undefined ?\r\n        DEFAULT_TEXTALIGN : textAlign;\r\n      this.textBaseline_ = textBaseline === undefined ?\r\n        DEFAULT_TEXTBASELINE : textBaseline;\r\n      this.offsetX_ = textStyle.getOffsetX() || 0;\r\n      this.offsetY_ = textStyle.getOffsetY() || 0;\r\n      this.rotateWithView = !!textStyle.getRotateWithView();\r\n      this.rotation = textStyle.getRotation() || 0;\r\n\r\n      this.currAtlas_ = this.getAtlas_(state);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} state Font attributes.\r\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\r\n   */\r\n  getAtlas_(state) {\r\n    let params = [];\r\n    for (const i in state) {\r\n      if (state[i] || state[i] === 0) {\r\n        if (Array.isArray(state[i])) {\r\n          params = params.concat(state[i]);\r\n        } else {\r\n          params.push(state[i]);\r\n        }\r\n      }\r\n    }\r\n    const hash = this.calculateHash_(params);\r\n    if (!this.atlases_[hash]) {\r\n      const mCtx = this.measureCanvas_.getContext('2d');\r\n      mCtx.font = state.font;\r\n      const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\r\n          state.lineWidth / 2) * state.scale);\r\n\r\n      this.atlases_[hash] = {\r\n        atlas: new AtlasManager({\r\n          space: state.lineWidth + 1\r\n        }),\r\n        width: {},\r\n        height: height\r\n      };\r\n    }\r\n    return this.atlases_[hash];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array.<string|number>} params Array of parameters.\r\n   * @return {string} Hash string.\r\n   */\r\n  calculateHash_(params) {\r\n    //TODO: Create a more performant, reliable, general hash function.\r\n    let hash = '';\r\n    for (let i = 0, ii = params.length; i < ii; ++i) {\r\n      hash += params[i];\r\n    }\r\n    return hash;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getTextures(opt_all) {\r\n    return this.textures_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getHitDetectionTextures() {\r\n    return this.textures_;\r\n  }\r\n}\r\n\r\n\r\nexport default WebGLTextReplay;\r\n"],"names":["super","let","const","this"],"mappings":"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"}
{"version":3,"file":"GeometryCollection.js","sources":["../../../src/ol/geom/GeometryCollection.js"],"sourcesContent":["/**\r\n * @module ol/geom/GeometryCollection\r\n */\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\r\nimport Geometry from '../geom/Geometry.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * An array of {@link module:ol/geom/Geometry} objects.\r\n *\r\n * @api\r\n */\r\nclass GeometryCollection extends Geometry {\r\n\r\n  /**\r\n   * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\r\n   */\r\n  constructor(opt_geometries) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<module:ol/geom/Geometry>}\r\n     */\r\n    this.geometries_ = opt_geometries ? opt_geometries : null;\r\n\r\n    this.listenGeometriesChange_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unlistenGeometriesChange_() {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      unlisten(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  listenGeometriesChange_() {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      listen(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!module:ol/geom/GeometryCollection} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const geometryCollection = new GeometryCollection(null);\r\n    geometryCollection.setGeometries(this.geometries_);\r\n    return geometryCollection;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      minSquaredDistance = geometries[i].closestPointXY(\r\n        x, y, closestPoint, minSquaredDistance);\r\n    }\r\n    return minSquaredDistance;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].containsXY(x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  computeExtent(extent) {\r\n    createOrUpdateEmpty(extent);\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      extend(extent, geometries[i].getExtent());\r\n    }\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Return the geometries that make up this geometry collection.\r\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\r\n   * @api\r\n   */\r\n  getGeometries() {\r\n    return cloneGeometries(this.geometries_);\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\r\n   */\r\n  getGeometriesArray() {\r\n    return this.geometries_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n      clear(this.simplifiedGeometryCache);\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    if (squaredTolerance < 0 ||\r\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n      return this;\r\n    }\r\n    const key = squaredTolerance.toString();\r\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n      return this.simplifiedGeometryCache[key];\r\n    } else {\r\n      const simplifiedGeometries = [];\r\n      const geometries = this.geometries_;\r\n      let simplified = false;\r\n      for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n        const geometry = geometries[i];\r\n        const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n        simplifiedGeometries.push(simplifiedGeometry);\r\n        if (simplifiedGeometry !== geometry) {\r\n          simplified = true;\r\n        }\r\n      }\r\n      if (simplified) {\r\n        const simplifiedGeometryCollection = new GeometryCollection(null);\r\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\r\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\r\n        return simplifiedGeometryCollection;\r\n      } else {\r\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n        return this;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.GEOMETRY_COLLECTION;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].intersectsExtent(extent)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.geometries_.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].rotate(angle, anchor);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  scale(sx, opt_sy, opt_anchor) {\r\n    let anchor = opt_anchor;\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].scale(sx, opt_sy, anchor);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the geometries that make up this geometry collection.\r\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\r\n   * @api\r\n   */\r\n  setGeometries(geometries) {\r\n    this.setGeometriesArray(cloneGeometries(geometries));\r\n  }\r\n\r\n  /**\r\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\r\n   */\r\n  setGeometriesArray(geometries) {\r\n    this.unlistenGeometriesChange_();\r\n    this.geometries_ = geometries;\r\n    this.listenGeometriesChange_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  applyTransform(transformFn) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].applyTransform(transformFn);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Translate the geometry.\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @override\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const geometries = this.geometries_;\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].translate(deltaX, deltaY);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.unlistenGeometriesChange_();\r\n    Geometry.prototype.disposeInternal.call(this);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\r\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\r\n */\r\nfunction cloneGeometries(geometries) {\r\n  const clonedGeometries = [];\r\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n    clonedGeometries.push(geometries[i].clone());\r\n  }\r\n  return clonedGeometries;\r\n}\r\n\r\n\r\nexport default GeometryCollection;\r\n"],"names":["super","let","this","const"],"mappings":"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"}
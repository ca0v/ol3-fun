{"version":3,"file":"MultiPolygon.js","sources":["../../../src/ol/geom/MultiPolygon.js"],"sourcesContent":["/**\r\n * @module ol/geom/MultiPolygon\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\r\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\r\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\r\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\r\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\r\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\r\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\r\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\r\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\r\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\r\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-polygon geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPolygon extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>|Array.<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinats in combination with `opt_layout` and `opt_endss` are also accepted.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   * @param {Array.<number>} opt_endss Array of ends for internal use with flat coordinates.\r\n   */\r\n  constructor(coordinates, opt_layout, opt_endss) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @type {Array.<Array.<number>>}\r\n     * @private\r\n     */\r\n    this.endss_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointsRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n    this.flatInteriorPoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\r\n      let layout = this.getLayout();\r\n      const flatCoordinates = [];\r\n      const endss = [];\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        const polygon = coordinates[i];\r\n        if (i === 0) {\r\n          layout = polygon.getLayout();\r\n        }\r\n        const offset = flatCoordinates.length;\r\n        const ends = polygon.getEnds();\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] += offset;\r\n        }\r\n        extend(flatCoordinates, polygon.getFlatCoordinates());\r\n        endss.push(ends);\r\n      }\r\n      opt_layout = layout;\r\n      coordinates = flatCoordinates;\r\n      opt_endss = endss;\r\n    }\r\n    if (opt_layout !== undefined && opt_endss) {\r\n      this.setFlatCoordinates(opt_layout, coordinates);\r\n      this.endss_ = opt_endss;\r\n    } else {\r\n      this.setCoordinates(coordinates, opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Append the passed polygon to this multipolygon.\r\n   * @param {module:ol/geom/Polygon} polygon Polygon.\r\n   * @api\r\n   */\r\n  appendPolygon(polygon) {\r\n    /** @type {Array.<number>} */\r\n    let ends;\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\r\n      ends = polygon.getEnds().slice();\r\n      this.endss_.push();\r\n    } else {\r\n      const offset = this.flatCoordinates.length;\r\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\r\n      ends = polygon.getEnds().slice();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] += offset;\r\n      }\r\n    }\r\n    this.endss_.push(ends);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!module:ol/geom/MultiPolygon} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const len = this.endss_.length;\r\n    const newEndss = new Array(len);\r\n    for (let i = 0; i < len; ++i) {\r\n      newEndss[i] = this.endss_[i].slice();\r\n    }\r\n\r\n    return new MultiPolygon(\r\n      this.flatCoordinates.slice(), this.layout, newEndss);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestMultiArrayPoint(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  containsXY(x, y) {\r\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\r\n  }\r\n\r\n  /**\r\n   * Return the area of the multipolygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for multi-polygons.\r\n   *\r\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates(opt_right) {\r\n    let flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRingsArray(\r\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateMultiCoordinatesArray(\r\n      flatCoordinates, 0, this.endss_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<Array.<number>>} Endss.\r\n   */\r\n  getEndss() {\r\n    return this.endss_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<number>} Flat interior points.\r\n   */\r\n  getFlatInteriorPoints() {\r\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\r\n      const flatCenters = linearRingssCenter(\r\n        this.flatCoordinates, 0, this.endss_, this.stride);\r\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n        flatCenters);\r\n      this.flatInteriorPointsRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  }\r\n\r\n  /**\r\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\r\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\r\n   * the length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  getInteriorPoints() {\r\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<number>} Oriented flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      const flatCoordinates = this.flatCoordinates;\r\n      if (linearRingsAreOriented(\r\n        flatCoordinates, 0, this.endss_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length =\r\n            orientLinearRingsArray(\r\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEndss = [];\r\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\r\n      this.flatCoordinates, 0, this.endss_, this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\r\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\r\n  }\r\n\r\n  /**\r\n   * Return the polygon at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {module:ol/geom/Polygon} Polygon.\r\n   * @api\r\n   */\r\n  getPolygon(index) {\r\n    if (index < 0 || this.endss_.length <= index) {\r\n      return null;\r\n    }\r\n    let offset;\r\n    if (index === 0) {\r\n      offset = 0;\r\n    } else {\r\n      const prevEnds = this.endss_[index - 1];\r\n      offset = prevEnds[prevEnds.length - 1];\r\n    }\r\n    const ends = this.endss_[index].slice();\r\n    const end = ends[ends.length - 1];\r\n    if (offset !== 0) {\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] -= offset;\r\n      }\r\n    }\r\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\r\n  }\r\n\r\n  /**\r\n   * Return the polygons of this multipolygon.\r\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\r\n   * @api\r\n   */\r\n  getPolygons() {\r\n    const layout = this.layout;\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const endss = this.endss_;\r\n    const polygons = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      const ends = endss[i].slice();\r\n      const end = ends[ends.length - 1];\r\n      if (offset !== 0) {\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] -= offset;\r\n        }\r\n      }\r\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\r\n      polygons.push(polygon);\r\n      offset = end;\r\n    }\r\n    return polygons;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POLYGON;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLinearRingMultiArray(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipolygon.\r\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 3);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const endss = deflateMultiCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\r\n    if (endss.length === 0) {\r\n      this.flatCoordinates.length = 0;\r\n    } else {\r\n      const lastEnds = endss[endss.length - 1];\r\n      this.flatCoordinates.length = lastEnds.length === 0 ?\r\n        0 : lastEnds[lastEnds.length - 1];\r\n    }\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default MultiPolygon;\r\n"],"names":["super","let","const","this"],"mappings":"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"}
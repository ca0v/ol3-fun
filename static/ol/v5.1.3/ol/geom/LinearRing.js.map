{"version":3,"file":"LinearRing.js","sources":["../../../src/ol/geom/LinearRing.js"],"sourcesContent":["/**\r\n * @module ol/geom/LinearRing\r\n */\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\r\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\r\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\r\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\r\nimport {douglasPeucker} from '../geom/flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\r\n * on its own.\r\n *\r\n * @api\r\n */\r\nclass LinearRing extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array.<module:ol/coordinate~Coordinate>|Array.<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, coordinates);\r\n    } else {\r\n      this.setCoordinates(coordinates, opt_layout);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!module:ol/geom/LinearRing} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\r\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  }\r\n\r\n  /**\r\n   * Return the area of the linear ring on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the linear ring.\r\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.LINEAR_RING;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  intersectsExtent(extent) {}\r\n\r\n  /**\r\n   * Set the coordinates of the linear ring.\r\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default LinearRing;\r\n"],"names":["super","const"],"mappings":"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"}
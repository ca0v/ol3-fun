{"version":3,"file":"MultiPoint.js","sources":["../../../src/ol/geom/MultiPoint.js"],"sourcesContent":["/**\r\n * @module ol/geom/MultiPoint\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\r\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\r\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-point geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPoint extends SimpleGeometry {\r\n\r\n  /**\r\n   * @param {Array.<module:ol/coordinate~Coordinate>|Array.<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n    super();\r\n    if (opt_layout && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, coordinates);\r\n    } else {\r\n      this.setCoordinates(coordinates, opt_layout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed point to this multipoint.\r\n   * @param {module:ol/geom/Point} point Point.\r\n   * @api\r\n   */\r\n  appendPoint(point) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = point.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, point.getFlatCoordinates());\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!module:ol/geom/MultiPoint} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  clone() {\r\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\r\n    return multiPoint;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const squaredDistance = squaredDx(\r\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\r\n      if (squaredDistance < minSquaredDistance) {\r\n        minSquaredDistance = squaredDistance;\r\n        for (let j = 0; j < stride; ++j) {\r\n          closestPoint[j] = flatCoordinates[i + j];\r\n        }\r\n        closestPoint.length = stride;\r\n      }\r\n    }\r\n    return minSquaredDistance;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the multipoint.\r\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  }\r\n\r\n  /**\r\n   * Return the point at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {module:ol/geom/Point} Point.\r\n   * @api\r\n   */\r\n  getPoint(index) {\r\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\r\n    if (index < 0 || n <= index) {\r\n      return null;\r\n    }\r\n    return new Point(this.flatCoordinates.slice(\r\n      index * this.stride, (index + 1) * this.stride), this.layout);\r\n  }\r\n\r\n  /**\r\n   * Return the points of this multipoint.\r\n   * @return {Array.<module:ol/geom/Point>} Points.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const layout = this.layout;\r\n    const stride = this.stride;\r\n    /** @type {Array.<module:ol/geom/Point>} */\r\n    const points = [];\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\r\n      points.push(point);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POINT;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const x = flatCoordinates[i];\r\n      const y = flatCoordinates[i + 1];\r\n      if (containsXY(extent, x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipoint.\r\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\r\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  }\r\n}\r\n\r\n\r\nexport default MultiPoint;\r\n"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,aAAa,CAAC;AACnC,QAAQ,wBAAwB,EAAE,UAAU,OAAO,cAAc,CAAC;AAClE,OAAO,YAAY,MAAM,yBAAyB,CAAC;AACnD,OAAO,KAAK,MAAM,kBAAkB,CAAC;AACrC,OAAO,cAAc,MAAM,2BAA2B,CAAC;AACvD,QAAQ,kBAAkB,OAAO,yBAAyB,CAAC;AAC3D,QAAQ,kBAAkB,OAAO,yBAAyB,CAAC;AAC3D,QAAQ,eAAe,IAAI,SAAS,OAAO,YAAY,CAAC;;;;;;;;AAQxD,IAAM,UAAU,GAAuB;EAOrC,mBAAW,CAAC,WAAW,EAAE,UAAU,EAAE;IACnCA,mBAAK,KAAC,CAAC,CAAC;IACR,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAChD,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;KAClD,MAAM;MACL,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;KAC9C;;;;;gDACF;;;;;;;uBAOD,mCAAW,CAAC,KAAK,EAAE;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;MACzB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,CAAC;KAC3D,MAAM;MACL,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC;KAC1D;IACD,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;;uBAQD,uBAAK,GAAG;IACNC,GAAK,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7E,OAAO,UAAU,CAAC;IACnB;;;;;uBAKD,yCAAc,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,kBAAkB,EAAE;IACrD,IAAI,kBAAkB,GAAG,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;MACzE,OAAO,kBAAkB,CAAC;KAC3B;IACDA,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7CA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE;MAChED,GAAK,CAAC,eAAe,GAAG,SAAS;QAC/B,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,IAAI,eAAe,GAAG,kBAAkB,EAAE;QACxC,kBAAkB,GAAG,eAAe,CAAC;QACrC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;UAC/B,YAAY,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1C;QACD,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;OAC9B;KACF;IACD,OAAO,kBAAkB,CAAC;IAC3B;;;;;;;;uBAQD,yCAAc,GAAG;IACf,OAAO,kBAAkB;MACvB,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACtE;;;;;;;;uBAQD,6BAAQ,CAAC,KAAK,EAAE;IACdD,GAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAChF,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;MAC3B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK;MACzC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACjE;;;;;;;uBAOD,+BAAS,GAAG;IACVA,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7CA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3BA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;IAE3BA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE;MAChED,GAAK,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;MACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpB;IACD,OAAO,MAAM,CAAC;IACf;;;;;;uBAMD,2BAAO,GAAG;IACR,OAAO,YAAY,CAAC,WAAW,CAAC;IACjC;;;;;;uBAMD,6CAAgB,CAAC,MAAM,EAAE;IACvBA,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7CA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE;MAChED,GAAK,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;MAC7BA,GAAK,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACjC,IAAI,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC;OACb;KACF;IACD,OAAO,KAAK,CAAC;IACd;;;;;;;;;uBASD,yCAAc,CAAC,WAAW,EAAE,UAAU,EAAE;IACtC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;MACzB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IACD,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,kBAAkB;MAC9C,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAAC,OAAO,EAAE,CAAC;GAChB;;;EApJsB,iBAqJxB;;;AAGD,eAAe,UAAU,CAAC;"}
{"version":3,"file":"VectorTile.js","sources":["../../src/ol/VectorTile.js"],"sourcesContent":["/**\r\n * @module ol/VectorTile\r\n */\r\nimport {getUid} from './util.js';\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\n\r\n/**\r\n * @const\r\n * @type {module:ol/extent~Extent}\r\n */\r\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\r\n\r\n\r\n/**\r\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\r\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\r\n * @api\r\n */\r\n\r\nclass VectorTile extends Tile {\r\n\r\n  /**\r\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\r\n   * @param {module:ol/TileState} state State.\r\n   * @param {string} src Data source url.\r\n   * @param {module:ol/format/Feature} format Feature format.\r\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\r\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\r\n   */\r\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\r\n\r\n    super(tileCoord, state, opt_options);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.consumers = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/extent~Extent}\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/format/Feature}\r\n     */\r\n    this.format_ = format;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<module:ol/Feature>}\r\n     */\r\n    this.features_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/featureloader~FeatureLoader}\r\n     */\r\n    this.loader_;\r\n\r\n    /**\r\n     * Data projection\r\n     * @private\r\n     * @type {module:ol/proj/Projection}\r\n     */\r\n    this.projection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, module:ol/render/ReplayGroup>}\r\n     */\r\n    this.replayGroups_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/Tile~LoadFunction}\r\n     */\r\n    this.tileLoadFunction_ = tileLoadFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.url_ = src;\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.features_ = null;\r\n    this.replayGroups_ = {};\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Gets the extent of the vector tile.\r\n   * @return {module:ol/extent~Extent} The extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_ || DEFAULT_EXTENT;\r\n  }\r\n\r\n  /**\r\n   * Get the feature format assigned for reading this tile's features.\r\n   * @return {module:ol/format/Feature} Feature format.\r\n   * @api\r\n   */\r\n  getFormat() {\r\n    return this.format_;\r\n  }\r\n\r\n  /**\r\n   * Get the features for this tile. Geometries will be in the projection returned\r\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\r\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    return this.features_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getKey() {\r\n    return this.url_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature projection of features returned by\r\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\r\n   * @return {module:ol/proj/Projection} Feature projection.\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return this.projection_;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   * @param {string} key Key.\r\n   * @return {module:ol/render/ReplayGroup} Replay group.\r\n   */\r\n  getReplayGroup(layer, key) {\r\n    return this.replayGroups_[getUid(layer) + ',' + key];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    if (this.state == TileState.IDLE) {\r\n      this.setState(TileState.LOADING);\r\n      this.tileLoadFunction_(this, this.url_);\r\n      this.loader_(null, NaN, null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handler for successful tile load.\r\n   * @param {Array.<module:ol/Feature>} features The loaded features.\r\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\r\n   * @param {module:ol/extent~Extent} extent Extent.\r\n   */\r\n  onLoad(features, dataProjection, extent) {\r\n    this.setProjection(dataProjection);\r\n    this.setFeatures(features);\r\n    this.setExtent(extent);\r\n  }\r\n\r\n  /**\r\n   * Handler for tile load errors.\r\n   */\r\n  onError() {\r\n    this.setState(TileState.ERROR);\r\n  }\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\r\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\r\n   * for tiles in projections with `tile-pixels` as units. The extent should be\r\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\r\n   * calculated by multiplying the tile size with the tile pixel ratio. For\r\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\r\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\r\n   * extent. The default is `[0, 0, 4096, 4096]`.\r\n   * @param {module:ol/extent~Extent} extent The extent.\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.extent_ = extent;\r\n  }\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n   * Sets the features for the tile.\r\n   * @param {Array.<module:ol/Feature>} features Features.\r\n   * @api\r\n   */\r\n  setFeatures(features) {\r\n    this.features_ = features;\r\n    this.setState(TileState.LOADED);\r\n  }\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n   * Sets the projection of the features that were added with\r\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\r\n   * @param {module:ol/proj/Projection} projection Feature projection.\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.projection_ = projection;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   * @param {string} key Key.\r\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\r\n   */\r\n  setReplayGroup(layer, key, replayGroup) {\r\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\r\n  }\r\n\r\n  /**\r\n   * Set the feature loader for reading this tile's features.\r\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\r\n   * @api\r\n   */\r\n  setLoader(loader) {\r\n    this.loader_ = loader;\r\n  }\r\n}\r\n\r\nexport default VectorTile;\r\n"],"names":["const","super"],"mappings":"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"}
{"version":3,"file":"filter.js","sources":["../../../src/ol/format/filter.js"],"sourcesContent":["/**\r\n * @module ol/format/filter\r\n */\r\nimport And from '../format/filter/And.js';\r\nimport Bbox from '../format/filter/Bbox.js';\r\nimport Contains from '../format/filter/Contains.js';\r\nimport During from '../format/filter/During.js';\r\nimport EqualTo from '../format/filter/EqualTo.js';\r\nimport GreaterThan from '../format/filter/GreaterThan.js';\r\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\r\nimport Intersects from '../format/filter/Intersects.js';\r\nimport IsBetween from '../format/filter/IsBetween.js';\r\nimport IsLike from '../format/filter/IsLike.js';\r\nimport IsNull from '../format/filter/IsNull.js';\r\nimport LessThan from '../format/filter/LessThan.js';\r\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\r\nimport Not from '../format/filter/Not.js';\r\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\r\nimport Or from '../format/filter/Or.js';\r\nimport Within from '../format/filter/Within.js';\r\n\r\n\r\n/**\r\n * Create a logical `<And>` operator between two or more filter conditions.\r\n *\r\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\r\n * @returns {!module:ol/format/filter/And} `<And>` operator.\r\n * @api\r\n */\r\nexport function and(conditions) {\r\n  const params = [null].concat(Array.prototype.slice.call(arguments));\r\n  return new (Function.prototype.bind.apply(And, params));\r\n}\r\n\r\n\r\n/**\r\n * Create a logical `<Or>` operator between two or more filter conditions.\r\n *\r\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\r\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\r\n * @api\r\n */\r\nexport function or(conditions) {\r\n  const params = [null].concat(Array.prototype.slice.call(arguments));\r\n  return new (Function.prototype.bind.apply(Or, params));\r\n}\r\n\r\n\r\n/**\r\n * Represents a logical `<Not>` operator for a filter condition.\r\n *\r\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\r\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\r\n * @api\r\n */\r\nexport function not(condition) {\r\n  return new Not(condition);\r\n}\r\n\r\n\r\n/**\r\n * Create a `<BBOX>` operator to test whether a geometry-valued property\r\n * intersects a fixed bounding box\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!module:ol/extent~Extent} extent Extent.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\r\n * @api\r\n */\r\nexport function bbox(geometryName, extent, opt_srsName) {\r\n  return new Bbox(geometryName, extent, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Contains>` operator to test whether a geometry-valued property\r\n * contains a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!module:ol/geom/Geometry} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\r\n * @api\r\n */\r\nexport function contains(geometryName, geometry, opt_srsName) {\r\n  return new Contains(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Intersects>` operator to test whether a geometry-valued property\r\n * intersects a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!module:ol/geom/Geometry} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\r\n * @api\r\n */\r\nexport function intersects(geometryName, geometry, opt_srsName) {\r\n  return new Intersects(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Within>` operator to test whether a geometry-valued property\r\n * is within a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!module:ol/geom/Geometry} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\r\n * @api\r\n */\r\nexport function within(geometryName, geometry, opt_srsName) {\r\n  return new Within(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\r\n * @api\r\n */\r\nexport function equalTo(propertyName, expression, opt_matchCase) {\r\n  return new EqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\r\n * @api\r\n */\r\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\r\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsLessThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\r\n * @api\r\n */\r\nexport function lessThan(propertyName, expression) {\r\n  return new LessThan(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function lessThanOrEqualTo(propertyName, expression) {\r\n  return new LessThanOrEqualTo(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\r\n * @api\r\n */\r\nexport function greaterThan(propertyName, expression) {\r\n  return new GreaterThan(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function greaterThanOrEqualTo(propertyName, expression) {\r\n  return new GreaterThanOrEqualTo(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\r\n * is null.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\r\n * @api\r\n */\r\nexport function isNull(propertyName) {\r\n  return new IsNull(propertyName);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\r\n * value lies within a range given by a lower and upper bound (inclusive).\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} lowerBoundary The lower bound of the range.\r\n * @param {!number} upperBoundary The upper bound of the range.\r\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\r\n * @api\r\n */\r\nexport function between(propertyName, lowerBoundary, upperBoundary) {\r\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\r\n}\r\n\r\n\r\n/**\r\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\r\n * value against a text pattern.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} pattern Text pattern.\r\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\r\n *    zero or more string characters. Default is '*'.\r\n * @param {string=} opt_singleChar pattern character which matches any single\r\n *    string character. Default is '.'.\r\n * @param {string=} opt_escapeChar Escape character which can be used to escape\r\n *    the pattern characters. Default is '!'.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\r\n * @api\r\n */\r\nexport function like(propertyName, pattern,\r\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n  return new IsLike(propertyName, pattern,\r\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Create a `<During>` temporal operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} begin The begin date in ISO-8601 format.\r\n * @param {!string} end The end date in ISO-8601 format.\r\n * @returns {!module:ol/format/filter/During} `<During>` operator.\r\n * @api\r\n */\r\nexport function during(propertyName, begin, end) {\r\n  return new During(propertyName, begin, end);\r\n}\r\n"],"names":["const"],"mappings":"AAAA;;;AAGA,OAAO,GAAG,MAAM,yBAAyB,CAAC;AAC1C,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAC5C,OAAO,QAAQ,MAAM,8BAA8B,CAAC;AACpD,OAAO,MAAM,MAAM,4BAA4B,CAAC;AAChD,OAAO,OAAO,MAAM,6BAA6B,CAAC;AAClD,OAAO,WAAW,MAAM,iCAAiC,CAAC;AAC1D,OAAO,oBAAoB,MAAM,0CAA0C,CAAC;AAC5E,OAAO,UAAU,MAAM,gCAAgC,CAAC;AACxD,OAAO,SAAS,MAAM,+BAA+B,CAAC;AACtD,OAAO,MAAM,MAAM,4BAA4B,CAAC;AAChD,OAAO,MAAM,MAAM,4BAA4B,CAAC;AAChD,OAAO,QAAQ,MAAM,8BAA8B,CAAC;AACpD,OAAO,iBAAiB,MAAM,uCAAuC,CAAC;AACtE,OAAO,GAAG,MAAM,yBAAyB,CAAC;AAC1C,OAAO,UAAU,MAAM,gCAAgC,CAAC;AACxD,OAAO,EAAE,MAAM,wBAAwB,CAAC;AACxC,OAAO,MAAM,MAAM,4BAA4B,CAAC;;;;;;;;;;AAUhD,OAAO,SAAS,GAAG,CAAC,UAAU,EAAE;EAC9BA,GAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EACpE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;CACzD;;;;;;;;;;AAUD,OAAO,SAAS,EAAE,CAAC,UAAU,EAAE;EAC7BA,GAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EACpE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;CACxD;;;;;;;;;;AAUD,OAAO,SAAS,GAAG,CAAC,SAAS,EAAE;EAC7B,OAAO,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC;CAC3B;;;;;;;;;;;;;;AAcD,OAAO,SAAS,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE;EACtD,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;CACpD;;;;;;;;;;;;;AAaD,OAAO,SAAS,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;EAC5D,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;CAC1D;;;;;;;;;;;;;AAaD,OAAO,SAAS,UAAU,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;EAC9D,OAAO,IAAI,UAAU,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;CAC5D;;;;;;;;;;;;;AAaD,OAAO,SAAS,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;EAC1D,OAAO,IAAI,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;CACxD;;;;;;;;;;;;AAYD,OAAO,SAAS,OAAO,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE;EAC/D,OAAO,IAAI,OAAO,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;CAC7D;;;;;;;;;;;;AAYD,OAAO,SAAS,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE;EAClE,OAAO,IAAI,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;CAChE;;;;;;;;;;;AAWD,OAAO,SAAS,QAAQ,CAAC,YAAY,EAAE,UAAU,EAAE;EACjD,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;CAC/C;;;;;;;;;;;AAWD,OAAO,SAAS,iBAAiB,CAAC,YAAY,EAAE,UAAU,EAAE;EAC1D,OAAO,IAAI,iBAAiB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;CACxD;;;;;;;;;;;AAWD,OAAO,SAAS,WAAW,CAAC,YAAY,EAAE,UAAU,EAAE;EACpD,OAAO,IAAI,WAAW,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;CAClD;;;;;;;;;;;AAWD,OAAO,SAAS,oBAAoB,CAAC,YAAY,EAAE,UAAU,EAAE;EAC7D,OAAO,IAAI,oBAAoB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;CAC3D;;;;;;;;;;;AAWD,OAAO,SAAS,MAAM,CAAC,YAAY,EAAE;EACnC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;CACjC;;;;;;;;;;;;;AAaD,OAAO,SAAS,OAAO,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE;EAClE,OAAO,IAAI,SAAS,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;CAClE;;;;;;;;;;;;;;;;;;;AAmBD,OAAO,SAAS,IAAI,CAAC,YAAY,EAAE,OAAO;EACxC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE;EAC7D,OAAO,IAAI,MAAM,CAAC,YAAY,EAAE,OAAO;IACrC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;CAChE;;;;;;;;;;;;AAYD,OAAO,SAAS,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE;EAC/C,OAAO,IAAI,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;CAC7C;"}
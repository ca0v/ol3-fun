{"version":3,"file":"EqualTo.js","sources":["../../../../src/ol/format/filter/EqualTo.js"],"sourcesContent":["/**\r\n * @module ol/format/filter/EqualTo\r\n */\r\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsEqualTo>` comparison operator.\r\n * @api\r\n */\r\nclass EqualTo extends ComparisonBinary {\r\n\r\n  /**\r\n   * @param {!string} propertyName Name of the context property to compare.\r\n   * @param {!(string|number)} expression The value to compare.\r\n   * @param {boolean=} opt_matchCase Case-sensitive?\r\n   */\r\n  constructor(propertyName, expression, opt_matchCase) {\r\n    super('PropertyIsEqualTo', propertyName, expression, opt_matchCase);\r\n  }\r\n\r\n}\r\n\r\nexport default EqualTo;\r\n"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,gBAAgB,MAAM,+BAA+B,CAAC;;;;;;;AAO7D,IAAM,OAAO,GAAyB;EAOpC,gBAAW,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE;IACnDA,qBAAK,OAAC,mBAAmB,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;;;;;GACrE;;;EATmB,mBAWrB;;AAED,eAAe,OAAO,CAAC;"}
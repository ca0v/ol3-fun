{"version":3,"file":"GMLBase.js","sources":["../../../src/ol/format/GMLBase.js"],"sourcesContent":["/**\r\n * @module ol/format/GMLBase\r\n */\r\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\r\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\r\n// envelopes/extents, only geometries!\r\nimport {extend} from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from '../format/Feature.js';\r\nimport XMLFeature from '../format/XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const GMLNS = 'http://www.opengis.net/gml';\r\n\r\n\r\n/**\r\n * A regular expression that matches if a string only contains whitespace\r\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\r\n * space (0xa0) is explicitly included as IE doesn't include it in its\r\n * definition of `\\s`.\r\n *\r\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string, string>|string} [featureNS] Feature\r\n * namespace. If not defined will be derived from GML. If multiple\r\n * feature types have been configured which come from different feature\r\n * namespaces, this will be an object with the keys being the prefixes used\r\n * in the entries of featureType array. The values of the object will be the\r\n * feature namespaces themselves. So for instance there might be a featureType\r\n * item `topp:states` in the `featureType` array and then there will be a key\r\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\r\n * @property {Array.<string>|string} [featureType] Feature type(s) to parse.\r\n * If multiple feature types need to be configured\r\n * which come from different feature namespaces, `featureNS` will be an object\r\n * with the keys being the prefixes used in the entries of featureType array.\r\n * The values of the object will be the feature namespaces themselves.\r\n * So for instance there might be a featureType item `topp:states` and then\r\n * there will be a key named `topp` in the featureNS object with value\r\n * `http://www.openplans.org/topp`.\r\n * @property {string} srsName srsName to use when writing geometries.\r\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\r\n * Since the latter is deprecated in GML 3.\r\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\r\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use when\r\n * writing out the GML, this will override the default provided.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Feature base format for reading and writing data in the GML format.\r\n * This class cannot be instantiated, it contains only base content that\r\n * is shared with versioned format classes GML2 and GML3.\r\n *\r\n * @abstract\r\n */\r\nclass GMLBase extends XMLFeature {\r\n\r\n  /**\r\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array.<string>|string|undefined}\r\n     */\r\n    this.featureType = options.featureType;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Object.<string, string>|string|undefined}\r\n     */\r\n    this.featureNS = options.featureNS;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.srsName = options.srsName;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.schemaLocation = '';\r\n\r\n    /**\r\n     * @type {Object.<string, Object.<string, Object>>}\r\n     */\r\n    this.FEATURE_COLLECTION_PARSERS = {};\r\n    this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\r\n      'featureMember': makeReplacer(this.readFeaturesInternal),\r\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\r\n    };\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {Array.<module:ol/Feature> | undefined} Features.\r\n   */\r\n  readFeaturesInternal(node, objectStack) {\r\n    const localName = node.localName;\r\n    let features = null;\r\n    if (localName == 'FeatureCollection') {\r\n      if (node.namespaceURI === 'http://www.opengis.net/wfs') {\r\n        features = pushParseAndPop([],\r\n          this.FEATURE_COLLECTION_PARSERS, node,\r\n          objectStack, this);\r\n      } else {\r\n        features = pushParseAndPop(null,\r\n          this.FEATURE_COLLECTION_PARSERS, node,\r\n          objectStack, this);\r\n      }\r\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\r\n      const context = objectStack[0];\r\n      let featureType = context['featureType'];\r\n      let featureNS = context['featureNS'];\r\n      const prefix = 'p';\r\n      const defaultPrefix = 'p0';\r\n      if (!featureType && node.childNodes) {\r\n        featureType = [], featureNS = {};\r\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n          const child = node.childNodes[i];\r\n          if (child.nodeType === 1) {\r\n            const ft = child.nodeName.split(':').pop();\r\n            if (featureType.indexOf(ft) === -1) {\r\n              let key = '';\r\n              let count = 0;\r\n              const uri = child.namespaceURI;\r\n              for (const candidate in featureNS) {\r\n                if (featureNS[candidate] === uri) {\r\n                  key = candidate;\r\n                  break;\r\n                }\r\n                ++count;\r\n              }\r\n              if (!key) {\r\n                key = prefix + count;\r\n                featureNS[key] = uri;\r\n              }\r\n              featureType.push(key + ':' + ft);\r\n            }\r\n          }\r\n        }\r\n        if (localName != 'featureMember') {\r\n          // recheck featureType for each featureMember\r\n          context['featureType'] = featureType;\r\n          context['featureNS'] = featureNS;\r\n        }\r\n      }\r\n      if (typeof featureNS === 'string') {\r\n        const ns = featureNS;\r\n        featureNS = {};\r\n        featureNS[defaultPrefix] = ns;\r\n      }\r\n      const parsersNS = {};\r\n      const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n      for (const p in featureNS) {\r\n        const parsers = {};\r\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n          const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n            defaultPrefix : featureTypes[i].split(':')[0];\r\n          if (featurePrefix === p) {\r\n            parsers[featureTypes[i].split(':').pop()] =\r\n                (localName == 'featureMembers') ?\r\n                  makeArrayPusher(this.readFeatureElement, this) :\r\n                  makeReplacer(this.readFeatureElement, this);\r\n          }\r\n        }\r\n        parsersNS[featureNS[p]] = parsers;\r\n      }\r\n      if (localName == 'featureMember') {\r\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n      } else {\r\n        features = pushParseAndPop([], parsersNS, node, objectStack);\r\n      }\r\n    }\r\n    if (features === null) {\r\n      features = [];\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/Geometry|undefined} Geometry.\r\n   */\r\n  readGeometryElement(node, objectStack) {\r\n    const context = /** @type {Object} */ (objectStack[0]);\r\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n    /** @type {module:ol/geom/Geometry} */\r\n    const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\r\n    if (geometry) {\r\n      return (\r\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\r\n      );\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/Feature} Feature.\r\n   */\r\n  readFeatureElement(node, objectStack) {\r\n    let n;\r\n    const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\r\n    const values = {};\r\n    let geometryName;\r\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      const localName = n.localName;\r\n      // Assume attribute elements have one child node and that the child\r\n      // is a text or CDATA node (to be treated as text).\r\n      // Otherwise assume it is a geometry node.\r\n      if (n.childNodes.length === 0 ||\r\n          (n.childNodes.length === 1 &&\r\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n        let value = getAllTextContent(n, false);\r\n        if (ONLY_WHITESPACE_RE.test(value)) {\r\n          value = undefined;\r\n        }\r\n        values[localName] = value;\r\n      } else {\r\n        // boundedBy is an extent and must not be considered as a geometry\r\n        if (localName !== 'boundedBy') {\r\n          geometryName = localName;\r\n        }\r\n        values[localName] = this.readGeometryElement(n, objectStack);\r\n      }\r\n    }\r\n    const feature = new Feature(values);\r\n    if (geometryName) {\r\n      feature.setGeometryName(geometryName);\r\n    }\r\n    if (fid) {\r\n      feature.setId(fid);\r\n    }\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/Point|undefined} Point.\r\n   */\r\n  readPoint(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\r\n   */\r\n  readMultiPoint(node, objectStack) {\r\n    /** @type {Array.<Array.<number>>} */\r\n    const coordinates = pushParseAndPop([],\r\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\r\n    if (coordinates) {\r\n      return new MultiPoint(coordinates);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\r\n   */\r\n  readMultiLineString(node, objectStack) {\r\n    /** @type {Array.<module:ol/geom/LineString>} */\r\n    const lineStrings = pushParseAndPop([],\r\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\r\n    if (lineStrings) {\r\n      return new MultiLineString(lineStrings);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\r\n   */\r\n  readMultiPolygon(node, objectStack) {\r\n    /** @type {Array.<module:ol/geom/Polygon>} */\r\n    const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\r\n    if (polygons) {\r\n      return new MultiPolygon(polygons);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  pointMemberParser_(node, objectStack) {\r\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  lineStringMemberParser_(node, objectStack) {\r\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  polygonMemberParser_(node, objectStack) {\r\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/LineString|undefined} LineString.\r\n   */\r\n  readLineString(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n      return lineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>|undefined} LinearRing flat coordinates.\r\n   */\r\n  readFlatLinearRing_(node, objectStack) {\r\n    const ring = pushParseAndPop(null,\r\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\r\n      objectStack, this);\r\n    if (ring) {\r\n      return ring;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/LinearRing|undefined} LinearRing.\r\n   */\r\n  readLinearRing(node, objectStack) {\r\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\r\n   */\r\n  readPolygon(node, objectStack) {\r\n    /** @type {Array.<Array.<number>>} */\r\n    const flatLinearRings = pushParseAndPop([null],\r\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n      const flatCoordinates = flatLinearRings[0];\r\n      const ends = [flatCoordinates.length];\r\n      let i, ii;\r\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n        extend(flatCoordinates, flatLinearRings[i]);\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>} Flat coordinates.\r\n   */\r\n  readFlatCoordinatesFromNode_(node, objectStack) {\r\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readGeometryFromNode(node, opt_options) {\r\n    const geometry = this.readGeometryElement(node,\r\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\r\n    return geometry ? geometry : null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    const options = {\r\n      featureType: this.featureType,\r\n      featureNS: this.featureNS\r\n    };\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    const features = this.readFeaturesInternal(node, [options]);\r\n    return features || [];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readProjectionFromNode(node) {\r\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\r\n  }\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\r\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\r\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\r\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.RING_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\r\n  }\r\n};\r\n\r\nexport default GMLBase;\r\n"],"names":["const","super","i","ii","let","this"],"mappings":"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"}
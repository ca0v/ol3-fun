{"version":3,"file":"GML3.js","sources":["../../../src/ol/format/GML3.js"],"sourcesContent":["/**\r\n * @module ol/format/GML3\r\n */\r\nimport {extend} from '../array.js';\r\nimport {createOrUpdate} from '../extent.js';\r\nimport {transformWithOptions} from '../format/Feature.js';\r\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\r\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\r\nimport Geometry from '../geom/Geometry.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, transformExtent} from '../proj.js';\r\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\r\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\r\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n * @private\r\n */\r\nconst schemaLocation = GMLNS +\r\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\r\n    '1.0.0/gmlsf.xsd';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, string>}\r\n */\r\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n  'MultiLineString': 'lineStringMember',\r\n  'MultiCurve': 'curveMember',\r\n  'MultiPolygon': 'polygonMember',\r\n  'MultiSurface': 'surfaceMember'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format\r\n * version 3.1.1.\r\n * Currently only supports GML 3.1.1 Simple Features profile.\r\n *\r\n * @api\r\n */\r\nclass GML3 extends GMLBase {\r\n\r\n  /**\r\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = /** @type {module:ol/format/GMLBase~Options} */\r\n        (opt_options ? opt_options : {});\r\n\r\n    super(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.surface_ = options.surface !== undefined ? options.surface : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.curve_ = options.curve !== undefined ? options.curve : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multiCurve_ = options.multiCurve !== undefined ?\r\n      options.multiCurve : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multiSurface_ = options.multiSurface !== undefined ?\r\n      options.multiSurface : true;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.schemaLocation = options.schemaLocation ?\r\n      options.schemaLocation : schemaLocation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hasZ = options.hasZ !== undefined ?\r\n      options.hasZ : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\r\n   */\r\n  readMultiCurve_(node, objectStack) {\r\n    /** @type {Array.<module:ol/geom/LineString>} */\r\n    const lineStrings = pushParseAndPop([],\r\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\r\n    if (lineStrings) {\r\n      const multiLineString = new MultiLineString(lineStrings);\r\n      return multiLineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\r\n   */\r\n  readMultiSurface_(node, objectStack) {\r\n    /** @type {Array.<module:ol/geom/Polygon>} */\r\n    const polygons = pushParseAndPop([],\r\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\r\n    if (polygons) {\r\n      return new MultiPolygon(polygons);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  curveMemberParser_(node, objectStack) {\r\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  surfaceMemberParser_(node, objectStack) {\r\n    parseNode(this.SURFACEMEMBER_PARSERS_,\r\n      node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\r\n   */\r\n  readPatch_(node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.PATCHES_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>|undefined} flat coordinates.\r\n   */\r\n  readSegment_(node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\r\n   */\r\n  readPolygonPatch_(node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>|undefined} flat coordinates.\r\n   */\r\n  readLineStringSegment_(node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\r\n      node, objectStack, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  interiorParser_(node, objectStack) {\r\n    /** @type {Array.<number>|undefined} */\r\n    const flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings.push(flatLinearRing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  exteriorParser_(node, objectStack) {\r\n    /** @type {Array.<number>|undefined} */\r\n    const flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings[0] = flatLinearRing;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\r\n   */\r\n  readSurface_(node, objectStack) {\r\n    /** @type {Array.<Array.<number>>} */\r\n    const flatLinearRings = pushParseAndPop([null],\r\n      this.SURFACE_PARSERS_, node, objectStack, this);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n      const flatCoordinates = flatLinearRings[0];\r\n      const ends = [flatCoordinates.length];\r\n      let i, ii;\r\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n        extend(flatCoordinates, flatLinearRings[i]);\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {module:ol/geom/LineString|undefined} LineString.\r\n   */\r\n  readCurve_(node, objectStack) {\r\n    /** @type {Array.<number>} */\r\n    const flatCoordinates = pushParseAndPop([null],\r\n      this.CURVE_PARSERS_, node, objectStack, this);\r\n    if (flatCoordinates) {\r\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n      return lineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {module:ol/extent~Extent|undefined} Envelope.\r\n   */\r\n  readEnvelope_(node, objectStack) {\r\n    /** @type {Array.<number>} */\r\n    const flatCoordinates = pushParseAndPop([null],\r\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\r\n    return createOrUpdate(flatCoordinates[1][0],\r\n      flatCoordinates[1][1], flatCoordinates[2][0],\r\n      flatCoordinates[2][1]);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>|undefined} Flat coordinates.\r\n   */\r\n  readFlatPos_(node, objectStack) {\r\n    let s = getAllTextContent(node, false);\r\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\r\n    /** @type {Array.<number>} */\r\n    const flatCoordinates = [];\r\n    let m;\r\n    while ((m = re.exec(s))) {\r\n      flatCoordinates.push(parseFloat(m[1]));\r\n      s = s.substr(m[0].length);\r\n    }\r\n    if (s !== '') {\r\n      return undefined;\r\n    }\r\n    const context = objectStack[0];\r\n    const containerSrs = context['srsName'];\r\n    let axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      const proj = getProjection(containerSrs);\r\n      axisOrientation = proj.getAxisOrientation();\r\n    }\r\n    if (axisOrientation === 'neu') {\r\n      let i, ii;\r\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\r\n        const y = flatCoordinates[i];\r\n        const x = flatCoordinates[i + 1];\r\n        flatCoordinates[i] = x;\r\n        flatCoordinates[i + 1] = y;\r\n      }\r\n    }\r\n    const len = flatCoordinates.length;\r\n    if (len == 2) {\r\n      flatCoordinates.push(0);\r\n    }\r\n    if (len === 0) {\r\n      return undefined;\r\n    }\r\n    return flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array.<number>|undefined} Flat coordinates.\r\n   */\r\n  readFlatPosList_(node, objectStack) {\r\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n    const context = objectStack[0];\r\n    const containerSrs = context['srsName'];\r\n    const contextDimension = context['srsDimension'];\r\n    let axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      const proj = getProjection(containerSrs);\r\n      axisOrientation = proj.getAxisOrientation();\r\n    }\r\n    const coords = s.split(/\\s+/);\r\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\r\n    let dim = 2;\r\n    if (node.getAttribute('srsDimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        node.getAttribute('srsDimension'));\r\n    } else if (node.getAttribute('dimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        node.getAttribute('dimension'));\r\n    } else if (node.parentNode.getAttribute('srsDimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        node.parentNode.getAttribute('srsDimension'));\r\n    } else if (contextDimension) {\r\n      dim = readNonNegativeIntegerString(contextDimension);\r\n    }\r\n    let x, y, z;\r\n    const flatCoordinates = [];\r\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\r\n      x = parseFloat(coords[i]);\r\n      y = parseFloat(coords[i + 1]);\r\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\r\n      if (axisOrientation.substr(0, 2) === 'en') {\r\n        flatCoordinates.push(x, y, z);\r\n      } else {\r\n        flatCoordinates.push(y, x, z);\r\n      }\r\n    }\r\n    return flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Point} value Point geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePos_(node, value, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsDimension = hasZ ? 3 : 2;\r\n    node.setAttribute('srsDimension', srsDimension);\r\n    const srsName = context['srsName'];\r\n    let axisOrientation = 'enu';\r\n    if (srsName) {\r\n      axisOrientation = getProjection(srsName).getAxisOrientation();\r\n    }\r\n    const point = value.getCoordinates();\r\n    let coords;\r\n    // only 2d for simple features profile\r\n    if (axisOrientation.substr(0, 2) === 'en') {\r\n      coords = (point[0] + ' ' + point[1]);\r\n    } else {\r\n      coords = (point[1] + ' ' + point[0]);\r\n    }\r\n    if (hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      const z = point[2] || 0;\r\n      coords += ' ' + z;\r\n    }\r\n    writeStringTextNode(node, coords);\r\n  }\r\n\r\n  /**\r\n   * @param {Array.<number>} point Point geometry.\r\n   * @param {string=} opt_srsName Optional srsName\r\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n   * @return {string} The coords string.\r\n   * @private\r\n   */\r\n  getCoords_(point, opt_srsName, opt_hasZ) {\r\n    let axisOrientation = 'enu';\r\n    if (opt_srsName) {\r\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n    }\r\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n      point[0] + ' ' + point[1] :\r\n      point[1] + ' ' + point[0]);\r\n    if (opt_hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      const z = point[2] || 0;\r\n      coords += ' ' + z;\r\n    }\r\n\r\n    return coords;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePosList_(node, value, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsDimension = hasZ ? 3 : 2;\r\n    node.setAttribute('srsDimension', srsDimension);\r\n    const srsName = context['srsName'];\r\n    // only 2d for simple features profile\r\n    const points = value.getCoordinates();\r\n    const len = points.length;\r\n    const parts = new Array(len);\r\n    let point;\r\n    for (let i = 0; i < len; ++i) {\r\n      point = points[i];\r\n      parts[i] = this.getCoords_(point, srsName, hasZ);\r\n    }\r\n    writeStringTextNode(node, parts.join(' '));\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Point} geometry Point geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePoint_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const pos = createElementNS(node.namespaceURI, 'pos');\r\n    node.appendChild(pos);\r\n    this.writePos_(pos, geometry, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/extent~Extent} extent Extent.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   */\r\n  writeEnvelope(node, extent, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const keys = ['lowerCorner', 'upperCorner'];\r\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\r\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\r\n      OBJECT_PROPERTY_NODE_FACTORY,\r\n      values,\r\n      objectStack, keys, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeLinearRing_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const posList = createElementNS(node.namespaceURI, 'posList');\r\n    node.appendChild(posList);\r\n    this.writePosList_(posList, geometry, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {*} value Value.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node} Node.\r\n   * @private\r\n   */\r\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const parentNode = context.node;\r\n    const exteriorWritten = context['exteriorWritten'];\r\n    if (exteriorWritten === undefined) {\r\n      context['exteriorWritten'] = true;\r\n    }\r\n    return createElementNS(parentNode.namespaceURI,\r\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n      const rings = geometry.getLinearRings();\r\n      pushSerializeAndPop(\r\n        {node: node, hasZ: hasZ, srsName: srsName},\r\n        this.RING_SERIALIZERS_,\r\n        this.RING_NODE_FACTORY_,\r\n        rings, objectStack, undefined, this);\r\n    } else if (node.nodeName === 'Surface') {\r\n      const patches = createElementNS(node.namespaceURI, 'patches');\r\n      node.appendChild(patches);\r\n      this.writeSurfacePatches_(\r\n        patches, geometry, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeCurveOrLineString_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'LineString' ||\r\n        node.nodeName === 'LineStringSegment') {\r\n      const posList = createElementNS(node.namespaceURI, 'posList');\r\n      node.appendChild(posList);\r\n      this.writePosList_(posList, geometry, objectStack);\r\n    } else if (node.nodeName === 'Curve') {\r\n      const segments = createElementNS(node.namespaceURI, 'segments');\r\n      node.appendChild(segments);\r\n      this.writeCurveSegments_(segments,\r\n        geometry, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    const surface = context['surface'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const polygons = geometry.getPolygons();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\r\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiPoint_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const srsName = context['srsName'];\r\n    const hasZ = context['hasZ'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const points = geometry.getPoints();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\r\n      this.POINTMEMBER_SERIALIZERS_,\r\n      makeSimpleNodeFactory('pointMember'), points,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const hasZ = context['hasZ'];\r\n    const srsName = context['srsName'];\r\n    const curve = context['curve'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    const lines = geometry.getLineStrings();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\r\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeRing_(node, ring, objectStack) {\r\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n    node.appendChild(linearRing);\r\n    this.writeLinearRing_(linearRing, ring, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\r\n    const child = this.GEOMETRY_NODE_FACTORY_(\r\n      polygon, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Point} point Point geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writePointMember_(node, point, objectStack) {\r\n    const child = createElementNS(node.namespaceURI, 'Point');\r\n    node.appendChild(child);\r\n    this.writePoint_(child, point, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LineString} line LineString geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeLineStringOrCurveMember_(node, line, objectStack) {\r\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeCurveOrLineString_(child, line, objectStack);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeSurfacePatches_(node, polygon, objectStack) {\r\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n    node.appendChild(child);\r\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/LineString} line LineString geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeCurveSegments_(node, line, objectStack) {\r\n    const child = createElementNS(node.namespaceURI,\r\n      'LineStringSegment');\r\n    node.appendChild(child);\r\n    this.writeCurveOrLineString_(child, line, objectStack);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   */\r\n  writeGeometryElement(node, geometry, objectStack) {\r\n    const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n    const item = assign({}, context);\r\n    item.node = node;\r\n    let value;\r\n    if (Array.isArray(geometry)) {\r\n      if (context.dataProjection) {\r\n        value = transformExtent(\r\n          geometry, context.featureProjection, context.dataProjection);\r\n      } else {\r\n        value = geometry;\r\n      }\r\n    } else {\r\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\r\n    }\r\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\r\n      (item), this.GEOMETRY_SERIALIZERS_,\r\n      this.GEOMETRY_NODE_FACTORY_, [value],\r\n      objectStack, undefined, this);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   */\r\n  writeFeatureElement(node, feature, objectStack) {\r\n    const fid = feature.getId();\r\n    if (fid) {\r\n      node.setAttribute('fid', fid);\r\n    }\r\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    const featureNS = context['featureNS'];\r\n    const geometryName = feature.getGeometryName();\r\n    if (!context.serializers) {\r\n      context.serializers = {};\r\n      context.serializers[featureNS] = {};\r\n    }\r\n    const properties = feature.getProperties();\r\n    const keys = [];\r\n    const values = [];\r\n    for (const key in properties) {\r\n      const value = properties[key];\r\n      if (value !== null) {\r\n        keys.push(key);\r\n        values.push(value);\r\n        if (key == geometryName || value instanceof Geometry) {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(\r\n              this.writeGeometryElement, this);\r\n          }\r\n        } else {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\r\n      (item), context.serializers,\r\n      makeSimpleNodeFactory(undefined, featureNS),\r\n      values,\r\n      objectStack, keys);\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<module:ol/Feature>} features Features.\r\n   * @param {Array.<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  writeFeatureMembers_(node, features, objectStack) {\r\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    const featureType = context['featureType'];\r\n    const featureNS = context['featureNS'];\r\n    const serializers = {};\r\n    serializers[featureNS] = {};\r\n    serializers[featureNS][featureType] = makeChildAppender(\r\n      this.writeFeatureElement, this);\r\n    const item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\r\n      (item),\r\n      serializers,\r\n      makeSimpleNodeFactory(featureType, featureNS), features,\r\n      objectStack);\r\n  }\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node|undefined} Node.\r\n   * @private\r\n   */\r\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n  }\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node|undefined} Node.\r\n   * @private\r\n   */\r\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\r\n    const context = objectStack[objectStack.length - 1];\r\n    const multiSurface = context['multiSurface'];\r\n    const surface = context['surface'];\r\n    const curve = context['curve'];\r\n    const multiCurve = context['multiCurve'];\r\n    let nodeName;\r\n    if (!Array.isArray(value)) {\r\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\r\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n        nodeName = 'MultiSurface';\r\n      } else if (nodeName === 'Polygon' && surface === true) {\r\n        nodeName = 'Surface';\r\n      } else if (nodeName === 'LineString' && curve === true) {\r\n        nodeName = 'Curve';\r\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n        nodeName = 'MultiCurve';\r\n      }\r\n    } else {\r\n      nodeName = 'Envelope';\r\n    }\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      nodeName);\r\n  }\r\n\r\n  /**\r\n   * Encode a geometry in GML 3.1.1 Simple Features.\r\n   *\r\n   * @param {module:ol/geom/Geometry} geometry Geometry.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  writeGeometryNode(geometry, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    const geom = createElementNS('http://www.opengis.net/gml', 'geom');\r\n    const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\r\n      curve: this.curve_, surface: this.surface_,\r\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\r\n    if (opt_options) {\r\n      assign(context, opt_options);\r\n    }\r\n    this.writeGeometryElement(geom, geometry, [context]);\r\n    return geom;\r\n  }\r\n\r\n  /**\r\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\r\n   *\r\n   * @param {Array.<module:ol/Feature>} features Features.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  writeFeaturesNode(features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    const node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\r\n    const context = {\r\n      srsName: this.srsName,\r\n      hasZ: this.hasZ,\r\n      curve: this.curve_,\r\n      surface: this.surface_,\r\n      multiSurface: this.multiSurface_,\r\n      multiCurve: this.multiCurve_,\r\n      featureNS: this.featureNS,\r\n      featureType: this.featureType\r\n    };\r\n    if (opt_options) {\r\n      assign(context, opt_options);\r\n    }\r\n    this.writeFeatureMembers_(node, features, [context]);\r\n    return node;\r\n  }\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\r\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'interior': GML3.prototype.interiorParser_,\r\n    'exterior': GML3.prototype.exteriorParser_\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.GEOMETRY_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n    'MultiPoint': makeReplacer(\r\n      GMLBase.prototype.readMultiPoint),\r\n    'LineString': makeReplacer(\r\n      GMLBase.prototype.readLineString),\r\n    'MultiLineString': makeReplacer(\r\n      GMLBase.prototype.readMultiLineString),\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readLinearRing),\r\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n    'MultiPolygon': makeReplacer(\r\n      GMLBase.prototype.readMultiPolygon),\r\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\r\n    'MultiSurface': makeReplacer(\r\n      GML3.prototype.readMultiSurface_),\r\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\r\n    'MultiCurve': makeReplacer(\r\n      GML3.prototype.readMultiCurve_),\r\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTICURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'curveMember': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_),\r\n    'curveMembers': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTISURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_),\r\n    'surfaceMembers': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineString': makeArrayPusher(\r\n      GMLBase.prototype.readLineString),\r\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\r\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'patches': makeReplacer(GML3.prototype.readPatch_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'segments': makeReplacer(GML3.prototype.readSegment_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_),\r\n    'upperCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.PATCHES_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'PolygonPatch': makeReplacer(\r\n      GML3.prototype.readPolygonPatch_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SEGMENTS_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineStringSegment': makeReplacer(\r\n      GML3.prototype.readLineStringSegment_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Encode an array of features in GML 3.1.1 Simple Features.\r\n *\r\n * @function\r\n * @param {Array.<module:ol/Feature>} features Features.\r\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\r\n * @return {string} Result.\r\n * @api\r\n */\r\nGML3.prototype.writeFeatures;\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.RING_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\r\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeChildAppender(writeStringTextNode),\r\n    'upperCorner': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_),\r\n    'polygonMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeChildAppender(\r\n      GML3.prototype.writePointMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_),\r\n    'curveMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Curve': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiCurve': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\r\n    'MultiPoint': makeChildAppender(\r\n      GML3.prototype.writeMultiPoint_),\r\n    'LineString': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiLineString': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'LinearRing': makeChildAppender(\r\n      GML3.prototype.writeLinearRing_),\r\n    'Polygon': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiPolygon': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Surface': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiSurface': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Envelope': makeChildAppender(\r\n      GML3.prototype.writeEnvelope)\r\n  }\r\n};\r\n\r\nexport default GML3;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
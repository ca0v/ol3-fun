{"version":3,"file":"Polyline.js","sources":["../../../src/ol/format/Polyline.js"],"sourcesContent":["/**\r\n * @module ol/format/Polyline\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from '../format/Feature.js';\r\nimport TextFeature from '../format/TextFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\r\nimport {flipXY} from '../geom/flat/flip.js';\r\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\r\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\r\n * feature geometries created by the format reader.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the Encoded\r\n * Polyline Algorithm Format.\r\n *\r\n * When reading features, the coordinates are assumed to be in two dimensions\r\n * and in [latitude, longitude] order.\r\n *\r\n * As Polyline sources contain a single feature,\r\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\r\n * feature in an array.\r\n *\r\n * @api\r\n */\r\nclass Polyline extends TextFeature {\r\n\r\n  /**\r\n   * @param {module:ol/format/Polyline~Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.factor_ = options.factor ? options.factor : 1e5;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/geom/GeometryLayout}\r\n     */\r\n    this.geometryLayout_ = options.geometryLayout ?\r\n      options.geometryLayout : GeometryLayout.XY;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeatureFromText(text, opt_options) {\r\n    const geometry = this.readGeometryFromText(text, opt_options);\r\n    return new Feature(geometry);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromText(text, opt_options) {\r\n    const feature = this.readFeatureFromText(text, opt_options);\r\n    return [feature];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readGeometryFromText(text, opt_options) {\r\n    const stride = getStrideForLayout(this.geometryLayout_);\r\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\r\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n    const coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\r\n\r\n    return (\r\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\r\n        new LineString(coordinates, this.geometryLayout_),\r\n        false,\r\n        this.adaptOptions(opt_options)\r\n      ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  writeFeatureText(feature, opt_options) {\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      return this.writeGeometryText(geometry, opt_options);\r\n    } else {\r\n      assert(false, 40); // Expected `feature` to have a geometry\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  writeFeaturesText(features, opt_options) {\r\n    return this.writeFeatureText(features[0], opt_options);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  writeGeometryText(geometry, opt_options) {\r\n    geometry = /** @type {module:ol/geom/LineString} */\r\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of n-dimensional points and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array.<number>} numbers A list of n-dimensional points.\r\n * @param {number} stride The number of dimension of the points in the list.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeDeltas(numbers, stride, opt_factor) {\r\n  const factor = opt_factor ? opt_factor : 1e5;\r\n  let d;\r\n\r\n  const lastNumbers = new Array(stride);\r\n  for (d = 0; d < stride; ++d) {\r\n    lastNumbers[d] = 0;\r\n  }\r\n\r\n  for (let i = 0, ii = numbers.length; i < ii;) {\r\n    for (d = 0; d < stride; ++d, ++i) {\r\n      const num = numbers[i];\r\n      const delta = num - lastNumbers[d];\r\n      lastNumbers[d] = num;\r\n\r\n      numbers[i] = delta;\r\n    }\r\n  }\r\n\r\n  return encodeFloats(numbers, factor);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of n-dimensional points from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number} stride The number of dimension of the points in the\r\n *     encoded string.\r\n * @param {number=} opt_factor The factor by which the resulting numbers will\r\n *     be divided. Default is `1e5`.\r\n * @return {Array.<number>} A list of n-dimensional points.\r\n * @api\r\n */\r\nexport function decodeDeltas(encoded, stride, opt_factor) {\r\n  const factor = opt_factor ? opt_factor : 1e5;\r\n  let d;\r\n\r\n  /** @type {Array.<number>} */\r\n  const lastNumbers = new Array(stride);\r\n  for (d = 0; d < stride; ++d) {\r\n    lastNumbers[d] = 0;\r\n  }\r\n\r\n  const numbers = decodeFloats(encoded, factor);\r\n\r\n  for (let i = 0, ii = numbers.length; i < ii;) {\r\n    for (d = 0; d < stride; ++d, ++i) {\r\n      lastNumbers[d] += numbers[i];\r\n\r\n      numbers[i] = lastNumbers[d];\r\n    }\r\n  }\r\n\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of floating point numbers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array.<number>} numbers A list of floating point numbers.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeFloats(numbers, opt_factor) {\r\n  const factor = opt_factor ? opt_factor : 1e5;\r\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\r\n    numbers[i] = Math.round(numbers[i] * factor);\r\n  }\r\n\r\n  return encodeSignedIntegers(numbers);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of floating point numbers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number=} opt_factor The factor by which the result will be divided.\r\n *     Default is `1e5`.\r\n * @return {Array.<number>} A list of floating point numbers.\r\n * @api\r\n */\r\nexport function decodeFloats(encoded, opt_factor) {\r\n  const factor = opt_factor ? opt_factor : 1e5;\r\n  const numbers = decodeSignedIntegers(encoded);\r\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\r\n    numbers[i] /= factor;\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of signed integers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array.<number>} numbers A list of signed integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeSignedIntegers(numbers) {\r\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\r\n    const num = numbers[i];\r\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\r\n  }\r\n  return encodeUnsignedIntegers(numbers);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of signed integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array.<number>} A list of signed integers.\r\n */\r\nexport function decodeSignedIntegers(encoded) {\r\n  const numbers = decodeUnsignedIntegers(encoded);\r\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\r\n    const num = numbers[i];\r\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of unsigned integers and return an encoded string\r\n *\r\n * @param {Array.<number>} numbers A list of unsigned integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedIntegers(numbers) {\r\n  let encoded = '';\r\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\r\n    encoded += encodeUnsignedInteger(numbers[i]);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of unsigned integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array.<number>} A list of unsigned integers.\r\n */\r\nexport function decodeUnsignedIntegers(encoded) {\r\n  const numbers = [];\r\n  let current = 0;\r\n  let shift = 0;\r\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\r\n    const b = encoded.charCodeAt(i) - 63;\r\n    current |= (b & 0x1f) << shift;\r\n    if (b < 0x20) {\r\n      numbers.push(current);\r\n      current = 0;\r\n      shift = 0;\r\n    } else {\r\n      shift += 5;\r\n    }\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode one single unsigned integer and return an encoded string\r\n *\r\n * @param {number} num Unsigned integer that should be encoded.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedInteger(num) {\r\n  let value, encoded = '';\r\n  while (num >= 0x20) {\r\n    value = (0x20 | (num & 0x1f)) + 63;\r\n    encoded += String.fromCharCode(value);\r\n    num >>= 5;\r\n  }\r\n  value = num + 63;\r\n  encoded += String.fromCharCode(value);\r\n  return encoded;\r\n}\r\n\r\n\r\nexport default Polyline;\r\n"],"names":["super","const","let"],"mappings":"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"}
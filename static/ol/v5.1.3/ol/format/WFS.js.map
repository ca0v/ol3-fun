{"version":3,"file":"WFS.js","sources":["../../../src/ol/format/WFS.js"],"sourcesContent":["/**\r\n * @module ol/format/WFS\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport GML2 from '../format/GML2.js';\r\nimport GML3 from '../format/GML3.js';\r\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\r\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\r\nimport XMLFeature from '../format/XMLFeature.js';\r\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\r\nimport Geometry from '../geom/Geometry.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\r\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\r\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n */\r\nconst FEATURE_COLLECTION_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'boundedBy': makeObjectPropertySetter(\r\n      GMLBase.prototype.readGeometryElement, 'bounds')\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n */\r\nconst TRANSACTION_SUMMARY_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n */\r\nconst TRANSACTION_RESPONSE_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'TransactionSummary': makeObjectPropertySetter(\r\n      readTransactionSummary, 'transactionSummary'),\r\n    'InsertResults': makeObjectPropertySetter(\r\n      readInsertResults, 'insertIds')\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n */\r\nconst QUERY_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'PropertyName': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n */\r\nconst TRANSACTION_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Insert': makeChildAppender(writeFeature),\r\n    'Update': makeChildAppender(writeUpdate),\r\n    'Delete': makeChildAppender(writeDelete),\r\n    'Property': makeChildAppender(writeProperty),\r\n    'Native': makeChildAppender(writeNative)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string, string>|string} [featureNS] The namespace URI used for features.\r\n * @property {Array.<string>|string} [featureType] The feature type to parse. Only used for read operations.\r\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteGetFeatureOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {Array.<string>} featureTypes The feature type names.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {string} [outputFormat] Output format.\r\n * @property {number} [maxFeatures] Maximum number of features to fetch.\r\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\r\n * @property {Array.<string>} [propertyNames] Optional list of property names to serialize.\r\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\r\n * @property {number} [count] Number of features to retrieve when paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\r\n * Web Feature Services have repurposed `maxfeatures` instead.\r\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\r\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\r\n * {@link module:ol/format/Filter} for more information.\r\n * @property {string} [resultType] Indicates what response should be returned,\r\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteTransactionOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {string} featureType The feature type name.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\r\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\r\n * @property {Array.<Object>} nativeElements Native elements. Currently not supported.\r\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\r\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\r\n */\r\n\r\n\r\n/**\r\n * Number of features; bounds/extent.\r\n * @typedef {Object} FeatureCollectionMetadata\r\n * @property {number} numberOfFeatures\r\n * @property {module:ol/extent~Extent} bounds\r\n */\r\n\r\n\r\n/**\r\n * Total deleted; total inserted; total updated; array of insert ids.\r\n * @typedef {Object} TransactionResponse\r\n * @property {number} totalDeleted\r\n * @property {number} totalInserted\r\n * @property {number} totalUpdated\r\n * @property {Array.<string>} insertIds\r\n */\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst FEATURE_PREFIX = 'feature';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst OGCNS = 'http://www.opengis.net/ogc';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst WFSNS = 'http://www.opengis.net/wfs';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst FESNS = 'http://www.opengis.net/fes';\r\n\r\n\r\n/**\r\n * @type {Object.<string, string>}\r\n */\r\nconst SCHEMA_LOCATIONS = {\r\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\r\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst DEFAULT_VERSION = '1.1.0';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the WFS format.\r\n * By default, supports WFS version 1.1.0. You can pass a GML format\r\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\r\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\r\n *\r\n * @api\r\n */\r\nclass WFS extends XMLFeature {\r\n\r\n  /**\r\n   * @param {module:ol/format/WFS~Options=} opt_options Optional configuration object.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<string>|string|undefined}\r\n     */\r\n    this.featureType_ = options.featureType;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, string>|string|undefined}\r\n     */\r\n    this.featureNS_ = options.featureNS;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/format/GMLBase}\r\n     */\r\n    this.gmlFormat_ = options.gmlFormat ?\r\n      options.gmlFormat : new GML3();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.schemaLocation_ = options.schemaLocation ?\r\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<string>|string|undefined} featureType\r\n   */\r\n  getFeatureType() {\r\n    return this.featureType_;\r\n  }\r\n\r\n  /**\r\n   * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\r\n   */\r\n  setFeatureType(featureType) {\r\n    this.featureType_ = featureType;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    const context = /** @type {module:ol/xml~NodeStackItem} */ ({\r\n      'featureType': this.featureType_,\r\n      'featureNS': this.featureNS_\r\n    });\r\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\r\n    const objectStack = [context];\r\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\r\n      'featureMember'] =\r\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\r\n    let features = pushParseAndPop([],\r\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\r\n      objectStack, this.gmlFormat_);\r\n    if (!features) {\r\n      features = [];\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Read transaction response of the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\r\n   * @api\r\n   */\r\n  readTransactionResponse(source) {\r\n    if (isDocument(source)) {\r\n      return this.readTransactionResponseFromDocument(\r\n        /** @type {Document} */ (source));\r\n    } else if (isNode(source)) {\r\n      return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readTransactionResponseFromDocument(doc);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read feature collection metadata of the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   * @api\r\n   */\r\n  readFeatureCollectionMetadata(source) {\r\n    if (isDocument(source)) {\r\n      return this.readFeatureCollectionMetadataFromDocument(\r\n        /** @type {Document} */ (source));\r\n    } else if (isNode(source)) {\r\n      return this.readFeatureCollectionMetadataFromNode(\r\n        /** @type {Node} */ (source));\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readFeatureCollectionMetadataFromDocument(doc);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   */\r\n  readFeatureCollectionMetadataFromDocument(doc) {\r\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readFeatureCollectionMetadataFromNode(n);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   */\r\n  readFeatureCollectionMetadataFromNode(node) {\r\n    const result = {};\r\n    const value = readNonNegativeIntegerString(\r\n      node.getAttribute('numberOfFeatures'));\r\n    result['numberOfFeatures'] = value;\r\n    return pushParseAndPop(\r\n      /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\r\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\r\n  }\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\r\n   */\r\n  readTransactionResponseFromDocument(doc) {\r\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readTransactionResponseFromNode(n);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\r\n   */\r\n  readTransactionResponseFromNode(node) {\r\n    return pushParseAndPop(\r\n      /** @type {module:ol/format/WFS~TransactionResponse} */({}),\r\n      TRANSACTION_RESPONSE_PARSERS, node, []);\r\n  }\r\n\r\n  /**\r\n   * Encode format as WFS `GetFeature` and return the Node.\r\n   *\r\n   * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\r\n   * @return {Node} Result.\r\n   * @api\r\n   */\r\n  writeGetFeature(options) {\r\n    const node = createElementNS(WFSNS, 'GetFeature');\r\n    node.setAttribute('service', 'WFS');\r\n    node.setAttribute('version', '1.1.0');\r\n    let filter;\r\n    if (options) {\r\n      if (options.handle) {\r\n        node.setAttribute('handle', options.handle);\r\n      }\r\n      if (options.outputFormat) {\r\n        node.setAttribute('outputFormat', options.outputFormat);\r\n      }\r\n      if (options.maxFeatures !== undefined) {\r\n        node.setAttribute('maxFeatures', options.maxFeatures);\r\n      }\r\n      if (options.resultType) {\r\n        node.setAttribute('resultType', options.resultType);\r\n      }\r\n      if (options.startIndex !== undefined) {\r\n        node.setAttribute('startIndex', options.startIndex);\r\n      }\r\n      if (options.count !== undefined) {\r\n        node.setAttribute('count', options.count);\r\n      }\r\n      filter = options.filter;\r\n      if (options.bbox) {\r\n        assert(options.geometryName,\r\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\r\n        const bbox = bboxFilter(\r\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\r\n        if (filter) {\r\n          // if bbox and filter are both set, combine the two into a single filter\r\n          filter = andFilter(filter, bbox);\r\n        } else {\r\n          filter = bbox;\r\n        }\r\n      }\r\n    }\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\r\n    /** @type {module:ol/xml~NodeStackItem} */\r\n    const context = {\r\n      node: node,\r\n      'srsName': options.srsName,\r\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\r\n      'featurePrefix': options.featurePrefix,\r\n      'geometryName': options.geometryName,\r\n      'filter': filter,\r\n      'propertyNames': options.propertyNames ? options.propertyNames : []\r\n    };\r\n    assert(Array.isArray(options.featureTypes),\r\n      11); // `options.featureTypes` should be an Array\r\n    writeGetFeature(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Encode format as WFS `Transaction` and return the Node.\r\n   *\r\n   * @param {Array.<module:ol/Feature>} inserts The features to insert.\r\n   * @param {Array.<module:ol/Feature>} updates The features to update.\r\n   * @param {Array.<module:ol/Feature>} deletes The features to delete.\r\n   * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\r\n   * @return {Node} Result.\r\n   * @api\r\n   */\r\n  writeTransaction(inserts, updates, deletes, options) {\r\n    const objectStack = [];\r\n    const node = createElementNS(WFSNS, 'Transaction');\r\n    const version = options.version ? options.version : DEFAULT_VERSION;\r\n    const gmlVersion = version === '1.0.0' ? 2 : 3;\r\n    node.setAttribute('service', 'WFS');\r\n    node.setAttribute('version', version);\r\n    let baseObj;\r\n    /** @type {module:ol/xml~NodeStackItem} */\r\n    let obj;\r\n    if (options) {\r\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\r\n      if (options.handle) {\r\n        node.setAttribute('handle', options.handle);\r\n      }\r\n    }\r\n    const schemaLocation = SCHEMA_LOCATIONS[version];\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\r\n    const featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\r\n    if (inserts) {\r\n      obj = {node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\r\n      assign(obj, baseObj);\r\n      pushSerializeAndPop(obj,\r\n        TRANSACTION_SERIALIZERS,\r\n        makeSimpleNodeFactory('Insert'), inserts,\r\n        objectStack);\r\n    }\r\n    if (updates) {\r\n      obj = {node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\r\n      assign(obj, baseObj);\r\n      pushSerializeAndPop(obj,\r\n        TRANSACTION_SERIALIZERS,\r\n        makeSimpleNodeFactory('Update'), updates,\r\n        objectStack);\r\n    }\r\n    if (deletes) {\r\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\r\n      TRANSACTION_SERIALIZERS,\r\n      makeSimpleNodeFactory('Delete'), deletes,\r\n      objectStack);\r\n    }\r\n    if (options.nativeElements) {\r\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\r\n      TRANSACTION_SERIALIZERS,\r\n      makeSimpleNodeFactory('Native'), options.nativeElements,\r\n      objectStack);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readProjectionFromDocument(doc) {\r\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readProjectionFromNode(n);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readProjectionFromNode(node) {\r\n    if (node.firstElementChild &&\r\n        node.firstElementChild.firstElementChild) {\r\n      node = node.firstElementChild.firstElementChild;\r\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n        if (!(n.childNodes.length === 0 ||\r\n            (n.childNodes.length === 1 &&\r\n            n.firstChild.nodeType === 3))) {\r\n          const objectStack = [{}];\r\n          this.gmlFormat_.readGeometryElement(n, objectStack);\r\n          return getProjection(objectStack.pop().srsName);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array.<*>} objectStack Object stack.\r\n * @return {Object|undefined} Transaction Summary.\r\n */\r\nfunction readTransactionSummary(node, objectStack) {\r\n  return pushParseAndPop(\r\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n */\r\nconst OGC_FID_PARSERS = {\r\n  'http://www.opengis.net/ogc': {\r\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\r\n      return node.getAttribute('fid');\r\n    })\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array.<*>} objectStack Object stack.\r\n */\r\nfunction fidParser(node, objectStack) {\r\n  parseNode(OGC_FID_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\r\n */\r\nconst INSERT_RESULTS_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Feature': fidParser\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array.<*>} objectStack Object stack.\r\n * @return {Array.<string>|undefined} Insert results.\r\n */\r\nfunction readInsertResults(node, objectStack) {\r\n  return pushParseAndPop(\r\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/Feature} feature Feature.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeFeature(node, feature, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  const featureType = context['featureType'];\r\n  const featureNS = context['featureNS'];\r\n  const gmlVersion = context['gmlVersion'];\r\n  const child = createElementNS(featureNS, featureType);\r\n  node.appendChild(child);\r\n  if (gmlVersion === 2) {\r\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\r\n  } else {\r\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {number|string} fid Feature identifier.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeOgcFidFilter(node, fid, objectStack) {\r\n  const filter = createElementNS(OGCNS, 'Filter');\r\n  const child = createElementNS(OGCNS, 'FeatureId');\r\n  filter.appendChild(child);\r\n  child.setAttribute('fid', fid);\r\n  node.appendChild(filter);\r\n}\r\n\r\n\r\n/**\r\n * @param {string|undefined} featurePrefix The prefix of the feature.\r\n * @param {string} featureType The type of the feature.\r\n * @returns {string} The value of the typeName property.\r\n */\r\nfunction getTypeName(featurePrefix, featureType) {\r\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\r\n  const prefix = featurePrefix + ':';\r\n  // The featureType already contains the prefix.\r\n  if (featureType.indexOf(prefix) === 0) {\r\n    return featureType;\r\n  } else {\r\n    return prefix + featureType;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/Feature} feature Feature.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeDelete(node, feature, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\r\n  const featureType = context['featureType'];\r\n  const featurePrefix = context['featurePrefix'];\r\n  const featureNS = context['featureNS'];\r\n  const typeName = getTypeName(featurePrefix, featureType);\r\n  node.setAttribute('typeName', typeName);\r\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  const fid = feature.getId();\r\n  if (fid !== undefined) {\r\n    writeOgcFidFilter(node, fid, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/Feature} feature Feature.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeUpdate(node, feature, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\r\n  const featureType = context['featureType'];\r\n  const featurePrefix = context['featurePrefix'];\r\n  const featureNS = context['featureNS'];\r\n  const typeName = getTypeName(featurePrefix, featureType);\r\n  const geometryName = feature.getGeometryName();\r\n  node.setAttribute('typeName', typeName);\r\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  const fid = feature.getId();\r\n  if (fid !== undefined) {\r\n    const keys = feature.getKeys();\r\n    const values = [];\r\n    for (let i = 0, ii = keys.length; i < ii; i++) {\r\n      const value = feature.get(keys[i]);\r\n      if (value !== undefined) {\r\n        let name = keys[i];\r\n        if (value instanceof Geometry) {\r\n          name = geometryName;\r\n        }\r\n        values.push({name: name, value: value});\r\n      }\r\n    }\r\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\r\n      {'gmlVersion': context['gmlVersion'], node: node,\r\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\r\n    TRANSACTION_SERIALIZERS,\r\n    makeSimpleNodeFactory('Property'), values,\r\n    objectStack);\r\n    writeOgcFidFilter(node, fid, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} pair Property name and value.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeProperty(node, pair, objectStack) {\r\n  const name = createElementNS(WFSNS, 'Name');\r\n  const context = objectStack[objectStack.length - 1];\r\n  const gmlVersion = context['gmlVersion'];\r\n  node.appendChild(name);\r\n  writeStringTextNode(name, pair.name);\r\n  if (pair.value !== undefined && pair.value !== null) {\r\n    const value = createElementNS(WFSNS, 'Value');\r\n    node.appendChild(value);\r\n    if (pair.value instanceof Geometry) {\r\n      if (gmlVersion === 2) {\r\n        GML2.prototype.writeGeometryElement(value,\r\n          pair.value, objectStack);\r\n      } else {\r\n        GML3.prototype.writeGeometryElement(value,\r\n          pair.value, objectStack);\r\n      }\r\n    } else {\r\n      writeStringTextNode(value, pair.value);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\r\n *     nativeElement The native element.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeNative(node, nativeElement, objectStack) {\r\n  if (nativeElement.vendorId) {\r\n    node.setAttribute('vendorId', nativeElement.vendorId);\r\n  }\r\n  if (nativeElement.safeToIgnore !== undefined) {\r\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\r\n  }\r\n  if (nativeElement.value !== undefined) {\r\n    writeStringTextNode(node, nativeElement.value);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\r\n */\r\nconst GETFEATURE_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Query': makeChildAppender(writeQuery)\r\n  },\r\n  'http://www.opengis.net/ogc': {\r\n    'During': makeChildAppender(writeDuringFilter),\r\n    'And': makeChildAppender(writeLogicalFilter),\r\n    'Or': makeChildAppender(writeLogicalFilter),\r\n    'Not': makeChildAppender(writeNotFilter),\r\n    'BBOX': makeChildAppender(writeBboxFilter),\r\n    'Contains': makeChildAppender(writeContainsFilter),\r\n    'Intersects': makeChildAppender(writeIntersectsFilter),\r\n    'Within': makeChildAppender(writeWithinFilter),\r\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\r\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\r\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} featureType Feature type.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeQuery(node, featureType, objectStack) {\r\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  const featurePrefix = context['featurePrefix'];\r\n  const featureNS = context['featureNS'];\r\n  const propertyNames = context['propertyNames'];\r\n  const srsName = context['srsName'];\r\n  let typeName;\r\n  // If feature prefix is not defined, we must not use the default prefix.\r\n  if (featurePrefix) {\r\n    typeName = getTypeName(featurePrefix, featureType);\r\n  } else {\r\n    typeName = featureType;\r\n  }\r\n  node.setAttribute('typeName', typeName);\r\n  if (srsName) {\r\n    node.setAttribute('srsName', srsName);\r\n  }\r\n  if (featureNS) {\r\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  }\r\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\r\n  item.node = node;\r\n  pushSerializeAndPop(item,\r\n    QUERY_SERIALIZERS,\r\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\r\n    objectStack);\r\n  const filter = context['filter'];\r\n  if (filter) {\r\n    const child = createElementNS(OGCNS, 'Filter');\r\n    node.appendChild(child);\r\n    writeFilterCondition(child, filter, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Filter} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeFilterCondition(node, filter, objectStack) {\r\n  /** @type {module:ol/xml~NodeStackItem} */\r\n  const item = {node: node};\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory(filter.getTagName()),\r\n    [filter], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Bbox} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeBboxFilter(node, filter, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Contains} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeContainsFilter(node, filter, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Intersects} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeIntersectsFilter(node, filter, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Within} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeWithinFilter(node, filter, objectStack) {\r\n  const context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/During} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeDuringFilter(node, filter, objectStack) {\r\n\r\n  const valueReference = createElementNS(FESNS, 'ValueReference');\r\n  writeStringTextNode(valueReference, filter.propertyName);\r\n  node.appendChild(valueReference);\r\n\r\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\r\n\r\n  node.appendChild(timePeriod);\r\n\r\n  const begin = createElementNS(GMLNS, 'begin');\r\n  timePeriod.appendChild(begin);\r\n  writeTimeInstant(begin, filter.begin);\r\n\r\n  const end = createElementNS(GMLNS, 'end');\r\n  timePeriod.appendChild(end);\r\n  writeTimeInstant(end, filter.end);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeLogicalFilter(node, filter, objectStack) {\r\n  /** @type {module:ol/xml~NodeStackItem} */\r\n  const item = {node: node};\r\n  const conditions = filter.conditions;\r\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\r\n    const condition = conditions[i];\r\n    pushSerializeAndPop(item,\r\n      GETFEATURE_SERIALIZERS,\r\n      makeSimpleNodeFactory(condition.getTagName()),\r\n      [condition], objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/Not} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeNotFilter(node, filter, objectStack) {\r\n  /** @type {module:ol/xml~NodeStackItem} */\r\n  const item = {node: node};\r\n  const condition = filter.condition;\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory(condition.getTagName()),\r\n    [condition], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeComparisonFilter(node, filter, objectStack) {\r\n  if (filter.matchCase !== undefined) {\r\n    node.setAttribute('matchCase', filter.matchCase.toString());\r\n  }\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n  writeOgcLiteral(node, '' + filter.expression);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/IsNull} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeIsNullFilter(node, filter, objectStack) {\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/IsBetween} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeIsBetweenFilter(node, filter, objectStack) {\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n\r\n  const lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\r\n  node.appendChild(lowerBoundary);\r\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\r\n\r\n  const upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\r\n  node.appendChild(upperBoundary);\r\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {module:ol/format/filter/IsLike} filter Filter.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeIsLikeFilter(node, filter, objectStack) {\r\n  node.setAttribute('wildCard', filter.wildCard);\r\n  node.setAttribute('singleChar', filter.singleChar);\r\n  node.setAttribute('escapeChar', filter.escapeChar);\r\n  if (filter.matchCase !== undefined) {\r\n    node.setAttribute('matchCase', filter.matchCase.toString());\r\n  }\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n  writeOgcLiteral(node, '' + filter.pattern);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} tagName Tag name.\r\n * @param {Node} node Node.\r\n * @param {string} value Value.\r\n */\r\nfunction writeOgcExpression(tagName, node, value) {\r\n  const property = createElementNS(OGCNS, tagName);\r\n  writeStringTextNode(property, value);\r\n  node.appendChild(property);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcPropertyName(node, value) {\r\n  writeOgcExpression('PropertyName', node, value);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcLiteral(node, value) {\r\n  writeOgcExpression('Literal', node, value);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} time PropertyName value.\r\n */\r\nfunction writeTimeInstant(node, time) {\r\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\r\n  node.appendChild(timeInstant);\r\n\r\n  const timePosition = createElementNS(GMLNS, 'timePosition');\r\n  timeInstant.appendChild(timePosition);\r\n  writeStringTextNode(timePosition, time);\r\n}\r\n\r\n\r\n/**\r\n * Encode filter as WFS `Filter` and return the Node.\r\n *\r\n * @param {module:ol/format/filter/Filter} filter Filter.\r\n * @return {Node} Result.\r\n * @api\r\n */\r\nexport function writeFilter(filter) {\r\n  const child = createElementNS(OGCNS, 'Filter');\r\n  writeFilterCondition(child, filter, []);\r\n  return child;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array.<string>} featureTypes Feature types.\r\n * @param {Array.<*>} objectStack Node stack.\r\n */\r\nfunction writeGetFeature(node, featureTypes, objectStack) {\r\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\r\n  item.node = node;\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory('Query'), featureTypes,\r\n    objectStack);\r\n}\r\n\r\n\r\nexport default WFS;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
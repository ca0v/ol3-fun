{"version":3,"file":"XML.js","sources":["../../../src/ol/format/XML.js"],"sourcesContent":["/**\r\n * @module ol/format/XML\r\n */\r\nimport {isDocument, isNode, parse} from '../xml.js';\r\n\r\n/**\r\n * @classdesc\r\n * Generic format for reading non-feature XML data\r\n *\r\n * @abstract\r\n */\r\nclass XML {\r\n  /**\r\n   * Read the source document.\r\n   *\r\n   * @param {Document|Node|string} source The XML source.\r\n   * @return {Object} An object representing the source.\r\n   * @api\r\n   */\r\n  read(source) {\r\n    if (isDocument(source)) {\r\n      return this.readFromDocument(/** @type {Document} */ (source));\r\n    } else if (isNode(source)) {\r\n      return this.readFromNode(/** @type {Node} */ (source));\r\n    } else if (typeof source === 'string') {\r\n      const doc = parse(source);\r\n      return this.readFromDocument(doc);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Document} doc Document.\r\n   * @return {Object} Object\r\n   */\r\n  readFromDocument(doc) {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Node} node Node.\r\n   * @return {Object} Object\r\n   */\r\n  readFromNode(node) {}\r\n}\r\n\r\nexport default XML;\r\n"],"names":["const"],"mappings":"AAAA;;;AAGA,QAAQ,UAAU,EAAE,MAAM,EAAE,KAAK,OAAO,WAAW,CAAC;;;;;;;;AAQpD,IAAM,GAAG;;cAQP,qBAAI,CAAC,MAAM,EAAE;EACb,AAAE,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;IACxB,AAAE,OAAO,IAAI,CAAC,gBAAgB,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;EACnE,AAAE,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;IAC3B,AAAE,OAAO,IAAI,CAAC,YAAY,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;EAC3D,AAAE,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IACvC,AAAEA,GAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5B,AAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;EACtC,AAAE,CAAC,MAAM;IACP,AAAE,OAAO,IAAI,CAAC;EAChB,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,cAAE,6CAAgB,CAAC,GAAG,EAAE,GAAE;;AAE1B,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,cAAE,qCAAY,CAAC,IAAI,EAAE,EAAE,CACtB;;AAED,eAAe,GAAG,CAAC;"}
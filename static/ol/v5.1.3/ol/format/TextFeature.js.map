{"version":3,"file":"TextFeature.js","sources":["../../../src/ol/format/TextFeature.js"],"sourcesContent":["/**\r\n * @module ol/format/TextFeature\r\n */\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for text feature formats.\r\n *\r\n * @abstract\r\n */\r\nclass TextFeature extends FeatureFormat {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getType() {\r\n    return FormatType.TEXT;\r\n  }\r\n\r\n  /**\r\n   * Read the feature from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @return {module:ol/Feature} Feature.\r\n   * @api\r\n   */\r\n  readFeature(source, opt_options) {\r\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {module:ol/Feature} Feature.\r\n   */\r\n  readFeatureFromText(text, opt_options) {}\r\n\r\n  /**\r\n   * Read the features from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @return {Array.<module:ol/Feature>} Features.\r\n   * @api\r\n   */\r\n  readFeatures(source, opt_options) {\r\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {Array.<module:ol/Feature>} Features.\r\n   */\r\n  readFeaturesFromText(text, opt_options) {}\r\n\r\n  /**\r\n   * Read the geometry from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @return {module:ol/geom/Geometry} Geometry.\r\n   * @api\r\n   */\r\n  readGeometry(source, opt_options) {\r\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {module:ol/geom/Geometry} Geometry.\r\n   */\r\n  readGeometryFromText(text, opt_options) {}\r\n\r\n  /**\r\n   * Read the projection from the source.\r\n   *\r\n   * @function\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {module:ol/proj/Projection} Projection.\r\n   * @api\r\n   */\r\n  readProjection(source) {\r\n    return this.readProjectionFromText(getText(source));\r\n  }\r\n\r\n  /**\r\n   * @param {string} text Text.\r\n   * @protected\r\n   * @return {module:ol/proj/Projection} Projection.\r\n   */\r\n  readProjectionFromText(text) {\r\n    return this.dataProjection;\r\n  }\r\n\r\n  /**\r\n   * Encode a feature as a string.\r\n   *\r\n   * @function\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded feature.\r\n   * @api\r\n   */\r\n  writeFeature(feature, opt_options) {\r\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {module:ol/Feature} feature Features.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  writeFeatureText(feature, opt_options) {}\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array.<module:ol/Feature>} features Features.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded features.\r\n   * @api\r\n   */\r\n  writeFeatures(features, opt_options) {\r\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array.<module:ol/Feature>} features Features.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  writeFeaturesText(features, opt_options) {}\r\n\r\n  /**\r\n   * Write a single geometry.\r\n   *\r\n   * @function\r\n   * @param {module:ol/geom/Geometry} geometry Geometry.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @return {string} Geometry.\r\n   * @api\r\n   */\r\n  writeGeometry(geometry, opt_options) {\r\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {module:ol/geom/Geometry} geometry Geometry.\r\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  writeGeometryText(geometry, opt_options) {}\r\n}\r\n\r\n\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {string} Text.\r\n */\r\nfunction getText(source) {\r\n  if (typeof source === 'string') {\r\n    return source;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\nexport default TextFeature;\r\n"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,aAAa,MAAM,sBAAsB,CAAC;AACjD,OAAO,UAAU,MAAM,yBAAyB,CAAC;;;;;;;;;;AAUjD,IAAM,WAAW,GAAsB;EACrC,oBAAW,GAAG;IACZA,kBAAK,KAAC,CAAC,CAAC;;;;;kDACT;;;;;wBAKD,2BAAO,GAAG;IACR,OAAO,UAAU,CAAC,IAAI,CAAC;IACxB;;;;;;;;;;wBAUD,mCAAW,CAAC,MAAM,EAAE,WAAW,EAAE;IAC/B,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IAClF;;;;;;;;;wBASD,mDAAmB,CAAC,IAAI,EAAE,WAAW,EAAE,GAAE;;;;;;;;;;wBAUzC,qCAAY,CAAC,MAAM,EAAE,WAAW,EAAE;IAChC,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACnF;;;;;;;;;wBASD,qDAAoB,CAAC,IAAI,EAAE,WAAW,EAAE,GAAE;;;;;;;;;;wBAU1C,qCAAY,CAAC,MAAM,EAAE,WAAW,EAAE;IAChC,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACnF;;;;;;;;;wBASD,qDAAoB,CAAC,IAAI,EAAE,WAAW,EAAE,GAAE;;;;;;;;;;wBAU1C,yCAAc,CAAC,MAAM,EAAE;IACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD;;;;;;;wBAOD,yDAAsB,CAAC,IAAI,EAAE;IAC3B,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B;;;;;;;;;;;wBAWD,qCAAY,CAAC,OAAO,EAAE,WAAW,EAAE;IACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACvE;;;;;;;;;wBASD,6CAAgB,CAAC,OAAO,EAAE,WAAW,EAAE,GAAE;;;;;;;;;;wBAUzC,uCAAa,CAAC,QAAQ,EAAE,WAAW,EAAE;IACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE;;;;;;;;;wBASD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE,GAAE;;;;;;;;;;;wBAW3C,uCAAa,CAAC,QAAQ,EAAE,WAAW,EAAE;IACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE;;;;;;;;;wBASD,+CAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE;;;EA/JnB,gBAgKzB;;;;;;;AAOD,SAAS,OAAO,CAAC,MAAM,EAAE;EACvB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAO,MAAM,CAAC;GACf,MAAM;IACL,OAAO,EAAE,CAAC;GACX;CACF;;;AAGD,eAAe,WAAW,CAAC;"}
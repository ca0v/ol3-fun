{"version":3,"file":"WMSGetFeatureInfo.js","sources":["../../../src/ol/format/WMSGetFeatureInfo.js"],"sourcesContent":["/**\r\n * @module ol/format/WMSGetFeatureInfo\r\n */\r\nimport {extend, includes} from '../array.js';\r\nimport GML2 from '../format/GML2.js';\r\nimport XMLFeature from '../format/XMLFeature.js';\r\nimport {assign} from '../obj.js';\r\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array.<string>} [layers] If set, only features of the given layers will be returned by the format when read.\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst featureIdentifier = '_feature';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nconst layerIdentifier = '_layer';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMSGetFeatureInfo format. It uses\r\n * {@link module:ol/format/GML2~GML2} to read features.\r\n *\r\n * @api\r\n */\r\nclass WMSGetFeatureInfo extends XMLFeature {\r\n\r\n  /**\r\n   * @param {module:ol/format/WMSGetFeatureInfo~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/format/GML2}\r\n     */\r\n    this.gmlFormat_ = new GML2();\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array.<string>}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n  }\r\n\r\n  /**\r\n   * @return {Array.<string>} layers\r\n   */\r\n  getLayers() {\r\n    return this.layers_;\r\n  }\r\n\r\n  /**\r\n   * @param {Array.<string>} layers Layers to parse.\r\n   */\r\n  setLayers(layers) {\r\n    this.layers_ = layers;\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array.<*>} objectStack Object stack.\r\n   * @return {Array.<module:ol/Feature>} Features.\r\n   * @private\r\n   */\r\n  readFeatures_(node, objectStack) {\r\n    node.setAttribute('namespaceURI', this.featureNS_);\r\n    const localName = node.localName;\r\n    /** @type {Array.<module:ol/Feature>} */\r\n    let features = [];\r\n    if (node.childNodes.length === 0) {\r\n      return features;\r\n    }\r\n    if (localName == 'msGMLOutput') {\r\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\r\n        const layer = node.childNodes[i];\r\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\r\n          continue;\r\n        }\r\n        const context = objectStack[0];\r\n\r\n        const toRemove = layerIdentifier;\r\n        const layerName = layer.localName.replace(toRemove, '');\r\n\r\n        if (this.layers_ && !includes(this.layers_, layerName)) {\r\n          continue;\r\n        }\r\n\r\n        const featureType = layerName +\r\n            featureIdentifier;\r\n\r\n        context['featureType'] = featureType;\r\n        context['featureNS'] = this.featureNS_;\r\n\r\n        const parsers = {};\r\n        parsers[featureType] = makeArrayPusher(\r\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\r\n        const parsersNS = makeStructureNS(\r\n          [context['featureNS'], null], parsers);\r\n        layer.setAttribute('namespaceURI', this.featureNS_);\r\n        const layerFeatures = pushParseAndPop(\r\n          [], parsersNS, layer, objectStack, this.gmlFormat_);\r\n        if (layerFeatures) {\r\n          extend(features, layerFeatures);\r\n        }\r\n      }\r\n    }\r\n    if (localName == 'FeatureCollection') {\r\n      const gmlFeatures = pushParseAndPop([],\r\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\r\n        [{}], this.gmlFormat_);\r\n      if (gmlFeatures) {\r\n        features = gmlFeatures;\r\n      }\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  readFeaturesFromNode(node, opt_options) {\r\n    const options = {};\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    return this.readFeatures_(node, [options]);\r\n  }\r\n\r\n  /**\r\n   * Not implemented.\r\n   * @inheritDoc\r\n   */\r\n  writeFeatureNode(feature, opt_options) {}\r\n\r\n  /**\r\n   * Not implemented.\r\n   * @inheritDoc\r\n   */\r\n  writeFeaturesNode(features, opt_options) {}\r\n\r\n  /**\r\n   * Not implemented.\r\n   * @inheritDoc\r\n   */\r\n  writeGeometryNode(geometry, opt_options) {}\r\n}\r\n\r\n\r\nexport default WMSGetFeatureInfo;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
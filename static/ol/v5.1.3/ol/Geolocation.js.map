{"version":3,"file":"Geolocation.js","sources":["../../src/ol/Geolocation.js"],"sourcesContent":["/**\r\n * @module ol/Geolocation\r\n */\r\nimport GeolocationProperty from './GeolocationProperty.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport {listen} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport {circular as circularPolygon} from './geom/Polygon.js';\r\nimport {GEOLOCATION} from './has.js';\r\nimport {toRadians} from './math.js';\r\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [tracking=false] Start Tracking right after\r\n * instantiation.\r\n * @property {PositionOptions} [trackingOptions] Tracking options.\r\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\r\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\r\n * is reported in.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Helper class for providing HTML5 Geolocation capabilities.\r\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\r\n * is used to locate a user's position.\r\n *\r\n * To get notified of position changes, register a listener for the generic\r\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\r\n *\r\n * Example:\r\n *\r\n *     var geolocation = new Geolocation({\r\n *       // take the projection to use from the map's view\r\n *       projection: view.getProjection()\r\n *     });\r\n *     // listen to changes in position\r\n *     geolocation.on('change', function(evt) {\r\n *       window.console.log(geolocation.getPosition());\r\n *     });\r\n *\r\n * @fires error\r\n * @api\r\n */\r\nclass Geolocation extends BaseObject {\r\n\r\n  /**\r\n   * @param {module:ol/Geolocation~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super();\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * The unprojected (EPSG:4326) device position.\r\n     * @private\r\n     * @type {module:ol/coordinate~Coordinate}\r\n     */\r\n    this.position_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/proj~TransformFunction}\r\n     */\r\n    this.transform_ = identityTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.watchId_ = undefined;\r\n\r\n    listen(\r\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\r\n      this.handleProjectionChanged_, this);\r\n    listen(\r\n      this, getChangeEventType(GeolocationProperty.TRACKING),\r\n      this.handleTrackingChanged_, this);\r\n\r\n    if (options.projection !== undefined) {\r\n      this.setProjection(options.projection);\r\n    }\r\n    if (options.trackingOptions !== undefined) {\r\n      this.setTrackingOptions(options.trackingOptions);\r\n    }\r\n\r\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.setTracking(false);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleProjectionChanged_() {\r\n    const projection = this.getProjection();\r\n    if (projection) {\r\n      this.transform_ = getTransformFromProjections(\r\n        getProjection('EPSG:4326'), projection);\r\n      if (this.position_) {\r\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTrackingChanged_() {\r\n    if (GEOLOCATION) {\r\n      const tracking = this.getTracking();\r\n      if (tracking && this.watchId_ === undefined) {\r\n        this.watchId_ = navigator.geolocation.watchPosition(\r\n          this.positionChange_.bind(this),\r\n          this.positionError_.bind(this),\r\n          this.getTrackingOptions());\r\n      } else if (!tracking && this.watchId_ !== undefined) {\r\n        navigator.geolocation.clearWatch(this.watchId_);\r\n        this.watchId_ = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Position} position position event.\r\n   */\r\n  positionChange_(position) {\r\n    const coords = position.coords;\r\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\r\n    this.set(GeolocationProperty.ALTITUDE,\r\n      coords.altitude === null ? undefined : coords.altitude);\r\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\r\n      coords.altitudeAccuracy === null ?\r\n        undefined : coords.altitudeAccuracy);\r\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\r\n      undefined : toRadians(coords.heading));\r\n    if (!this.position_) {\r\n      this.position_ = [coords.longitude, coords.latitude];\r\n    } else {\r\n      this.position_[0] = coords.longitude;\r\n      this.position_[1] = coords.latitude;\r\n    }\r\n    const projectedPosition = this.transform_(this.position_);\r\n    this.set(GeolocationProperty.POSITION, projectedPosition);\r\n    this.set(GeolocationProperty.SPEED,\r\n      coords.speed === null ? undefined : coords.speed);\r\n    const geometry = circularPolygon(this.position_, coords.accuracy);\r\n    geometry.applyTransform(this.transform_);\r\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Triggered when the Geolocation returns an error.\r\n   * @event error\r\n   * @api\r\n   */\r\n\r\n  /**\r\n   * @private\r\n   * @param {PositionError} error error object.\r\n   */\r\n  positionError_(error) {\r\n    error.type = EventType.ERROR;\r\n    this.setTracking(false);\r\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\r\n  }\r\n\r\n  /**\r\n   * Get the accuracy of the position in meters.\r\n   * @return {number|undefined} The accuracy of the position measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAccuracy() {\r\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\r\n  }\r\n\r\n  /**\r\n   * Get a geometry of the position accuracy.\r\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAccuracyGeometry() {\r\n    return (\r\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the altitude associated with the position.\r\n   * @return {number|undefined} The altitude of the position in meters above mean\r\n   *     sea level.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAltitude() {\r\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\r\n  }\r\n\r\n  /**\r\n   * Get the altitude accuracy of the position.\r\n   * @return {number|undefined} The accuracy of the altitude measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getAltitudeAccuracy() {\r\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\r\n  }\r\n\r\n  /**\r\n   * Get the heading as radians clockwise from North.\r\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\r\n   * is set to `true` in the tracking options.\r\n   * @return {number|undefined} The heading of the device in radians from north.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getHeading() {\r\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\r\n  }\r\n\r\n  /**\r\n   * Get the position of the device.\r\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\r\n   *     in the current projection.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPosition() {\r\n    return (\r\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the projection associated with the position.\r\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return (\r\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the speed in meters per second.\r\n   * @return {number|undefined} The instantaneous speed of the device in meters\r\n   *     per second.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSpeed() {\r\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\r\n  }\r\n\r\n  /**\r\n   * Determine if the device location is being tracked.\r\n   * @return {boolean} The device location is being tracked.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTracking() {\r\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\r\n  }\r\n\r\n  /**\r\n   * Get the tracking options.\r\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @return {PositionOptions|undefined} PositionOptions as defined by\r\n   *     the [HTML5 Geolocation spec\r\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTrackingOptions() {\r\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\r\n  }\r\n\r\n  /**\r\n   * Set the projection to use for transforming the coordinates.\r\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\r\n  }\r\n\r\n  /**\r\n   * Enable or disable tracking.\r\n   * @param {boolean} tracking Enable tracking.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTracking(tracking) {\r\n    this.set(GeolocationProperty.TRACKING, tracking);\r\n  }\r\n\r\n  /**\r\n   * Set the tracking options.\r\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @param {PositionOptions} options PositionOptions as defined by the\r\n   *     [HTML5 Geolocation spec\r\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTrackingOptions(options) {\r\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\r\n  }\r\n}\r\n\r\n\r\nexport default Geolocation;\r\n"],"names":["super","const"],"mappings":"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"}
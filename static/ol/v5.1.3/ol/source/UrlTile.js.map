{"version":3,"file":"UrlTile.js","sources":["../../../src/ol/source/UrlTile.js"],"sourcesContent":["/**\r\n * @module ol/source/UrlTile\r\n */\r\nimport {getUid} from '../util.js';\r\nimport TileState from '../TileState.js';\r\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\r\nimport TileEventType from '../source/TileEventType.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/source/Source~AttributionLike} [attributions]\r\n * @property {number} [cacheSize]\r\n * @property {module:ol/extent~Extent} [extent]\r\n * @property {boolean} [opaque]\r\n * @property {module:ol/proj~ProjectionLike} [projection]\r\n * @property {module:ol/source/State} [state]\r\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\r\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\r\n * @property {number} [tilePixelRatio]\r\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\r\n * @property {string} [url]\r\n * @property {Array.<string>} [urls]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing tiles divided into a tile grid over http.\r\n *\r\n * @fires module:ol/source/TileEvent\r\n */\r\nclass UrlTile extends TileSource {\r\n  /**\r\n   * @param {module:ol/source/UrlTile~Options=} options Image tile options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      extent: options.extent,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @protected\r\n     * @type {module:ol/Tile~LoadFunction}\r\n     */\r\n    this.tileLoadFunction = options.tileLoadFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {module:ol/Tile~UrlFunction}\r\n     */\r\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\r\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array.<string>|null}\r\n     */\r\n    this.urls = null;\r\n\r\n    if (options.urls) {\r\n      this.setUrls(options.urls);\r\n    } else if (options.url) {\r\n      this.setUrl(options.url);\r\n    }\r\n    if (options.tileUrlFunction) {\r\n      this.setTileUrlFunction(options.tileUrlFunction);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<number, boolean>}\r\n     */\r\n    this.tileLoadingKeys_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the tile load function of the source.\r\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\r\n   * @api\r\n   */\r\n  getTileLoadFunction() {\r\n    return this.tileLoadFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the tile URL function of the source.\r\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\r\n   * @api\r\n   */\r\n  getTileUrlFunction() {\r\n    return this.tileUrlFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the URLs used for this source.\r\n   * When a tileUrlFunction is used instead of url or urls,\r\n   * null will be returned.\r\n   * @return {!Array.<string>|null} URLs.\r\n   * @api\r\n   */\r\n  getUrls() {\r\n    return this.urls;\r\n  }\r\n\r\n  /**\r\n   * Handle tile change events.\r\n   * @param {module:ol/events/Event} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {module:ol/Tile} */ (event.target);\r\n    const uid = getUid(tile);\r\n    const tileState = tile.getState();\r\n    let type;\r\n    if (tileState == TileState.LOADING) {\r\n      this.tileLoadingKeys_[uid] = true;\r\n      type = TileEventType.TILELOADSTART;\r\n    } else if (uid in this.tileLoadingKeys_) {\r\n      delete this.tileLoadingKeys_[uid];\r\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\r\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\r\n          TileEventType.TILELOADEND : undefined;\r\n    }\r\n    if (type != undefined) {\r\n      this.dispatchEvent(new TileSourceEvent(type, tile));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the tile load function of the source.\r\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\r\n   * @api\r\n   */\r\n  setTileLoadFunction(tileLoadFunction) {\r\n    this.tileCache.clear();\r\n    this.tileLoadFunction = tileLoadFunction;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the tile URL function of the source.\r\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\r\n   * @param {string=} opt_key Optional new tile key for the source.\r\n   * @api\r\n   */\r\n  setTileUrlFunction(tileUrlFunction, opt_key) {\r\n    this.tileUrlFunction = tileUrlFunction;\r\n    this.tileCache.pruneExceptNewestZ();\r\n    if (typeof opt_key !== 'undefined') {\r\n      this.setKey(opt_key);\r\n    } else {\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string} url URL.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    const urls = this.urls = expandUrl(url);\r\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\r\n      this.fixedTileUrlFunction.bind(this) :\r\n      createFromTemplates(urls, this.tileGrid), url);\r\n  }\r\n\r\n  /**\r\n   * Set the URLs to use for requests.\r\n   * @param {Array.<string>} urls URLs.\r\n   * @api\r\n   */\r\n  setUrls(urls) {\r\n    this.urls = urls;\r\n    const key = urls.join('\\n');\r\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\r\n      this.fixedTileUrlFunction.bind(this) :\r\n      createFromTemplates(urls, this.tileGrid), key);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  useTile(z, x, y) {\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      this.tileCache.get(tileCoordKey);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @type {module:ol/Tile~UrlFunction|undefined}\r\n * @protected\r\n */\r\nUrlTile.prototype.fixedTileUrlFunction;\r\n\r\nexport default UrlTile;\r\n"],"names":["super","const","let"],"mappings":"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"}
{"version":3,"file":"Zoomify.js","sources":["../../../src/ol/source/Zoomify.js"],"sourcesContent":["/**\r\n * @module ol/source/Zoomify\r\n */\r\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\r\n\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileState from '../TileState.js';\r\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\r\nimport {assert} from '../asserts.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {getTopLeft} from '../extent.js';\r\nimport {toSize} from '../size.js';\r\nimport TileImage from '../source/TileImage.js';\r\nimport TileGrid from '../tilegrid/TileGrid.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst TierSizeCalculation = {\r\n  DEFAULT: 'default',\r\n  TRUNCATED: 'truncated'\r\n};\r\n\r\n\r\nexport class CustomTile extends ImageTile {\r\n\r\n  /**\r\n   * @param {module:ol/tilegrid/TileGrid} tileGrid TileGrid that the tile belongs to.\r\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\r\n   * @param {module:ol/TileState} state State.\r\n   * @param {string} src Image source URI.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\r\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\r\n   */\r\n  constructor(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n\r\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    this.zoomifyImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/size~Size}\r\n     */\r\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @inheritDoc\r\n */\r\nCustomTile.prototype.getImage = function() {\r\n  if (this.zoomifyImage_) {\r\n    return this.zoomifyImage_;\r\n  }\r\n  const image = ImageTile.prototype.getImage.call(this);\r\n  if (this.state == TileState.LOADED) {\r\n    const tileSize = this.tileSize_;\r\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\r\n      this.zoomifyImage_ = image;\r\n      return image;\r\n    } else {\r\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n      context.drawImage(image, 0, 0);\r\n      this.zoomifyImage_ = context.canvas;\r\n      return context.canvas;\r\n    }\r\n  } else {\r\n    return image;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {string} [url] URL template or base URL of the Zoomify service.\r\n * A base URL is the fixed part\r\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\r\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\r\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\r\n * `{tileIndex}` and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\r\n * @property {module:ol/size~Size} [size] Size of the image.\r\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\r\n * Default sets the TileGrid in the\r\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\r\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\r\n * as `[0, 0, width, height]`.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\r\n * Imaging Protocol are supported).\r\n * @api\r\n */\r\nclass Zoomify extends TileImage {\r\n\r\n  /**\r\n   * @param {module:ol/source/Zoomify~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    const size = options.size;\r\n    const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\r\n      options.tierSizeCalculation :\r\n      TierSizeCalculation.DEFAULT;\r\n\r\n    const imageWidth = size[0];\r\n    const imageHeight = size[1];\r\n    const extent = options.extent || [0, -size[1], size[0], 0];\r\n    const tierSizeInTiles = [];\r\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\r\n    let tileSizeForTierSizeCalculation = tileSize;\r\n\r\n    switch (tierSizeCalculation) {\r\n      case TierSizeCalculation.DEFAULT:\r\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\r\n          tierSizeInTiles.push([\r\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\r\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\r\n          ]);\r\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\r\n        }\r\n        break;\r\n      case TierSizeCalculation.TRUNCATED:\r\n        let width = imageWidth;\r\n        let height = imageHeight;\r\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\r\n          tierSizeInTiles.push([\r\n            Math.ceil(width / tileSizeForTierSizeCalculation),\r\n            Math.ceil(height / tileSizeForTierSizeCalculation)\r\n          ]);\r\n          width >>= 1;\r\n          height >>= 1;\r\n        }\r\n        break;\r\n      default:\r\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\r\n        break;\r\n    }\r\n\r\n    tierSizeInTiles.push([1, 1]);\r\n    tierSizeInTiles.reverse();\r\n\r\n    const resolutions = [1];\r\n    const tileCountUpToTier = [0];\r\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\r\n      resolutions.push(1 << i);\r\n      tileCountUpToTier.push(\r\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\r\n          tileCountUpToTier[i - 1]\r\n      );\r\n    }\r\n    resolutions.reverse();\r\n\r\n    const tileGrid = new TileGrid({\r\n      tileSize: tileSize,\r\n      extent: extent,\r\n      origin: getTopLeft(extent),\r\n      resolutions: resolutions\r\n    });\r\n\r\n    let url = options.url;\r\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\r\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\r\n    }\r\n    const urls = expandUrl(url);\r\n\r\n    /**\r\n     * @param {string} template Template.\r\n     * @return {module:ol/Tile~UrlFunction} Tile URL function.\r\n     */\r\n    function createFromTemplate(template) {\r\n\r\n      return (\r\n        /**\r\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\r\n         * @param {number} pixelRatio Pixel ratio.\r\n         * @param {module:ol/proj/Projection} projection Projection.\r\n         * @return {string|undefined} Tile URL.\r\n         */\r\n        function(tileCoord, pixelRatio, projection) {\r\n          if (!tileCoord) {\r\n            return undefined;\r\n          } else {\r\n            const tileCoordZ = tileCoord[0];\r\n            const tileCoordX = tileCoord[1];\r\n            const tileCoordY = -tileCoord[2] - 1;\r\n            const tileIndex =\r\n                tileCoordX +\r\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\r\n            const tileSize = tileGrid.getTileSize(tileCoordZ);\r\n            const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\r\n            const localContext = {\r\n              'z': tileCoordZ,\r\n              'x': tileCoordX,\r\n              'y': tileCoordY,\r\n              'tileIndex': tileIndex,\r\n              'TileGroup': 'TileGroup' + tileGroup\r\n            };\r\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n              return localContext[p];\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\r\n\r\n    const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: ZoomifyTileClass,\r\n      tileGrid: tileGrid,\r\n      tileUrlFunction: tileUrlFunction,\r\n      transition: options.transition\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Zoomify;\r\n"],"names":["const","super","let"],"mappings":"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"}
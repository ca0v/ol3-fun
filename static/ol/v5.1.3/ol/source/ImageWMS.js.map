{"version":3,"file":"ImageWMS.js","sources":["../../../src/ol/source/ImageWMS.js"],"sourcesContent":["/**\r\n * @module ol/source/ImageWMS\r\n */\r\n\r\nimport {DEFAULT_WMS_VERSION} from './common.js';\r\n\r\nimport ImageWrapper from '../Image.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, transform} from '../proj.js';\r\nimport {calculateSourceResolution} from '../reproj.js';\r\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\r\nimport WMSServerType from '../source/WMSServerType.js';\r\nimport {compareVersions} from '../string.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {module:ol/size~Size}\r\n */\r\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\r\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\r\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {Object.<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {module:ol/proj~ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\r\n * twice the width and height of the map viewport, and so on. Must be `1` or\r\n * higher.\r\n * @property {Array.<number>} [resolutions] Resolutions.\r\n * If specified, requests will be made for these resolutions only.\r\n * @property {string} url WMS service URL.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Source for WMS servers providing single, untiled images.\r\n *\r\n * @fires ol/source/Image~ImageSourceEvent\r\n * @api\r\n */\r\nclass ImageWMS extends ImageSource {\r\n  /**\r\n   * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options || {};\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      resolutions: options.resolutions\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/Image~LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n      options.imageLoadFunction : defaultImageLoadFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = options.params || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.v13_ = true;\r\n    this.updateV13_();\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/source/WMSServerType|undefined}\r\n     */\r\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/Image}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/size~Size}\r\n     */\r\n    this.imageSize_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n   * constructed.\r\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\r\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n   *     specified here.\r\n   * @return {string|undefined} GetFeatureInfo URL.\r\n   * @api\r\n   */\r\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\r\n    if (this.url_ === undefined) {\r\n      return undefined;\r\n    }\r\n    const projectionObj = getProjection(projection);\r\n    const sourceProjectionObj = this.getProjection();\r\n\r\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\r\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n    }\r\n\r\n    const extent = getForViewAndSize(coordinate, resolution, 0,\r\n      GETFEATUREINFO_IMAGE_SIZE);\r\n\r\n    const baseParams = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetFeatureInfo',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true,\r\n      'QUERY_LAYERS': this.params_['LAYERS']\r\n    };\r\n    assign(baseParams, this.params_, params);\r\n\r\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\r\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\r\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n\r\n    return this.getRequestUrl_(\r\n      extent, GETFEATUREINFO_IMAGE_SIZE,\r\n      1, sourceProjectionObj || projectionObj, baseParams);\r\n  }\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  getParams() {\r\n    return this.params_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getImageInternal(extent, resolution, pixelRatio, projection) {\r\n\r\n    if (this.url_ === undefined) {\r\n      return null;\r\n    }\r\n\r\n    resolution = this.findNearestResolution(resolution);\r\n\r\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n      pixelRatio = 1;\r\n    }\r\n\r\n    const imageResolution = resolution / pixelRatio;\r\n\r\n    const center = getCenter(extent);\r\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\r\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\r\n    const viewExtent = getForViewAndSize(center, imageResolution, 0,\r\n      [viewWidth, viewHeight]);\r\n    const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\r\n    const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\r\n    const requestExtent = getForViewAndSize(center, imageResolution, 0,\r\n      [requestWidth, requestHeight]);\r\n\r\n    const image = this.image_;\r\n    if (image &&\r\n        this.renderedRevision_ == this.getRevision() &&\r\n        image.getResolution() == resolution &&\r\n        image.getPixelRatio() == pixelRatio &&\r\n        containsExtent(image.getExtent(), viewExtent)) {\r\n      return image;\r\n    }\r\n\r\n    const params = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetMap',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true\r\n    };\r\n    assign(params, this.params_);\r\n\r\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\r\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\r\n\r\n    const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\r\n      projection, params);\r\n\r\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\r\n      url, this.crossOrigin_, this.imageLoadFunction_);\r\n\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    listen(this.image_, EventType.CHANGE,\r\n      this.handleImageChange, this);\r\n\r\n    return this.image_;\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the image load function of the source.\r\n   * @return {module:ol/Image~LoadFunction} The image load function.\r\n   * @api\r\n   */\r\n  getImageLoadFunction() {\r\n    return this.imageLoadFunction_;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/extent~Extent} extent Extent.\r\n   * @param {module:ol/size~Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/proj/Projection} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string} Request URL.\r\n   * @private\r\n   */\r\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\r\n\r\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\r\n\r\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n\r\n    if (!('STYLES' in this.params_)) {\r\n      params['STYLES'] = '';\r\n    }\r\n\r\n    if (pixelRatio != 1) {\r\n      switch (this.serverType_) {\r\n        case WMSServerType.GEOSERVER:\r\n          const dpi = (90 * pixelRatio + 0.5) | 0;\r\n          if ('FORMAT_OPTIONS' in params) {\r\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n          } else {\r\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n          }\r\n          break;\r\n        case WMSServerType.MAPSERVER:\r\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n          break;\r\n        case WMSServerType.CARMENTA_SERVER:\r\n        case WMSServerType.QGIS:\r\n          params['DPI'] = 90 * pixelRatio;\r\n          break;\r\n        default:\r\n          assert(false, 8); // Unknown `serverType` configured\r\n          break;\r\n      }\r\n    }\r\n\r\n    params['WIDTH'] = size[0];\r\n    params['HEIGHT'] = size[1];\r\n\r\n    const axisOrientation = projection.getAxisOrientation();\r\n    let bbox;\r\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\r\n    } else {\r\n      bbox = extent;\r\n    }\r\n    params['BBOX'] = bbox.join(',');\r\n\r\n    return appendParams(/** @type {string} */ (this.url_), params);\r\n  }\r\n\r\n  /**\r\n   * Return the URL used for this WMS source.\r\n   * @return {string|undefined} URL.\r\n   * @api\r\n   */\r\n  getUrl() {\r\n    return this.url_;\r\n  }\r\n\r\n  /**\r\n   * Set the image load function of the source.\r\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\r\n   * @api\r\n   */\r\n  setImageLoadFunction(imageLoadFunction) {\r\n    this.image_ = null;\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string|undefined} url URL.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    if (url != this.url_) {\r\n      this.url_ = url;\r\n      this.image_ = null;\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  updateParams(params) {\r\n    assign(this.params_, params);\r\n    this.updateV13_();\r\n    this.image_ = null;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateV13_() {\r\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n    this.v13_ = compareVersions(version, '1.3') >= 0;\r\n  }\r\n}\r\n\r\n\r\nexport default ImageWMS;\r\n"],"names":["const","super","let"],"mappings":"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"}
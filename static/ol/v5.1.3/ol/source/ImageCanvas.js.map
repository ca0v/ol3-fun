{"version":3,"file":"ImageCanvas.js","sources":["../../../src/ol/source/ImageCanvas.js"],"sourcesContent":["/**\r\n * @module ol/source/ImageCanvas\r\n */\r\n\r\nimport ImageCanvas from '../ImageCanvas.js';\r\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\r\nimport ImageSource from '../source/Image.js';\r\n\r\n\r\n/**\r\n * A function returning the canvas element (`{HTMLCanvasElement}`)\r\n * used by the source as an image. The arguments passed to the function are:\r\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\r\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\r\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\r\n * this function is cached by the source. The this keyword inside the function\r\n * references the {@link module:ol/source/ImageCanvas}.\r\n *\r\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\r\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\r\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\r\n * The function returning the canvas element used by the source\r\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\r\n * image extent, `{number}` the image resolution, `{number}` the device pixel\r\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\r\n * projection. The canvas returned by this function is cached by the source. If\r\n * the value returned by the function is later changed then\r\n * `changed` should be called on the source for the source to\r\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\r\n * @property {module:ol/proj~ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\r\n * width and height of the map viewport, and so on. Must be `1` or higher.\r\n * @property {Array.<number>} [resolutions] Resolutions.\r\n * If specified, new canvases will be created for these resolutions\r\n * @property {module:ol/source/State} [state] Source state.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for image sources where a canvas element is the image.\r\n * @api\r\n */\r\nclass ImageCanvasSource extends ImageSource {\r\n  /**\r\n   * @param {module:ol/source/ImageCanvas~Options=} options ImageCanvas options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      resolutions: options.resolutions,\r\n      state: options.state\r\n    });\r\n\r\n    /**\r\n    * @private\r\n    * @type {module:ol/source/ImageCanvas~FunctionType}\r\n    */\r\n    this.canvasFunction_ = options.canvasFunction;\r\n\r\n    /**\r\n    * @private\r\n    * @type {module:ol/ImageCanvas}\r\n    */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n    * @private\r\n    * @type {number}\r\n    */\r\n    this.renderedRevision_ = 0;\r\n\r\n    /**\r\n    * @private\r\n    * @type {number}\r\n    */\r\n    this.ratio_ = options.ratio !== undefined ?\r\n      options.ratio : 1.5;\r\n\r\n  }\r\n\r\n  /**\r\n  * @inheritDoc\r\n  */\r\n  getImageInternal(extent, resolution, pixelRatio, projection) {\r\n    resolution = this.findNearestResolution(resolution);\r\n\r\n    let canvas = this.canvas_;\r\n    if (canvas &&\r\n       this.renderedRevision_ == this.getRevision() &&\r\n       canvas.getResolution() == resolution &&\r\n       canvas.getPixelRatio() == pixelRatio &&\r\n       containsExtent(canvas.getExtent(), extent)) {\r\n      return canvas;\r\n    }\r\n\r\n    extent = extent.slice();\r\n    scaleFromCenter(extent, this.ratio_);\r\n    const width = getWidth(extent) / resolution;\r\n    const height = getHeight(extent) / resolution;\r\n    const size = [width * pixelRatio, height * pixelRatio];\r\n\r\n    const canvasElement = this.canvasFunction_(\r\n      extent, resolution, pixelRatio, size, projection);\r\n    if (canvasElement) {\r\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\r\n    }\r\n    this.canvas_ = canvas;\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    return canvas;\r\n  }\r\n}\r\n\r\n\r\nexport default ImageCanvasSource;\r\n"],"names":["super","let","const"],"mappings":"AAAA;;;;AAIA,OAAO,WAAW,MAAM,mBAAmB,CAAC;AAC5C,QAAQ,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,OAAO,cAAc,CAAC;AAClF,OAAO,WAAW,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2C7C,IAAM,iBAAiB,GAAoB;EAIzC,0BAAW,CAAC,OAAO,EAAE;;IAEnBA,gBAAK,OAAC;MACJ,YAAY,EAAE,OAAO,CAAC,YAAY;MAClC,UAAU,EAAE,OAAO,CAAC,UAAU;MAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;MAChC,KAAK,EAAE,OAAO,CAAC,KAAK;KACrB,CAAC,CAAC;;;;;;IAMH,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC;;;;;;IAM9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;;;;;IAMpB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;;;;;;IAM3B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS;MACvC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;;;;;;8DAEvB;;;;;8BAKD,6CAAgB,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;IAC3D,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;;IAEpDC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IAC1B,IAAI,MAAM;OACP,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE;OAC5C,MAAM,CAAC,aAAa,EAAE,IAAI,UAAU;OACpC,MAAM,CAAC,aAAa,EAAE,IAAI,UAAU;OACpC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,EAAE;MAC7C,OAAO,MAAM,CAAC;KACf;;IAED,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrCC,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC;IAC5CA,GAAK,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC;IAC9CA,GAAK,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,UAAU,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC;;IAEvDA,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe;MACxC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IACpD,IAAI,aAAa,EAAE;MACjB,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;KACzE;IACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;IAE5C,OAAO,MAAM,CAAC;GACf;;;EAtE6B,cAuE/B;;;AAGD,eAAe,iBAAiB,CAAC;"}
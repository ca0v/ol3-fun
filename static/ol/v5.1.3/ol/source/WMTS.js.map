{"version":3,"file":"WMTS.js","sources":["../../../src/ol/source/WMTS.js"],"sourcesContent":["/**\r\n * @module ol/source/WMTS\r\n */\r\n\r\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport {find, findIndex, includes} from '../array.js';\r\nimport {containsExtent} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\r\nimport TileImage from '../source/TileImage.js';\r\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\r\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\r\n * @property {module:ol/proj~ProjectionLike} projection Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\r\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\r\n * @property {string} style Style name as advertised in the WMTS capabilities.\r\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {string} [version='image/jpeg'] Image format.\r\n * @property {string} [format='1.0.0'] WMTS version.\r\n * @property {string} matrixSet Matrix set.\r\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\r\n * This is an object with properties named like the advertised WMTS dimensions.\r\n * @property {string} [url]  A URL for the service.\r\n * For the RESTful request encoding, this is a URL\r\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\r\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\r\n * each one separately in the `urls` option.\r\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {Array.<string>} [urls] An array of URLs.\r\n * Requests will be distributed among the URLs in this array.\r\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMTS servers.\r\n * @api\r\n */\r\nclass WMTS extends TileImage {\r\n  /**\r\n   * @param {module:ol/source/WMTS~Options=} options WMTS options.\r\n   */\r\n  constructor(options) {\r\n\r\n    // TODO: add support for TileMatrixLimits\r\n\r\n    const requestEncoding = options.requestEncoding !== undefined ?\r\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\r\n      WMTSRequestEncoding.KVP;\r\n\r\n    // FIXME: should we create a default tileGrid?\r\n    // we could issue a getCapabilities xhr to retrieve missing configuration\r\n    const tileGrid = options.tileGrid;\r\n\r\n    let urls = options.urls;\r\n    if (urls === undefined && options.url !== undefined) {\r\n      urls = expandUrl(options.url);\r\n    }\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: options.tileClass,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: nullTileUrlFunction,\r\n      urls: urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.layer_ = options.layer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.matrixSet_ = options.matrixSet;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.style_ = options.style;\r\n\r\n    // FIXME: should we guess this requestEncoding from options.url(s)\r\n    //        structure? that would mean KVP only if a template is not provided.\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/source/WMTSRequestEncoding}\r\n     */\r\n    this.requestEncoding_ = requestEncoding;\r\n\r\n    this.setKey(this.getKeyForDimensions_());\r\n\r\n    if (urls && urls.length > 0) {\r\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Set the URLs to use for requests.\r\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\r\n * @override\r\n */\r\nWMTS.prototype.setUrls = function(urls) {\r\n  this.urls = urls;\r\n  const key = urls.join('\\n');\r\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\r\n    this.fixedTileUrlFunction.bind(this) :\r\n    createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\r\n};\r\n\r\n/**\r\n * Get the dimensions, i.e. those passed to the constructor through the\r\n * \"dimensions\" option, and possibly updated using the updateDimensions\r\n * method.\r\n * @return {!Object} Dimensions.\r\n * @api\r\n */\r\nWMTS.prototype.getDimensions = function() {\r\n  return this.dimensions_;\r\n};\r\n\r\n\r\n/**\r\n * Return the image format of the WMTS source.\r\n * @return {string} Format.\r\n * @api\r\n */\r\nWMTS.prototype.getFormat = function() {\r\n  return this.format_;\r\n};\r\n\r\n\r\n/**\r\n * Return the layer of the WMTS source.\r\n * @return {string} Layer.\r\n * @api\r\n */\r\nWMTS.prototype.getLayer = function() {\r\n  return this.layer_;\r\n};\r\n\r\n\r\n/**\r\n * Return the matrix set of the WMTS source.\r\n * @return {string} MatrixSet.\r\n * @api\r\n */\r\nWMTS.prototype.getMatrixSet = function() {\r\n  return this.matrixSet_;\r\n};\r\n\r\n\r\n/**\r\n * Return the request encoding, either \"KVP\" or \"REST\".\r\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\r\n * @api\r\n */\r\nWMTS.prototype.getRequestEncoding = function() {\r\n  return this.requestEncoding_;\r\n};\r\n\r\n\r\n/**\r\n * Return the style of the WMTS source.\r\n * @return {string} Style.\r\n * @api\r\n */\r\nWMTS.prototype.getStyle = function() {\r\n  return this.style_;\r\n};\r\n\r\n\r\n/**\r\n * Return the version of the WMTS source.\r\n * @return {string} Version.\r\n * @api\r\n */\r\nWMTS.prototype.getVersion = function() {\r\n  return this.version_;\r\n};\r\n\r\n\r\n/**\r\n * @private\r\n * @return {string} The key for the current dimensions.\r\n */\r\nWMTS.prototype.getKeyForDimensions_ = function() {\r\n  let i = 0;\r\n  const res = [];\r\n  for (const key in this.dimensions_) {\r\n    res[i++] = key + '-' + this.dimensions_[key];\r\n  }\r\n  return res.join('/');\r\n};\r\n\r\n\r\n/**\r\n * Update the dimensions.\r\n * @param {Object} dimensions Dimensions.\r\n * @api\r\n */\r\nWMTS.prototype.updateDimensions = function(dimensions) {\r\n  assign(this.dimensions_, dimensions);\r\n  this.setKey(this.getKeyForDimensions_());\r\n};\r\n\r\n\r\n/**\r\n * Generate source options from a capabilities object.\r\n * @param {Object} wmtsCap An object representing the capabilities document.\r\n * @param {!Object} config Configuration properties for the layer.  Defaults for\r\n *                  the layer will apply if not provided.\r\n *\r\n * Required config properties:\r\n *  - layer - {string} The layer identifier.\r\n *\r\n * Optional config properties:\r\n *  - matrixSet - {string} The matrix set identifier, required if there is\r\n *       more than one matrix set in the layer capabilities.\r\n *  - projection - {string} The desired CRS when no matrixSet is specified.\r\n *       eg: \"EPSG:3857\". If the desired projection is not available,\r\n *       an error is thrown.\r\n *  - requestEncoding - {string} url encoding format for the layer. Default is\r\n *       the first tile url format found in the GetCapabilities response.\r\n *  - style - {string} The name of the style\r\n *  - format - {string} Image format for the layer. Default is the first\r\n *       format returned in the GetCapabilities response.\r\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\r\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\r\n * @api\r\n */\r\nexport function optionsFromCapabilities(wmtsCap, config) {\r\n  const layers = wmtsCap['Contents']['Layer'];\r\n  const l = find(layers, function(elt, index, array) {\r\n    return elt['Identifier'] == config['layer'];\r\n  });\r\n  if (l === null) {\r\n    return null;\r\n  }\r\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n  let idx;\r\n  if (l['TileMatrixSetLink'].length > 1) {\r\n    if ('projection' in config) {\r\n      idx = findIndex(l['TileMatrixSetLink'],\r\n        function(elt, index, array) {\r\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\r\n            return el['Identifier'] == elt['TileMatrixSet'];\r\n          });\r\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\r\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n                getProjection(supportedCRS);\r\n          const proj2 = getProjection(config['projection']);\r\n          if (proj1 && proj2) {\r\n            return equivalent(proj1, proj2);\r\n          } else {\r\n            return supportedCRS == config['projection'];\r\n          }\r\n        });\r\n    } else {\r\n      idx = findIndex(l['TileMatrixSetLink'],\r\n        function(elt, index, array) {\r\n          return elt['TileMatrixSet'] == config['matrixSet'];\r\n        });\r\n    }\r\n  } else {\r\n    idx = 0;\r\n  }\r\n  if (idx < 0) {\r\n    idx = 0;\r\n  }\r\n  const matrixSet = /** @type {string} */\r\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\r\n  const matrixLimits = /** @type {Array.<Object>} */\r\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\r\n\r\n  let format = /** @type {string} */ (l['Format'][0]);\r\n  if ('format' in config) {\r\n    format = config['format'];\r\n  }\r\n  idx = findIndex(l['Style'], function(elt, index, array) {\r\n    if ('style' in config) {\r\n      return elt['Title'] == config['style'];\r\n    } else {\r\n      return elt['isDefault'];\r\n    }\r\n  });\r\n  if (idx < 0) {\r\n    idx = 0;\r\n  }\r\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\r\n\r\n  const dimensions = {};\r\n  if ('Dimension' in l) {\r\n    l['Dimension'].forEach(function(elt, index, array) {\r\n      const key = elt['Identifier'];\r\n      let value = elt['Default'];\r\n      if (value === undefined) {\r\n        value = elt['Value'][0];\r\n      }\r\n      dimensions[key] = value;\r\n    });\r\n  }\r\n\r\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\r\n    return elt['Identifier'] == matrixSet;\r\n  });\r\n\r\n  let projection;\r\n  const code = matrixSetObj['SupportedCRS'];\r\n  if (code) {\r\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n        getProjection(code);\r\n  }\r\n  if ('projection' in config) {\r\n    const projConfig = getProjection(config['projection']);\r\n    if (projConfig) {\r\n      if (!projection || equivalent(projConfig, projection)) {\r\n        projection = projConfig;\r\n      }\r\n    }\r\n  }\r\n\r\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\r\n  let extent, wrapX;\r\n  if (wgs84BoundingBox !== undefined) {\r\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\r\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\r\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\r\n    extent = transformExtent(\r\n      wgs84BoundingBox, 'EPSG:4326', projection);\r\n    const projectionExtent = projection.getExtent();\r\n    if (projectionExtent) {\r\n      // If possible, do a sanity check on the extent - it should never be\r\n      // bigger than the validity extent of the projection of a matrix set.\r\n      if (!containsExtent(projectionExtent, extent)) {\r\n        extent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\r\n\r\n  /** @type {!Array.<string>} */\r\n  const urls = [];\r\n  let requestEncoding = config['requestEncoding'];\r\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\r\n\r\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\r\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\r\n\r\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\r\n      if (gets[i]['Constraint']) {\r\n        const constraint = find(gets[i]['Constraint'], function(element) {\r\n          return element['name'] == 'GetEncoding';\r\n        });\r\n        const encodings = constraint['AllowedValues']['Value'];\r\n\r\n        if (requestEncoding === '') {\r\n          // requestEncoding not provided, use the first encoding from the list\r\n          requestEncoding = encodings[0];\r\n        }\r\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\r\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\r\n            urls.push(/** @type {string} */ (gets[i]['href']));\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n      } else if (gets[i]['href']) {\r\n        requestEncoding = WMTSRequestEncoding.KVP;\r\n        urls.push(/** @type {string} */ (gets[i]['href']));\r\n      }\r\n    }\r\n  }\r\n  if (urls.length === 0) {\r\n    requestEncoding = WMTSRequestEncoding.REST;\r\n    l['ResourceURL'].forEach(function(element) {\r\n      if (element['resourceType'] === 'tile') {\r\n        format = element['format'];\r\n        urls.push(/** @type {string} */ (element['template']));\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    urls: urls,\r\n    layer: config['layer'],\r\n    matrixSet: matrixSet,\r\n    format: format,\r\n    projection: projection,\r\n    requestEncoding: requestEncoding,\r\n    tileGrid: tileGrid,\r\n    style: style,\r\n    dimensions: dimensions,\r\n    wrapX: wrapX,\r\n    crossOrigin: config['crossOrigin']\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} template Template.\r\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\r\n * @this {module:ol/source/WMTS}\r\n */\r\nfunction createFromWMTSTemplate(template) {\r\n  const requestEncoding = this.requestEncoding_;\r\n\r\n  // context property names are lower case to allow for a case insensitive\r\n  // replacement as some services use different naming conventions\r\n  const context = {\r\n    'layer': this.layer_,\r\n    'style': this.style_,\r\n    'tilematrixset': this.matrixSet_\r\n  };\r\n\r\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n    assign(context, {\r\n      'Service': 'WMTS',\r\n      'Request': 'GetTile',\r\n      'Version': this.version_,\r\n      'Format': this.format_\r\n    });\r\n  }\r\n\r\n  // TODO: we may want to create our own appendParams function so that params\r\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\r\n  // special template params\r\n\r\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\r\n    appendParams(template, context) :\r\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\r\n    });\r\n\r\n  const tileGrid = this.tileGrid;\r\n\r\n  return (\r\n    /**\r\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {module:ol/proj/Projection} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        const localContext = {\r\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\r\n          'TileCol': tileCoord[1],\r\n          'TileRow': -tileCoord[2] - 1\r\n        };\r\n        assign(localContext, this.dimensions_);\r\n        let url = template;\r\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n          url = appendParams(url, localContext);\r\n        } else {\r\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n            return localContext[p];\r\n          });\r\n        }\r\n        return url;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\nexport default WMTS;\r\n"],"names":["const","let","super","this"],"mappings":"AAAA;;;;AAIA,QAAQ,SAAS,EAAE,0BAA0B,EAAE,mBAAmB,OAAO,uBAAuB,CAAC;AACjG,QAAQ,IAAI,EAAE,SAAS,EAAE,QAAQ,OAAO,aAAa,CAAC;AACtD,QAAQ,cAAc,OAAO,cAAc,CAAC;AAC5C,QAAQ,MAAM,OAAO,WAAW,CAAC;AACjC,QAAQ,GAAG,IAAI,aAAa,EAAE,UAAU,EAAE,eAAe,OAAO,YAAY,CAAC;AAC7E,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,OAAO,mBAAmB,MAAM,kCAAkC,CAAC;AACnE,QAAQ,+BAA+B,OAAO,qBAAqB,CAAC;AACpE,QAAQ,YAAY,OAAO,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDvC,IAAM,IAAI,GAAkB;EAI1B,aAAW,CAAC,OAAO,EAAE;;;;IAInBA,GAAK,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,KAAK,SAAS;0DACP,CAAC,OAAO,CAAC,eAAe,CAAC;MAC7E,mBAAmB,CAAC,GAAG,CAAC;;;;IAI1BA,GAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;;IAElCC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IACxB,IAAI,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,GAAG,KAAK,SAAS,EAAE;MACnD,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KAC/B;;IAEDC,cAAK,OAAC;MACJ,YAAY,EAAE,OAAO,CAAC,YAAY;MAClC,SAAS,EAAE,OAAO,CAAC,SAAS;MAC5B,WAAW,EAAE,OAAO,CAAC,WAAW;MAChC,UAAU,EAAE,OAAO,CAAC,UAAU;MAC9B,0BAA0B,EAAE,OAAO,CAAC,0BAA0B;MAC9D,SAAS,EAAE,OAAO,CAAC,SAAS;MAC5B,QAAQ,EAAE,QAAQ;MAClB,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;MAC1C,cAAc,EAAE,OAAO,CAAC,cAAc;MACtC,eAAe,EAAE,mBAAmB;MACpC,IAAI,EAAE,IAAI;MACV,KAAK,EAAE,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK;MAC1D,UAAU,EAAE,OAAO,CAAC,UAAU;KAC/B,CAAC,CAAC;;;;;;IAMH,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,KAAK,SAAS,GAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;IAM1E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC;;;;;;IAM5E,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,KAAK,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;;;;;;IAM9E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;;;;;;IAM5B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;IAMpC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;;;;;;;;;IAS5B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;;IAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;;IAEzC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAAC,eAAe,GAAG,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChG;;;;;;GAEF;;;EAxFgB,YA0FlB;;;;;;;AAOD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,IAAI,EAAE;EACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjBF,GAAK,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB;IAC/C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CACjF,CAAC;;;;;;;;;AASF,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW;EACxC,OAAO,IAAI,CAAC,WAAW,CAAC;CACzB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW;EACpC,OAAO,IAAI,CAAC,OAAO,CAAC;CACrB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACnC,OAAO,IAAI,CAAC,MAAM,CAAC;CACpB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,WAAW;EACvC,OAAO,IAAI,CAAC,UAAU,CAAC;CACxB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,WAAW;EAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC;CAC9B,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACnC,OAAO,IAAI,CAAC,MAAM,CAAC;CACpB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,WAAW;EACrC,OAAO,IAAI,CAAC,QAAQ,CAAC;CACtB,CAAC;;;;;;;AAOF,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,WAAW;;AAAC;EAChDC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACVD,GAAK,CAAC,GAAG,GAAG,EAAE,CAAC;EACf,KAAKA,GAAK,CAAC,GAAG,IAAIG,MAAI,CAAC,WAAW,EAAE;IAClC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGA,MAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;GAC9C;EACD,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACtB,CAAC;;;;;;;;AAQF,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,UAAU,EAAE;EACrD,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;EACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;CAC1C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BF,OAAO,SAAS,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAE;EACvDH,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;EAC5CA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACjD,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;GAC7C,CAAC,CAAC;EACH,IAAI,CAAC,KAAK,IAAI,EAAE;IACd,OAAO,IAAI,CAAC;GACb;EACDA,GAAK,CAAC,cAAc,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;EAC5DC,GAAG,CAAC,GAAG,CAAC;EACR,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;IACrC,IAAI,YAAY,IAAI,MAAM,EAAE;MAC1B,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC;QACpC,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;UAC1BD,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,EAAE,SAAS,EAAE,EAAE;YACtD,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,CAAC;WACjD,CAAC,CAAC;UACHA,GAAK,CAAC,YAAY,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC;UACnDA,GAAK,CAAC,KAAK,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;gBAC1F,aAAa,CAAC,YAAY,CAAC,CAAC;UAClCA,GAAK,CAAC,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;UAClD,IAAI,KAAK,IAAI,KAAK,EAAE;YAClB,OAAO,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;WACjC,MAAM;YACL,OAAO,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;WAC7C;SACF,CAAC,CAAC;KACN,MAAM;MACL,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC;QACpC,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;UAC1B,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;SACpD,CAAC,CAAC;KACN;GACF,MAAM;IACL,GAAG,GAAG,CAAC,CAAC;GACT;EACD,IAAI,GAAG,GAAG,CAAC,EAAE;IACX,GAAG,GAAG,CAAC,CAAC;GACT;EACDA,GAAK,CAAC,SAAS;IACb,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;EACjDA,GAAK,CAAC,YAAY;IAChB,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;;EAEvDC,GAAG,CAAC,MAAM,yBAAyB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,IAAI,QAAQ,IAAI,MAAM,EAAE;IACtB,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;GAC3B;EACD,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACtD,IAAI,OAAO,IAAI,MAAM,EAAE;MACrB,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;KACxC,MAAM;MACL,OAAO,GAAG,CAAC,WAAW,CAAC,CAAC;KACzB;GACF,CAAC,CAAC;EACH,IAAI,GAAG,GAAG,CAAC,EAAE;IACX,GAAG,GAAG,CAAC,CAAC;GACT;EACDD,GAAK,CAAC,KAAK,yBAAyB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;;EAEpEA,GAAK,CAAC,UAAU,GAAG,EAAE,CAAC;EACtB,IAAI,WAAW,IAAI,CAAC,EAAE;IACpB,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;MACjDA,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;MAC9BC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;MAC3B,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;OACzB;MACD,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACzB,CAAC,CAAC;GACJ;;EAEDD,GAAK,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;EACxDA,GAAK,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IAChE,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC;GACvC,CAAC,CAAC;;EAEHC,GAAG,CAAC,UAAU,CAAC;EACfD,GAAK,CAAC,IAAI,GAAG,YAAY,CAAC,cAAc,CAAC,CAAC;EAC1C,IAAI,IAAI,EAAE;IACR,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QACnF,aAAa,CAAC,IAAI,CAAC,CAAC;GACzB;EACD,IAAI,YAAY,IAAI,MAAM,EAAE;IAC1BA,GAAK,CAAC,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IACvD,IAAI,UAAU,EAAE;MACd,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE;QACrD,UAAU,GAAG,UAAU,CAAC;OACzB;KACF;GACF;;EAEDA,GAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC/CC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;EAClB,IAAI,gBAAgB,KAAK,SAAS,EAAE;IAClCD,GAAK,CAAC,qBAAqB,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;IACrE,KAAK,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,CAAC;QACpD,gBAAgB,CAAC,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAM,GAAG,eAAe;MACtB,gBAAgB,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IAC7CA,GAAK,CAAC,gBAAgB,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;IAChD,IAAI,gBAAgB,EAAE;;;MAGpB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,MAAM,CAAC,EAAE;QAC7C,MAAM,GAAG,SAAS,CAAC;OACpB;KACF;GACF;;EAEDA,GAAK,CAAC,QAAQ,GAAG,+BAA+B,CAAC,YAAY,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;;;EAGrFA,GAAK,CAAC,IAAI,GAAG,EAAE,CAAC;EAChBC,GAAG,CAAC,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;EAChD,eAAe,GAAG,eAAe,KAAK,SAAS,GAAG,eAAe,GAAG,EAAE,CAAC;;EAEvE,IAAI,oBAAoB,IAAI,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,oBAAoB,CAAC,EAAE;IACjFD,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;;IAE5E,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;QACzBD,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,SAAS,OAAO,EAAE;UAC/D,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC;SACzC,CAAC,CAAC;QACHA,GAAK,CAAC,SAAS,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC;;QAEvD,IAAI,eAAe,KAAK,EAAE,EAAE;;UAE1B,eAAe,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,IAAI,eAAe,KAAK,mBAAmB,CAAC,GAAG,EAAE;UAC/C,IAAI,QAAQ,CAAC,SAAS,EAAE,mBAAmB,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,CAAC,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;WACpD;SACF,MAAM;UACL,MAAM;SACP;OACF,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;QAC1B,eAAe,GAAG,mBAAmB,CAAC,GAAG,CAAC;QAC1C,IAAI,CAAC,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OACpD;KACF;GACF;EACD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACrB,eAAe,GAAG,mBAAmB,CAAC,IAAI,CAAC;IAC3C,CAAC,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,SAAS,OAAO,EAAE;MACzC,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,MAAM,EAAE;QACtC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,uBAAuB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;OACxD;KACF,CAAC,CAAC;GACJ;;EAED,OAAO;IACL,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;IACtB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,UAAU;IACtB,eAAe,EAAE,eAAe;IAChC,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,KAAK;IACZ,UAAU,EAAE,UAAU;IACtB,KAAK,EAAE,KAAK;IACZ,WAAW,EAAE,MAAM,CAAC,aAAa,CAAC;GACnC,CAAC;CACH;;;;;;;AAOD,SAAS,sBAAsB,CAAC,QAAQ,EAAE;EACxCA,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;;;;EAI9CA,GAAK,CAAC,OAAO,GAAG;IACd,OAAO,EAAE,IAAI,CAAC,MAAM;IACpB,OAAO,EAAE,IAAI,CAAC,MAAM;IACpB,eAAe,EAAE,IAAI,CAAC,UAAU;GACjC,CAAC;;EAEF,IAAI,eAAe,IAAI,mBAAmB,CAAC,GAAG,EAAE;IAC9C,MAAM,CAAC,OAAO,EAAE;MACd,SAAS,EAAE,MAAM;MACjB,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE,IAAI,CAAC,QAAQ;MACxB,QAAQ,EAAE,IAAI,CAAC,OAAO;KACvB,CAAC,CAAC;GACJ;;;;;;EAMD,QAAQ,GAAG,CAAC,eAAe,IAAI,mBAAmB,CAAC,GAAG,CAAC;IACrD,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC;IAC/B,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;MAC7C,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;KACpE,CAAC,CAAC;;EAELA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;EAE/B,OAAO;;;;;;;IAOL,SAAS,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;MAC1C,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,SAAS,CAAC;OAClB,MAAM;QACLA,GAAK,CAAC,YAAY,GAAG;UACnB,YAAY,EAAE,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UAChD,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;UACvB,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;SAC7B,CAAC;QACF,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACvCC,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC;QACnB,IAAI,eAAe,IAAI,mBAAmB,CAAC,GAAG,EAAE;UAC9C,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;SACvC,MAAM;UACL,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;YAC9C,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;WACxB,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,CAAC;OACZ;KACF;GACF,CAAC;CACH;;;AAGD,eAAe,IAAI,CAAC;"}
{"version":3,"file":"TileDebug.js","sources":["../../../src/ol/source/TileDebug.js"],"sourcesContent":["/**\r\n * @module ol/source/TileDebug\r\n */\r\n\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {toSize} from '../size.js';\r\nimport TileSource from '../source/Tile.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\n\r\n\r\nclass LabeledTile extends Tile {\r\n  /**\r\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\r\n   * @param {module:ol/size~Size} tileSize Tile size.\r\n   * @param {string} text Text.\r\n   */\r\n  constructor(tileCoord, tileSize, text) {\r\n\r\n    super(tileCoord, TileState.LOADED);\r\n\r\n    /**\r\n    * @private\r\n    * @type {module:ol/size~Size}\r\n    */\r\n    this.tileSize_ = tileSize;\r\n\r\n    /**\r\n    * @private\r\n    * @type {string}\r\n    */\r\n    this.text_ = text;\r\n\r\n    /**\r\n    * @private\r\n    * @type {HTMLCanvasElement}\r\n    */\r\n    this.canvas_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n  * Get the image element for this tile.\r\n  * @return {HTMLCanvasElement} Image.\r\n  */\r\n  getImage() {\r\n    if (this.canvas_) {\r\n      return this.canvas_;\r\n    } else {\r\n      const tileSize = this.tileSize_;\r\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n\r\n      context.strokeStyle = 'black';\r\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\r\n\r\n      context.fillStyle = 'black';\r\n      context.textAlign = 'center';\r\n      context.textBaseline = 'middle';\r\n      context.font = '24px sans-serif';\r\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\r\n\r\n      this.canvas_ = context.canvas;\r\n      return context.canvas;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @override\r\n  */\r\n  load() {}\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/proj~ProjectionLike} projection Projection.\r\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A pseudo tile source, which does not fetch tiles from a server, but renders\r\n * a grid outline for the tile grid/projection along with the coordinates for\r\n * each tile. See examples/canvas-tiles for an example.\r\n *\r\n * Uses Canvas context2d, so requires Canvas support.\r\n * @api\r\n */\r\nclass TileDebug extends TileSource {\r\n  /**\r\n   * @param {module:ol/source/TileDebug~Options=} options Debug tile options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      opaque: false,\r\n      projection: options.projection,\r\n      tileGrid: options.tileGrid,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * @inheritDoc\r\n  */\r\n  getTile(z, x, y) {\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\r\n    } else {\r\n      const tileSize = toSize(this.tileGrid.getTileSize(z));\r\n      const tileCoord = [z, x, y];\r\n      const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\r\n      const text = !textTileCoord ? '' :\r\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\r\n      const tile = new LabeledTile(tileCoord, tileSize, text);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n      return tile;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default TileDebug;\r\n"],"names":["super","const"],"mappings":"AAAA;;;;AAIA,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,SAAS,MAAM,iBAAiB,CAAC;AACxC,QAAQ,qBAAqB,OAAO,WAAW,CAAC;AAChD,QAAQ,MAAM,OAAO,YAAY,CAAC;AAClC,OAAO,UAAU,MAAM,mBAAmB,CAAC;AAC3C,QAAQ,SAAS,OAAO,iBAAiB,CAAC;;;AAG1C,IAAM,WAAW,GAAa;EAM5B,oBAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;;IAErCA,SAAK,OAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;;;;;;IAMnC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;;;;;IAM1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;;IAMlB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;;;;;kDAErB;;;;;;wBAMD,6BAAQ,GAAG;IACT,IAAI,IAAI,CAAC,OAAO,EAAE;MAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB,MAAM;MACLC,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;MAChCA,GAAK,CAAC,OAAO,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEhE,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;MAC9B,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEnE,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;MAC5B,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;MAC7B,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;MAChC,OAAO,CAAC,IAAI,GAAG,iBAAiB,CAAC;MACjC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;MAE/D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;MAC9B,OAAO,OAAO,CAAC,MAAM,CAAC;KACvB;IACF;;;;;wBAKD,qBAAI,GAAG,EAAE;;;EA1De,OA2DzB;;;;;;;;;;;;;;;;;;;;AAoBD,IAAM,SAAS,GAAmB;EAIhC,kBAAW,CAAC,OAAO,EAAE;;IAEnBD,eAAK,OAAC;MACJ,MAAM,EAAE,KAAK;MACb,UAAU,EAAE,OAAO,CAAC,UAAU;MAC9B,QAAQ,EAAE,OAAO,CAAC,QAAQ;MAC1B,KAAK,EAAE,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI;KAC1D,CAAC,CAAC;;;;;;8CAEJ;;;;;sBAKD,2BAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACfC,GAAK,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;MAC5C,8DAA8D,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;KAClG,MAAM;MACLA,GAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;MACtDA,GAAK,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5BA,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;MACrEA,GAAK,CAAC,IAAI,GAAG,CAAC,aAAa,GAAG,EAAE;QAC9B,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;MAChEA,GAAK,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;MACxD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;MACvC,OAAO,IAAI,CAAC;KACb;GACF;;;EAhCqB,aAiCvB;;;AAGD,eAAe,SAAS,CAAC;"}
{"version":3,"file":"NativeSource.js","sources":["../../../src/ol/pointer/NativeSource.js"],"sourcesContent":["/**\r\n * @module ol/pointer/NativeSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from '../pointer/EventSource.js';\r\n\r\n/**\r\n * Handler for `pointerdown`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerDown(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointermove`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerMove(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerup`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerUp(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerout`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOut(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerover`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOver(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointercancel`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerCancel(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `lostpointercapture`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction lostPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `gotpointercapture`.\r\n *\r\n * @this {module:ol/pointer/NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction gotPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\nclass NativeSource extends EventSource {\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\r\n   */\r\n  constructor(dispatcher) {\r\n    const mapping = {\r\n      'pointerdown': pointerDown,\r\n      'pointermove': pointerMove,\r\n      'pointerup': pointerUp,\r\n      'pointerout': pointerOut,\r\n      'pointerover': pointerOver,\r\n      'pointercancel': pointerCancel,\r\n      'gotpointercapture': gotPointerCapture,\r\n      'lostpointercapture': lostPointerCapture\r\n    };\r\n    super(dispatcher, mapping);\r\n  }\r\n\r\n}\r\n\r\nexport default NativeSource;\r\n"],"names":["const","super"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAO,WAAW,MAAM,2BAA2B,CAAC;;;;;;;;AAQpD,SAAS,WAAW,CAAC,OAAO,EAAE;EAC5B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,WAAW,CAAC,OAAO,EAAE;EAC5B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,SAAS,CAAC,OAAO,EAAE;EAC1B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,UAAU,CAAC,OAAO,EAAE;EAC3B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,WAAW,CAAC,OAAO,EAAE;EAC5B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,aAAa,CAAC,OAAO,EAAE;EAC9B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,kBAAkB,CAAC,OAAO,EAAE;EACnC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;;;;;;;AAQD,SAAS,iBAAiB,CAAC,OAAO,EAAE;EAClC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;CAC1C;;AAED,IAAM,YAAY,GAAoB;EAKpC,qBAAW,CAAC,UAAU,EAAE;IACtBA,GAAK,CAAC,OAAO,GAAG;MACd,aAAa,EAAE,WAAW;MAC1B,aAAa,EAAE,WAAW;MAC1B,WAAW,EAAE,SAAS;MACtB,YAAY,EAAE,UAAU;MACxB,aAAa,EAAE,WAAW;MAC1B,eAAe,EAAE,aAAa;MAC9B,mBAAmB,EAAE,iBAAiB;MACtC,oBAAoB,EAAE,kBAAkB;KACzC,CAAC;IACFC,gBAAK,OAAC,UAAU,EAAE,OAAO,CAAC,CAAC;;;;;GAC5B;;;EAjBwB,cAmB1B;;AAED,eAAe,YAAY,CAAC;"}
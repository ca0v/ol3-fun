{"version":3,"file":"loadingstrategy.js","sources":["../../src/ol/loadingstrategy.js"],"sourcesContent":["/**\r\n * @module ol/loadingstrategy\r\n */\r\n\r\n\r\n/**\r\n * Strategy function for loading all features with a single request.\r\n * @param {module:ol/extent~Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array.<module:ol/extent~Extent>} Extents.\r\n * @api\r\n */\r\nexport function all(extent, resolution) {\r\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\r\n}\r\n\r\n\r\n/**\r\n * Strategy function for loading features based on the view's extent and\r\n * resolution.\r\n * @param {module:ol/extent~Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array.<module:ol/extent~Extent>} Extents.\r\n * @api\r\n */\r\nexport function bbox(extent, resolution) {\r\n  return [extent];\r\n}\r\n\r\n\r\n/**\r\n * Creates a strategy function for loading features based on a tile grid.\r\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\r\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\r\n * @api\r\n */\r\nexport function tile(tileGrid) {\r\n  return (\r\n    /**\r\n     * @param {module:ol/extent~Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array.<module:ol/extent~Extent>} Extents.\r\n     */\r\n    function(extent, resolution) {\r\n      const z = tileGrid.getZForResolution(resolution);\r\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n      /** @type {Array.<module:ol/extent~Extent>} */\r\n      const extents = [];\r\n      /** @type {module:ol/tilecoord~TileCoord} */\r\n      const tileCoord = [z, 0, 0];\r\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\r\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\r\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\r\n        }\r\n      }\r\n      return extents;\r\n    }\r\n  );\r\n}\r\n"],"names":["const"],"mappings":"AAAA;;;;;;;;;;;;AAYA,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE;EACtC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;CACrD;;;;;;;;;;;AAWD,OAAO,SAAS,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE;EACvC,OAAO,CAAC,MAAM,CAAC,CAAC;CACjB;;;;;;;;;AASD,OAAO,SAAS,IAAI,CAAC,QAAQ,EAAE;EAC7B,OAAO;;;;;;IAML,SAAS,MAAM,EAAE,UAAU,EAAE;MAC3BA,GAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;MACjDA,GAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;MAEhEA,GAAK,CAAC,OAAO,GAAG,EAAE,CAAC;;MAEnBA,GAAK,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5B,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE;QAClF,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE;UAClF,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;SACtD;OACF;MACD,OAAO,OAAO,CAAC;KAChB;GACF,CAAC;CACH;"}
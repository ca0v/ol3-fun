{"version":3,"file":"Snap.js","sources":["../../../src/ol/interaction/Snap.js"],"sourcesContent":["/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport {getUid} from '../util.js';\r\nimport {CollectionEvent} from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {boundingExtent, createEmpty} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\r\nimport {getValues} from '../obj.js';\r\nimport {VectorSourceEvent} from '../source/Vector.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Result\r\n * @property {boolean} snapped\r\n * @property {module:ol/coordinate~Coordinate|null} vertex\r\n * @property {module:ol/pixel~Pixel|null} vertexPixel\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {module:ol/Feature} feature\r\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap';\r\n *\r\n *     var snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n * @api\r\n */\r\nclass Snap extends PointerInteraction {\r\n  /**\r\n   * @param {module:ol/interaction/Snap~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleEvent: handleEvent,\r\n      handleDownEvent: TRUE,\r\n      handleUpEvent: handleUpEvent,\r\n      stopDown: FALSE\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {module:ol/source/Vector}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.edge_ = options.edge !== undefined ? options.edge : true;\r\n\r\n    /**\r\n     * @type {module:ol/Collection.<module:ol/Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * @type {Array.<module:ol/events~EventsKey>}\r\n     * @private\r\n     */\r\n    this.featuresListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Object.<number, module:ol/events~EventsKey>}\r\n     * @private\r\n     */\r\n    this.featureChangeListenerKeys_ = {};\r\n\r\n    /**\r\n     * Extents are preserved so indexed segment can be quickly removed\r\n     * when its feature geometry changes\r\n     * @type {Object.<number, module:ol/extent~Extent>}\r\n     * @private\r\n     */\r\n    this.indexedFeaturesExtents_ = {};\r\n\r\n    /**\r\n     * If a feature geometry changes while a pointer drag|move event occurs, the\r\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n     * event fired.\r\n     * @type {!Object.<number, module:ol/Feature>}\r\n     * @private\r\n     */\r\n    this.pendingFeatures_ = {};\r\n\r\n    /**\r\n     * Used for distance sorting in sortByDistance_\r\n     * @type {module:ol/coordinate~Coordinate}\r\n     * @private\r\n     */\r\n    this.pixelCoordinate_ = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\r\n     * @private\r\n     */\r\n    this.sortByDistance_ = sortByDistance.bind(this);\r\n\r\n\r\n    /**\r\n    * Segment RTree for each layer\r\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\r\n    * @private\r\n    */\r\n    this.rBush_ = new RBush();\r\n\r\n\r\n    /**\r\n    * @const\r\n    * @private\r\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\r\n    */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\r\n      'Circle': this.writeCircleGeometry_\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the collection of features that we may snap to.\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\r\n   *     Defaults to `true`.\r\n   * @api\r\n   */\r\n  addFeature(feature, opt_listen) {\r\n    const register = opt_listen !== undefined ? opt_listen : true;\r\n    const feature_uid = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      if (segmentWriter) {\r\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\r\n        segmentWriter.call(this, feature, geometry);\r\n      }\r\n    }\r\n\r\n    if (register) {\r\n      this.featureChangeListenerKeys_[feature_uid] = listen(\r\n        feature,\r\n        EventType.CHANGE,\r\n        this.handleFeatureChange_, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureAdd_(feature) {\r\n    this.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureRemove_(feature) {\r\n    this.removeFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\r\n   * @private\r\n   */\r\n  getFeatures_() {\r\n    let features;\r\n    if (this.features_) {\r\n      features = this.features_;\r\n    } else if (this.source_) {\r\n      features = this.source_.getFeatures();\r\n    }\r\n    return (\r\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    let feature;\r\n    if (evt instanceof VectorSourceEvent) {\r\n      feature = evt.feature;\r\n    } else if (evt instanceof CollectionEvent) {\r\n      feature = evt.element;\r\n    }\r\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    let feature;\r\n    if (evt instanceof VectorSourceEvent) {\r\n      feature = evt.feature;\r\n    } else if (evt instanceof CollectionEvent) {\r\n      feature = evt.element;\r\n    }\r\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/events/Event} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\r\n    if (this.handlingDownUpSequence) {\r\n      const uid = getUid(feature);\r\n      if (!(uid in this.pendingFeatures_)) {\r\n        this.pendingFeatures_[uid] = feature;\r\n      }\r\n    } else {\r\n      this.updateFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the collection of features that we may snap to.\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\r\n   *     or not. Defaults to `true`.\r\n   * @api\r\n   */\r\n  removeFeature(feature, opt_unlisten) {\r\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\r\n    const feature_uid = getUid(feature);\r\n    const extent = this.indexedFeaturesExtents_[feature_uid];\r\n    if (extent) {\r\n      const rBush = this.rBush_;\r\n      const nodesToRemove = [];\r\n      rBush.forEachInExtent(extent, function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n        rBush.remove(nodesToRemove[i]);\r\n      }\r\n    }\r\n\r\n    if (unregister) {\r\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n      delete this.featureChangeListenerKeys_[feature_uid];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    const keys = this.featuresListenerKeys_;\r\n    const features = this.getFeatures_();\r\n\r\n    if (currentMap) {\r\n      keys.forEach(unlistenByKey);\r\n      keys.length = 0;\r\n      features.forEach(this.forEachFeatureRemove_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      if (this.features_) {\r\n        keys.push(\r\n          listen(this.features_, CollectionEventType.ADD,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.features_, CollectionEventType.REMOVE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      } else if (this.source_) {\r\n        keys.push(\r\n          listen(this.source_, VectorEventType.ADDFEATURE,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      }\r\n      features.forEach(this.forEachFeatureAdd_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pixel~Pixel} pixel Pixel\r\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\r\n   * @param {module:ol/PluggableMap} map Map.\r\n   * @return {module:ol/interaction/Snap~Result} Snap result\r\n   */\r\n  snapTo(pixel, pixelCoordinate, map) {\r\n\r\n    const lowerLeft = map.getCoordinateFromPixel(\r\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\r\n    const upperRight = map.getCoordinateFromPixel(\r\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\r\n    const box = boundingExtent([lowerLeft, upperRight]);\r\n\r\n    let segments = this.rBush_.getInExtent(box);\r\n\r\n    // If snapping on vertices only, don't consider circles\r\n    if (this.vertex_ && !this.edge_) {\r\n      segments = segments.filter(function(segment) {\r\n        return segment.feature.getGeometry().getType() !==\r\n            GeometryType.CIRCLE;\r\n      });\r\n    }\r\n\r\n    let snappedToVertex = false;\r\n    let snapped = false;\r\n    let vertex = null;\r\n    let vertexPixel = null;\r\n    let dist, pixel1, pixel2, squaredDist1, squaredDist2;\r\n    if (segments.length > 0) {\r\n      this.pixelCoordinate_ = pixelCoordinate;\r\n      segments.sort(this.sortByDistance_);\r\n      const closestSegment = segments[0].segment;\r\n      const isCircle = segments[0].feature.getGeometry().getType() ===\r\n          GeometryType.CIRCLE;\r\n      if (this.vertex_ && !this.edge_) {\r\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\r\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\r\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        snappedToVertex = dist <= this.pixelTolerance_;\r\n        if (snappedToVertex) {\r\n          snapped = true;\r\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        }\r\n      } else if (this.edge_) {\r\n        if (isCircle) {\r\n          vertex = closestOnCircle(pixelCoordinate,\r\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\r\n        } else {\r\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n        }\r\n        vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n          snapped = true;\r\n          if (this.vertex_ && !isCircle) {\r\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n            snappedToVertex = dist <= this.pixelTolerance_;\r\n            if (snappedToVertex) {\r\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n              vertexPixel = map.getPixelFromCoordinate(vertex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (snapped) {\r\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\r\n      }\r\n    }\r\n    return (\r\n      /** @type {module:ol/interaction/Snap~Result} */ ({\r\n        snapped: snapped,\r\n        vertex: vertex,\r\n        vertexPixel: vertexPixel\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @private\r\n   */\r\n  updateFeature_(feature) {\r\n    this.removeFeature(feature, false);\r\n    this.addFeature(feature, false);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/Circle} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const polygon = fromCircle(geometry);\r\n    const coordinates = polygon.getCoordinates()[0];\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n        feature: feature,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\r\n      if (segmentWriter) {\r\n        segmentWriter.call(this, feature, geometries[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/LineString} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n        feature: feature,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n          feature: feature,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n        feature: feature,\r\n        segment: [coordinates, coordinates]\r\n      });\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n          const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n            feature: feature,\r\n            segment: segment\r\n          });\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/Point} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n      feature: feature,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/Polygon} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\r\n          feature: feature,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Handle all pointer events events.\r\n * @param {module:ol/MapBrowserEvent} evt A move event.\r\n * @return {boolean} Pass the event to other interactions.\r\n * @this {module:ol/interaction/Snap}\r\n */\r\nexport function handleEvent(evt) {\r\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n  if (result.snapped) {\r\n    evt.coordinate = result.vertex.slice(0, 2);\r\n    evt.pixel = result.vertexPixel;\r\n  }\r\n  return handlePointerEvent.call(this, evt);\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\r\n * @return {boolean} Stop drag sequence?\r\n * @this {module:ol/interaction/Snap}\r\n */\r\nfunction handleUpEvent(evt) {\r\n  const featuresToUpdate = getValues(this.pendingFeatures_);\r\n  if (featuresToUpdate.length) {\r\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n    this.pendingFeatures_ = {};\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Sort segments by distance, helper function\r\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\r\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\r\n * @return {number} The difference in distance.\r\n * @this {module:ol/interaction/Snap}\r\n */\r\nfunction sortByDistance(a, b) {\r\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\r\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\r\n  return deltaA - deltaB;\r\n}\r\n\r\nexport default Snap;\r\n"],"names":["super","const","let","this"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,YAAY,CAAC;AAClC,QAAQ,eAAe,OAAO,kBAAkB,CAAC;AACjD,OAAO,mBAAmB,MAAM,2BAA2B,CAAC;AAC5D,QAAQ,QAAQ,IAAI,kBAAkB,EAAE,eAAe,IAAI,yBAAyB,EAAE,eAAe,EAAE,gBAAgB,EAAE,wBAAwB,OAAO,kBAAkB,CAAC;AAC3K,QAAQ,MAAM,EAAE,aAAa,OAAO,cAAc,CAAC;AACnD,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,QAAQ,cAAc,EAAE,WAAW,OAAO,cAAc,CAAC;AACzD,QAAQ,IAAI,EAAE,KAAK,OAAO,iBAAiB,CAAC;AAC5C,OAAO,YAAY,MAAM,yBAAyB,CAAC;AACnD,QAAQ,UAAU,OAAO,oBAAoB,CAAC;AAC9C,OAAO,kBAAkB,GAAG,WAAW,IAAI,kBAAkB,OAAO,2BAA2B,CAAC;AAChG,QAAQ,SAAS,OAAO,WAAW,CAAC;AACpC,QAAQ,iBAAiB,OAAO,qBAAqB,CAAC;AACtD,OAAO,eAAe,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDxC,IAAM,IAAI,GAA2B;EAInC,aAAW,CAAC,WAAW,EAAE;;IAEvBA,uBAAK,OAAC;MACJ,WAAW,EAAE,WAAW;MACxB,eAAe,EAAE,IAAI;MACrB,aAAa,EAAE,aAAa;MAC5B,QAAQ,EAAE,KAAK;KAChB,CAAC,CAAC;;IAEHC,GAAK,CAAC,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC;;;;;;IAM/C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;;IAMtD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;;IAMpE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;;IAM9D,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;;;;;;IAM5D,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;;;;;;IAMhC,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;;;;;;;;IAQrC,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;;;;;;;;;IASlC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;;;;;;;IAO3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;;;;;;IAM7B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,KAAK,SAAS;MACzD,OAAO,CAAC,cAAc,GAAG,EAAE,CAAC;;;;;;IAM9B,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;;;;IAQjD,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;;;;;;;;IAQ1B,IAAI,CAAC,gBAAgB,GAAG;MACtB,OAAO,EAAE,IAAI,CAAC,mBAAmB;MACjC,YAAY,EAAE,IAAI,CAAC,wBAAwB;MAC3C,YAAY,EAAE,IAAI,CAAC,wBAAwB;MAC3C,SAAS,EAAE,IAAI,CAAC,qBAAqB;MACrC,YAAY,EAAE,IAAI,CAAC,wBAAwB;MAC3C,iBAAiB,EAAE,IAAI,CAAC,6BAA6B;MACrD,cAAc,EAAE,IAAI,CAAC,0BAA0B;MAC/C,oBAAoB,EAAE,IAAI,CAAC,gCAAgC;MAC3D,QAAQ,EAAE,IAAI,CAAC,oBAAoB;KACpC,CAAC;;;;;oCACH;;;;;;;;;iBASD,iCAAU,CAAC,OAAO,EAAE,UAAU,EAAE;IAC9BA,GAAK,CAAC,QAAQ,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC;IAC9DA,GAAK,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;IACpCA,GAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;IACvC,IAAI,QAAQ,EAAE;MACZA,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;MAChE,IAAI,aAAa,EAAE;QACjB,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAC9E,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;OAC7C;KACF;;IAED,IAAI,QAAQ,EAAE;MACZ,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,GAAG,MAAM;QACnD,OAAO;QACP,SAAS,CAAC,MAAM;QAChB,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KACpC;IACF;;;;;;iBAMD,iDAAkB,CAAC,OAAO,EAAE;IAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC1B;;;;;;iBAMD,uDAAqB,CAAC,OAAO,EAAE;IAC7B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC7B;;;;;;iBAMD,qCAAY,GAAG;IACbC,GAAG,CAAC,QAAQ,CAAC;IACb,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;KAC3B,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;MACvB,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KACvC;IACD,OAAO;0FAC+E,CAAC,QAAQ,CAAC;KAC/F,CAAC;IACH;;;;;;iBAMD,+CAAiB,CAAC,GAAG,EAAE;IACrBA,GAAG,CAAC,OAAO,CAAC;IACZ,IAAI,GAAG,YAAY,iBAAiB,EAAE;MACpC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;KACvB,MAAM,IAAI,GAAG,YAAY,eAAe,EAAE;MACzC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;KACvB;IACD,IAAI,CAAC,UAAU,kCAAkC,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7D;;;;;;iBAMD,qDAAoB,CAAC,GAAG,EAAE;IACxBA,GAAG,CAAC,OAAO,CAAC;IACZ,IAAI,GAAG,YAAY,iBAAiB,EAAE;MACpC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;KACvB,MAAM,IAAI,GAAG,YAAY,eAAe,EAAE;MACzC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;KACvB;IACD,IAAI,CAAC,aAAa,kCAAkC,CAAC,OAAO,CAAC,CAAC,CAAC;IAChE;;;;;;iBAMD,qDAAoB,CAAC,GAAG,EAAE;IACxBD,GAAK,CAAC,OAAO,oCAAoC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9D,IAAI,IAAI,CAAC,sBAAsB,EAAE;MAC/BA,GAAK,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE;QACnC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;OACtC;KACF,MAAM;MACL,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC9B;IACF;;;;;;;;;iBASD,uCAAa,CAAC,OAAO,EAAE,YAAY,EAAE;IACnCA,GAAK,CAAC,UAAU,GAAG,YAAY,KAAK,SAAS,GAAG,YAAY,GAAG,IAAI,CAAC;IACpEA,GAAK,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;IACpCA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;IACzD,IAAI,MAAM,EAAE;MACVA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;MAC1BA,GAAK,CAAC,aAAa,GAAG,EAAE,CAAC;MACzB,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,IAAI,EAAE;QAC3C,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;UAC5B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;OACF,CAAC,CAAC;MACH,KAAKC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;QAClD,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;OAChC;KACF;;IAED,IAAI,UAAU,EAAE;MACd,aAAa,CAAC,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC,CAAC;MAC5D,OAAO,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;KACrD;IACF;;;;;iBAKD,yBAAM,CAAC,GAAG,EAAE;IACVD,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IACjCA,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC;IACxCA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;;IAErC,IAAI,UAAU,EAAE;MACd,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;MAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;MAChB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACzD;IACDD,4BAAK,CAAC,WAAM,OAAC,GAAG,CAAC,CAAC;;IAElB,IAAI,GAAG,EAAE;MACP,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,IAAI;UACP,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,GAAG;YAC5C,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;UAC/B,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,MAAM;YAC/C,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC;SACnC,CAAC;OACH,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;QACvB,IAAI,CAAC,IAAI;UACP,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,UAAU;YAC7C,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;UAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,aAAa;YAChD,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC;SACnC,CAAC;OACH;MACD,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACtD;IACF;;;;;;;;iBAQD,yBAAM,CAAC,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE;;IAElCC,GAAK,CAAC,SAAS,GAAG,GAAG,CAAC,sBAAsB;MAC1C,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IACtEA,GAAK,CAAC,UAAU,GAAG,GAAG,CAAC,sBAAsB;MAC3C,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IACtEA,GAAK,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;;IAEpDC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;;IAG5C,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;MAC/B,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,OAAO,EAAE;QAC3C,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE;YAC1C,YAAY,CAAC,MAAM,CAAC;OACzB,CAAC,CAAC;KACJ;;IAEDA,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;IAC5BA,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;IACpBA,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IAClBA,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;IACvBA,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC;IACrD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;MACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;MACpCD,GAAK,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;MAC3CA,GAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE;UACxD,YAAY,CAAC,MAAM,CAAC;MACxB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAC/B,MAAM,GAAG,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,YAAY,GAAG,yBAAyB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxD,YAAY,GAAG,yBAAyB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;QACvD,eAAe,GAAG,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,eAAe,EAAE;UACnB,OAAO,GAAG,IAAI,CAAC;UACf,MAAM,GAAG,YAAY,GAAG,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;UAC7E,WAAW,GAAG,GAAG,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;SAClD;OACF,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;QACrB,IAAI,QAAQ,EAAE;UACZ,MAAM,GAAG,eAAe,CAAC,eAAe;iDACD,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SAC7E,MAAM;UACL,MAAM,GAAG,gBAAgB,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;SAC5D;QACD,WAAW,GAAG,GAAG,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,kBAAkB,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE;UAClE,OAAO,GAAG,IAAI,CAAC;UACf,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE;YAC7B,MAAM,GAAG,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,GAAG,GAAG,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,YAAY,GAAG,yBAAyB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC9D,YAAY,GAAG,yBAAyB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC9D,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;YACvD,eAAe,GAAG,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC;YAC/C,IAAI,eAAe,EAAE;cACnB,MAAM,GAAG,YAAY,GAAG,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;cAC7E,WAAW,GAAG,GAAG,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;aAClD;WACF;SACF;OACF;MACD,IAAI,OAAO,EAAE;QACX,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OACxE;KACF;IACD,OAAO;uDAC4C,CAAC;QAChD,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,WAAW;OACzB,CAAC;KACH,CAAC;IACH;;;;;;iBAMD,yCAAc,CAAC,OAAO,EAAE;IACtB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACnC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACjC;;;;;;;iBAOD,qDAAoB,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IACvCA,GAAK,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;IACrCA,GAAK,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MACxDD,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;QACzE,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,OAAO;OACjB,CAAC,CAAC;MACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;KAC1D;IACF;;;;;;;iBAOD,6EAAgC,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IACnDF,GAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;IACjD,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;MAC1CD,GAAK,CAAC,aAAa,GAAGE,MAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;MACrE,IAAI,aAAa,EAAE;QACjB,aAAa,CAAC,IAAI,CAACA,MAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;OAClD;KACF;IACF;;;;;;;iBAOD,6DAAwB,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IAC3CF,GAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IAC9C,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MACxDD,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;QACzE,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,OAAO;OACjB,CAAC,CAAC;MACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;KAC1D;IACF;;;;;;;iBAOD,uEAA6B,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IAChDF,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACxC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MAC9CD,GAAK,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QACxDD,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;UACzE,OAAO,EAAE,OAAO;UAChB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;OAC1D;KACF;IACF;;;;;;;iBAOD,6DAAwB,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IAC3CF,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACzC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MAC/CD,GAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9BA,GAAK,CAAC,WAAW,yDAAyD,CAAC;QACzE,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;OACpC,CAAC,CAAC;MACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,WAAW,CAAC,CAAC;KACvD;IACF;;;;;;;iBAOD,iEAA0B,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IAC7CF,GAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IAC3C,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MACjDD,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAC9CD,GAAK,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;UACxDD,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;UAC5CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;YACzE,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;WACjB,CAAC,CAAC;UACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;SAC1D;OACF;KACF;IACF;;;;;;;iBAOD,mDAAmB,CAAC,OAAO,EAAE,QAAQ,EAAE;IACrCF,GAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IAC9CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;MACzE,OAAO,EAAE,OAAO;MAChB,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;KACpC,CAAC,CAAC;IACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,WAAW,CAAC,CAAC;IACvD;;;;;;;iBAOD,uDAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE;;AAAC;IACxCA,GAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACxC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;MAC9CD,GAAK,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7B,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QACxDD,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5CA,GAAK,CAAC,WAAW,yDAAyD,CAAC;UACzE,OAAO,EAAE,OAAO;UAChB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QACHE,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;OAC1D;KACF;GACF;;;EAtgBgB,qBAugBlB;;;;;;;;;AASD,OAAO,SAAS,WAAW,CAAC,GAAG,EAAE;EAC/BF,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC/D,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;GAChC;EACD,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CAC3C;;;;;;;;AAQD,SAAS,aAAa,CAAC,GAAG,EAAE;EAC1BA,GAAK,CAAC,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;EAC1D,IAAI,gBAAgB,CAAC,MAAM,EAAE;IAC3B,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;GAC5B;EACD,OAAO,KAAK,CAAC;CACd;;;;;;;;;;AAUD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;EAC5BA,GAAK,CAAC,MAAM,GAAG,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;EAC1EA,GAAK,CAAC,MAAM,GAAG,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;EAC1E,OAAO,MAAM,GAAG,MAAM,CAAC;CACxB;;AAED,eAAe,IAAI,CAAC;"}
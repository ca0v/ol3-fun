{"version":3,"file":"KeyboardPan.js","sources":["../../../src/ol/interaction/KeyboardPan.js"],"sourcesContent":["/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\nimport EventType from '../events/EventType.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport Interaction, {pan} from '../interaction/Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/events/condition~Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~noModifierKeys} and\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nclass KeyboardPan extends Interaction {\r\n  /**\r\n   * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function(mapBrowserEvent) {\r\n      return noModifierKeys(mapBrowserEvent) &&\r\n        targetNotEditable(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/events/condition~Condition}\r\n     */\r\n    this.condition_ = options.condition !== undefined ?\r\n      options.condition : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\r\n      options.pixelDelta : 128;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n * pressed).\r\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {module:ol/interaction/KeyboardPan}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  let stopEvent = false;\r\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n    const keyEvent = mapBrowserEvent.originalEvent;\r\n    const keyCode = keyEvent.keyCode;\r\n    if (this.condition_(mapBrowserEvent) &&\r\n        (keyCode == KeyCode.DOWN ||\r\n        keyCode == KeyCode.LEFT ||\r\n        keyCode == KeyCode.RIGHT ||\r\n        keyCode == KeyCode.UP)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n      let deltaX = 0, deltaY = 0;\r\n      if (keyCode == KeyCode.DOWN) {\r\n        deltaY = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.LEFT) {\r\n        deltaX = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.RIGHT) {\r\n        deltaX = mapUnitsDelta;\r\n      } else {\r\n        deltaY = mapUnitsDelta;\r\n      }\r\n      const delta = [deltaX, deltaY];\r\n      rotateCoordinate(delta, view.getRotation());\r\n      pan(view, delta, this.duration_);\r\n      mapBrowserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default KeyboardPan;\r\n"],"names":["super","const","let"],"mappings":"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"}
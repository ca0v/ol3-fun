{"version":3,"file":"Interaction.js","sources":["../../../src/ol/interaction/Interaction.js"],"sourcesContent":["/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {easeOut, linear} from '../easing.js';\r\nimport InteractionProperty from '../interaction/Property.js';\r\nimport {clamp} from '../math.js';\r\n\r\n\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return).\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nclass Interaction extends BaseObject {\r\n  /**\r\n   * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/PluggableMap}\r\n     */\r\n    this.map_ = null;\r\n\r\n    this.setActive(true);\r\n\r\n    /**\r\n     * @type {function(module:ol/MapBrowserEvent):boolean}\r\n     */\r\n    this.handleEvent = options.handleEvent;\r\n\r\n  }\r\n\r\n  /**\r\n   * Return whether the interaction is currently active.\r\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getActive() {\r\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this interaction.\r\n   * @return {module:ol/PluggableMap} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    this.set(InteractionProperty.ACTIVE, active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {module:ol/PluggableMap} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.map_ = map;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {module:ol/coordinate~Coordinate} delta Delta.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function pan(view, delta, opt_duration) {\r\n  const currentCenter = view.getCenter();\r\n  if (currentCenter) {\r\n    const center = view.constrainCenter(\r\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\r\n    if (opt_duration) {\r\n      view.animate({\r\n        duration: opt_duration,\r\n        easing: linear,\r\n        center: center\r\n      });\r\n    } else {\r\n      view.setCenter(center);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\r\n  rotation = view.constrainRotation(rotation, 0);\r\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\r\n  if (rotation !== undefined) {\r\n    const currentRotation = view.getRotation();\r\n    const currentCenter = view.getCenter();\r\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\r\n      view.animate({\r\n        rotation: rotation,\r\n        anchor: opt_anchor,\r\n        duration: opt_duration,\r\n        easing: easeOut\r\n      });\r\n    } else {\r\n      view.rotate(rotation, opt_anchor);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n * @param {number=} opt_direction Zooming direction; > 0 indicates\r\n *     zooming out, in which case the constraints system will select\r\n *     the largest nearest resolution; < 0 indicates zooming in, in\r\n *     which case the constraints system will select the smallest\r\n *     nearest resolution; == 0 indicates that the zooming direction\r\n *     is unknown/not relevant, in which case the constraints system\r\n *     will select the nearest resolution. If not defined 0 is\r\n *     assumed.\r\n */\r\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\r\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\r\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\r\n  const currentResolution = view.getResolution();\r\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\r\n\r\n  if (resolution !== undefined) {\r\n    const resolutions = view.getResolutions();\r\n    resolution = clamp(\r\n      resolution,\r\n      view.getMinResolution() || resolutions[resolutions.length - 1],\r\n      view.getMaxResolution() || resolutions[0]);\r\n  }\r\n\r\n  // If we have a constraint on center, we need to change the anchor so that the\r\n  // new center is within the extent. We first calculate the new center, apply\r\n  // the constraint to it, and then calculate back the anchor\r\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\r\n    const currentCenter = view.getCenter();\r\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\r\n    center = view.constrainCenter(center);\r\n\r\n    opt_anchor = [\r\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\r\n          (resolution - currentResolution),\r\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\r\n          (resolution - currentResolution)\r\n    ];\r\n  }\r\n\r\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/View} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\r\n  if (resolution) {\r\n    const currentResolution = view.getResolution();\r\n    const currentCenter = view.getCenter();\r\n    if (currentResolution !== undefined && currentCenter &&\r\n        resolution !== currentResolution && opt_duration) {\r\n      view.animate({\r\n        resolution: resolution,\r\n        anchor: opt_anchor,\r\n        duration: opt_duration,\r\n        easing: easeOut\r\n      });\r\n    } else {\r\n      if (opt_anchor) {\r\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\r\n        view.setCenter(center);\r\n      }\r\n      view.setResolution(resolution);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Interaction;\r\n"],"names":["super","const","let"],"mappings":"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"}
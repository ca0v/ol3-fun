{"version":3,"file":"Draw.js","sources":["../../../src/ol/interaction/Draw.js"],"sourcesContent":["/**\r\n * @module ol/interaction/Draw\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\r\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport Circle from '../geom/Circle.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\r\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\r\nimport InteractionProperty from '../interaction/Property.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/geom/GeometryType} type Geometry type of\r\n * the geometries being drawn with this instance.\r\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\r\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\r\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\r\n * was chosen for the draw interaction to behave correctly on mouse as well as\r\n * on touch devices.\r\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\r\n * Destination collection for the drawn features.\r\n * @property {module:ol/source/Vector} [source] Destination source for\r\n * the drawn features.\r\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\r\n * before the current vertex can be dragged to its exact position.\r\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\r\n * drawing finish.\r\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\r\n * doubleclick events from firing during drawing.\r\n * @property {number} [maxPoints] The number of points that can be drawn before\r\n * a polygon ring or line string is finished. By default there is no\r\n * restriction.\r\n * @property {number} [minPoints] The number of points that must be drawn\r\n * before a polygon ring or line string can be finished. Default is `3` for\r\n * polygon rings and `2` for line strings.\r\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether the drawing can be finished.\r\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\r\n * Style for sketch features.\r\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @property {string} [geometryName] Geometry name to use for features created\r\n * by the draw interaction.\r\n * @property {module:ol/events/condition~Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\r\n * adds a vertex or deactivates freehand drawing.\r\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\r\n * polygons, and circles.  This makes the interaction always operate in freehand\r\n * mode and takes precedence over any `freehandCondition` option.\r\n * @property {module:ol/events/condition~Condition} [freehandCondition]\r\n * Condition that activates freehand drawing for lines and polygons. This\r\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether that event should be handled. The\r\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\r\n * Shift key activates freehand drawing.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * Function that takes an array of coordinates and an optional existing geometry as\r\n * arguments, and returns a geometry. The optional existing geometry is the\r\n * geometry that is returned when the function is called without a second\r\n * argument.\r\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\r\n *     module:ol/geom/SimpleGeometry} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Draw mode.  This collapses multi-part geometry types with their single-part\r\n * cousins.\r\n * @enum {string}\r\n */\r\nconst Mode = {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  CIRCLE: 'Circle'\r\n};\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DrawEventType = {\r\n  /**\r\n   * Triggered upon feature draw start\r\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\r\n   * @api\r\n   */\r\n  DRAWSTART: 'drawstart',\r\n  /**\r\n   * Triggered upon feature draw end\r\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\r\n   * @api\r\n   */\r\n  DRAWEND: 'drawend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\r\n * instances of this type.\r\n */\r\nclass DrawEvent extends Event {\r\n  /**\r\n   * @param {module:ol/interaction/Draw~DrawEventType} type Type.\r\n   * @param {module:ol/Feature} feature The feature drawn.\r\n   */\r\n  constructor(type, feature) {\r\n\r\n    super(type);\r\n\r\n    /**\r\n     * The feature being drawn.\r\n     * @type {module:ol/Feature}\r\n     * @api\r\n     */\r\n    this.feature = feature;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for drawing feature geometries.\r\n *\r\n * @fires module:ol/interaction/Draw~DrawEvent\r\n * @api\r\n */\r\nclass Draw extends PointerInteraction {\r\n  /**\r\n   * @param {module:ol/interaction/Draw~Options} options Options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      handleDownEvent: handleDownEvent,\r\n      handleEvent: handleEvent,\r\n      handleUpEvent: handleUpEvent,\r\n      stopDown: FALSE\r\n    });\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.shouldHandle_ = false;\r\n\r\n    /**\r\n     * @type {module:ol/pixel~Pixel}\r\n     * @private\r\n     */\r\n    this.downPx_ = null;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.downTimeout_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.lastDragTime_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.freehand_ = false;\r\n\r\n    /**\r\n     * Target source for drawn features.\r\n     * @type {module:ol/source/Vector}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * Target collection for drawn features.\r\n     * @type {module:ol/Collection.<module:ol/Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * Pixel distance for snapping.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\r\n\r\n    /**\r\n     * Geometry type.\r\n     * @type {module:ol/geom/GeometryType}\r\n     * @private\r\n     */\r\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\r\n\r\n    /**\r\n     * Drawing mode (derived from geometry type.\r\n     * @type {module:ol/interaction/Draw~Mode}\r\n     * @private\r\n     */\r\n    this.mode_ = getMode(this.type_);\r\n\r\n    /**\r\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\r\n     * Default is `false`.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.stopClick_ = !!options.stopClick;\r\n\r\n    /**\r\n     * The number of points that must be drawn before a polygon ring or line\r\n     * string can be finished.  The default is 3 for polygon rings and 2 for\r\n     * line strings.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minPoints_ = options.minPoints ?\r\n      options.minPoints :\r\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\r\n\r\n    /**\r\n     * The number of points that can be drawn before a polygon ring or line string\r\n     * is finished. The default is no restriction.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\r\n\r\n    /**\r\n     * A function to decide if a potential finish coordinate is permissible\r\n     * @private\r\n     * @type {module:ol/events/condition~Condition}\r\n     */\r\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\r\n\r\n    let geometryFunction = options.geometryFunction;\r\n    if (!geometryFunction) {\r\n      if (this.type_ === GeometryType.CIRCLE) {\r\n        /**\r\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\r\n         *     The coordinates.\r\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\r\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\r\n            new Circle([NaN, NaN]);\r\n          const squaredLength = squaredCoordinateDistance(\r\n            coordinates[0], coordinates[1]);\r\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\r\n          return circle;\r\n        };\r\n      } else {\r\n        let Constructor;\r\n        const mode = this.mode_;\r\n        if (mode === Mode.POINT) {\r\n          Constructor = Point;\r\n        } else if (mode === Mode.LINE_STRING) {\r\n          Constructor = LineString;\r\n        } else if (mode === Mode.POLYGON) {\r\n          Constructor = Polygon;\r\n        }\r\n        /**\r\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\r\n         *     The coordinates.\r\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\r\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          let geometry = opt_geometry;\r\n          if (geometry) {\r\n            if (mode === Mode.POLYGON) {\r\n              if (coordinates[0].length) {\r\n                // Add a closing coordinate to match the first\r\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\r\n              } else {\r\n                geometry.setCoordinates([]);\r\n              }\r\n            } else {\r\n              geometry.setCoordinates(coordinates);\r\n            }\r\n          } else {\r\n            geometry = new Constructor(coordinates);\r\n          }\r\n          return geometry;\r\n        };\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @type {module:ol/interaction/Draw~GeometryFunction}\r\n     * @private\r\n     */\r\n    this.geometryFunction_ = geometryFunction;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\r\n\r\n    /**\r\n     * Finish coordinate for the feature (first point for polygons, last point for\r\n     * linestrings).\r\n     * @type {module:ol/coordinate~Coordinate}\r\n     * @private\r\n     */\r\n    this.finishCoordinate_ = null;\r\n\r\n    /**\r\n     * Sketch feature.\r\n     * @type {module:ol/Feature}\r\n     * @private\r\n     */\r\n    this.sketchFeature_ = null;\r\n\r\n    /**\r\n     * Sketch point.\r\n     * @type {module:ol/Feature}\r\n     * @private\r\n     */\r\n    this.sketchPoint_ = null;\r\n\r\n    /**\r\n     * Sketch coordinates. Used when drawing a line or polygon.\r\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\r\n     * @private\r\n     */\r\n    this.sketchCoords_ = null;\r\n\r\n    /**\r\n     * Sketch line. Used when drawing polygon.\r\n     * @type {module:ol/Feature}\r\n     * @private\r\n     */\r\n    this.sketchLine_ = null;\r\n\r\n    /**\r\n     * Sketch line coordinates. Used when drawing a polygon or circle.\r\n     * @type {Array.<module:ol/coordinate~Coordinate>}\r\n     * @private\r\n     */\r\n    this.sketchLineCoords_ = null;\r\n\r\n    /**\r\n     * Squared tolerance for handling up events.  If the squared distance\r\n     * between a down and up event is greater than this tolerance, up events\r\n     * will not be handled.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.squaredClickTolerance_ = options.clickTolerance ?\r\n      options.clickTolerance * options.clickTolerance : 36;\r\n\r\n    /**\r\n     * Draw overlay where our sketch features are drawn.\r\n     * @type {module:ol/layer/Vector}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX ? options.wrapX : false\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * Name of the geometry attribute for newly created features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/events/condition~Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/events/condition~Condition}\r\n     */\r\n    this.freehandCondition_;\r\n    if (options.freehand) {\r\n      this.freehandCondition_ = always;\r\n    } else {\r\n      this.freehandCondition_ = options.freehandCondition ?\r\n        options.freehandCondition : shiftKeyOnly;\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(InteractionProperty.ACTIVE),\r\n      this.updateState_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.updateState_();\r\n  }\r\n\r\n  /**\r\n   * Handle move events.\r\n   * @param {module:ol/MapBrowserEvent} event A move event.\r\n   * @return {boolean} Pass the event to other interactions.\r\n   * @private\r\n   */\r\n  handlePointerMove_(event) {\r\n    if (this.downPx_ &&\r\n        ((!this.freehand_ && this.shouldHandle_) ||\r\n        (this.freehand_ && !this.shouldHandle_))) {\r\n      const downPx = this.downPx_;\r\n      const clickPx = event.pixel;\r\n      const dx = downPx[0] - clickPx[0];\r\n      const dy = downPx[1] - clickPx[1];\r\n      const squaredDistance = dx * dx + dy * dy;\r\n      this.shouldHandle_ = this.freehand_ ?\r\n        squaredDistance > this.squaredClickTolerance_ :\r\n        squaredDistance <= this.squaredClickTolerance_;\r\n      if (!this.shouldHandle_) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (this.finishCoordinate_) {\r\n      this.modifyDrawing_(event);\r\n    } else {\r\n      this.createOrUpdateSketchPoint_(event);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine if an event is within the snapping tolerance of the start coord.\r\n   * @param {module:ol/MapBrowserEvent} event Event.\r\n   * @return {boolean} The event is within the snapping tolerance of the start.\r\n   * @private\r\n   */\r\n  atFinish_(event) {\r\n    let at = false;\r\n    if (this.sketchFeature_) {\r\n      let potentiallyDone = false;\r\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\r\n      if (this.mode_ === Mode.LINE_STRING) {\r\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\r\n      } else if (this.mode_ === Mode.POLYGON) {\r\n        potentiallyDone = this.sketchCoords_[0].length >\r\n            this.minPoints_;\r\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\r\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\r\n      }\r\n      if (potentiallyDone) {\r\n        const map = event.map;\r\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\r\n          const finishCoordinate = potentiallyFinishCoordinates[i];\r\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\r\n          const pixel = event.pixel;\r\n          const dx = pixel[0] - finishPixel[0];\r\n          const dy = pixel[1] - finishPixel[1];\r\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\r\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\r\n          if (at) {\r\n            this.finishCoordinate_ = finishCoordinate;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return at;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/MapBrowserEvent} event Event.\r\n   * @private\r\n   */\r\n  createOrUpdateSketchPoint_(event) {\r\n    const coordinates = event.coordinate.slice();\r\n    if (!this.sketchPoint_) {\r\n      this.sketchPoint_ = new Feature(new Point(coordinates));\r\n      this.updateSketchFeatures_();\r\n    } else {\r\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\r\n      sketchPointGeom.setCoordinates(coordinates);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the drawing.\r\n   * @param {module:ol/MapBrowserEvent} event Event.\r\n   * @private\r\n   */\r\n  startDrawing_(event) {\r\n    const start = event.coordinate;\r\n    this.finishCoordinate_ = start;\r\n    if (this.mode_ === Mode.POINT) {\r\n      this.sketchCoords_ = start.slice();\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\r\n      this.sketchLineCoords_ = this.sketchCoords_[0];\r\n    } else {\r\n      this.sketchCoords_ = [start.slice(), start.slice()];\r\n    }\r\n    if (this.sketchLineCoords_) {\r\n      this.sketchLine_ = new Feature(\r\n        new LineString(this.sketchLineCoords_));\r\n    }\r\n    const geometry = this.geometryFunction_(this.sketchCoords_);\r\n    this.sketchFeature_ = new Feature();\r\n    if (this.geometryName_) {\r\n      this.sketchFeature_.setGeometryName(this.geometryName_);\r\n    }\r\n    this.sketchFeature_.setGeometry(geometry);\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  }\r\n\r\n  /**\r\n   * Modify the drawing.\r\n   * @param {module:ol/MapBrowserEvent} event Event.\r\n   * @private\r\n   */\r\n  modifyDrawing_(event) {\r\n    let coordinate = event.coordinate;\r\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\r\n    let coordinates, last;\r\n    if (this.mode_ === Mode.POINT) {\r\n      last = this.sketchCoords_;\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = this.sketchCoords_[0];\r\n      last = coordinates[coordinates.length - 1];\r\n      if (this.atFinish_(event)) {\r\n        // snap to finish\r\n        coordinate = this.finishCoordinate_.slice();\r\n      }\r\n    } else {\r\n      coordinates = this.sketchCoords_;\r\n      last = coordinates[coordinates.length - 1];\r\n    }\r\n    last[0] = coordinate[0];\r\n    last[1] = coordinate[1];\r\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\r\n    if (this.sketchPoint_) {\r\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\r\n      sketchPointGeom.setCoordinates(coordinate);\r\n    }\r\n    let sketchLineGeom;\r\n    if (geometry instanceof Polygon &&\r\n        this.mode_ !== Mode.POLYGON) {\r\n      if (!this.sketchLine_) {\r\n        this.sketchLine_ = new Feature();\r\n      }\r\n      const ring = geometry.getLinearRing(0);\r\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\r\n      if (!sketchLineGeom) {\r\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\r\n        this.sketchLine_.setGeometry(sketchLineGeom);\r\n      } else {\r\n        sketchLineGeom.setFlatCoordinates(\r\n          ring.getLayout(), ring.getFlatCoordinates());\r\n        sketchLineGeom.changed();\r\n      }\r\n    } else if (this.sketchLineCoords_) {\r\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\r\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\r\n    }\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Add a new coordinate to the drawing.\r\n   * @param {module:ol/MapBrowserEvent} event Event.\r\n   * @private\r\n   */\r\n  addToDrawing_(event) {\r\n    const coordinate = event.coordinate;\r\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\r\n    let done;\r\n    let coordinates;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      this.finishCoordinate_ = coordinate.slice();\r\n      coordinates = this.sketchCoords_;\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = this.sketchCoords_[0];\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      if (done) {\r\n        this.finishCoordinate_ = coordinates[0];\r\n      }\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n    this.updateSketchFeatures_();\r\n    if (done) {\r\n      this.finishDrawing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove last point of the feature currently being drawn.\r\n   * @api\r\n   */\r\n  removeLastPoint() {\r\n    if (!this.sketchFeature_) {\r\n      return;\r\n    }\r\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\r\n    let coordinates, sketchLineGeom;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      coordinates = this.sketchCoords_;\r\n      coordinates.splice(-2, 1);\r\n      this.geometryFunction_(coordinates, geometry);\r\n      if (coordinates.length >= 2) {\r\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\r\n      }\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = this.sketchCoords_[0];\r\n      coordinates.splice(-2, 1);\r\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\r\n      sketchLineGeom.setCoordinates(coordinates);\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n\r\n    if (coordinates.length === 0) {\r\n      this.finishCoordinate_ = null;\r\n    }\r\n\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Stop drawing and add the sketch feature to the target layer.\r\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\r\n   * dispatched before inserting the feature.\r\n   * @api\r\n   */\r\n  finishDrawing() {\r\n    const sketchFeature = this.abortDrawing_();\r\n    if (!sketchFeature) {\r\n      return;\r\n    }\r\n    let coordinates = this.sketchCoords_;\r\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      // remove the redundant last point\r\n      coordinates.pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      // remove the redundant last point in ring\r\n      coordinates[0].pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n      coordinates = geometry.getCoordinates();\r\n    }\r\n\r\n    // cast multi-part geometries\r\n    if (this.type_ === GeometryType.MULTI_POINT) {\r\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\r\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\r\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\r\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\r\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\r\n    }\r\n\r\n    // First dispatch event to allow full set up of feature\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\r\n\r\n    // Then insert feature\r\n    if (this.features_) {\r\n      this.features_.push(sketchFeature);\r\n    }\r\n    if (this.source_) {\r\n      this.source_.addFeature(sketchFeature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop drawing without adding the sketch feature to the target layer.\r\n   * @return {module:ol/Feature} The sketch feature (or null if none).\r\n   * @private\r\n   */\r\n  abortDrawing_() {\r\n    this.finishCoordinate_ = null;\r\n    const sketchFeature = this.sketchFeature_;\r\n    if (sketchFeature) {\r\n      this.sketchFeature_ = null;\r\n      this.sketchPoint_ = null;\r\n      this.sketchLine_ = null;\r\n      this.overlay_.getSource().clear(true);\r\n    }\r\n    return sketchFeature;\r\n  }\r\n\r\n  /**\r\n   * Extend an existing geometry by adding additional points. This only works\r\n   * on features with `LineString` geometries, where the interaction will\r\n   * extend lines by adding points to the end of the coordinates array.\r\n   * @param {!module:ol/Feature} feature Feature to be extended.\r\n   * @api\r\n   */\r\n  extend(feature) {\r\n    const geometry = feature.getGeometry();\r\n    const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\r\n    this.sketchFeature_ = feature;\r\n    this.sketchCoords_ = lineString.getCoordinates();\r\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\r\n    this.finishCoordinate_ = last.slice();\r\n    this.sketchCoords_.push(last.slice());\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  }\r\n\r\n  /**\r\n   * Redraw the sketch features.\r\n   * @private\r\n   */\r\n  updateSketchFeatures_() {\r\n    const sketchFeatures = [];\r\n    if (this.sketchFeature_) {\r\n      sketchFeatures.push(this.sketchFeature_);\r\n    }\r\n    if (this.sketchLine_) {\r\n      sketchFeatures.push(this.sketchLine_);\r\n    }\r\n    if (this.sketchPoint_) {\r\n      sketchFeatures.push(this.sketchPoint_);\r\n    }\r\n    const overlaySource = this.overlay_.getSource();\r\n    overlaySource.clear(true);\r\n    overlaySource.addFeatures(sketchFeatures);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateState_() {\r\n    const map = this.getMap();\r\n    const active = this.getActive();\r\n    if (!map || !active) {\r\n      this.abortDrawing_();\r\n    }\r\n    this.overlay_.setMap(active ? map : null);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @return {module:ol/style/Style~StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\r\n * draw or finish the drawing.\r\n * @param {module:ol/MapBrowserEvent} event Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {module:ol/interaction/Draw}\r\n * @api\r\n */\r\nexport function handleEvent(event) {\r\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\r\n    // Avoid context menu for long taps when drawing on mobile\r\n    event.preventDefault();\r\n  }\r\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\r\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\r\n  let pass = true;\r\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\r\n    const now = Date.now();\r\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\r\n      this.downPx_ = event.pixel;\r\n      this.shouldHandle_ = !this.freehand_;\r\n      move = true;\r\n    } else {\r\n      this.lastDragTime_ = undefined;\r\n    }\r\n    if (this.shouldHandle_ && this.downTimeout_) {\r\n      clearTimeout(this.downTimeout_);\r\n      this.downTimeout_ = undefined;\r\n    }\r\n  }\r\n  if (this.freehand_ &&\r\n      event.type === MapBrowserEventType.POINTERDRAG &&\r\n      this.sketchFeature_ !== null) {\r\n    this.addToDrawing_(event);\r\n    pass = false;\r\n  } else if (this.freehand_ &&\r\n      event.type === MapBrowserEventType.POINTERDOWN) {\r\n    pass = false;\r\n  } else if (move) {\r\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\r\n    if (pass && this.freehand_) {\r\n      pass = this.handlePointerMove_(event);\r\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\r\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\r\n      this.handlePointerMove_(event);\r\n    }\r\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\r\n    pass = false;\r\n  }\r\n\r\n  return handlePointerEvent.call(this, event) && pass;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} event Event.\r\n * @return {boolean} Start drag sequence?\r\n * @this {module:ol/interaction/Draw}\r\n */\r\nfunction handleDownEvent(event) {\r\n  this.shouldHandle_ = !this.freehand_;\r\n\r\n  if (this.freehand_) {\r\n    this.downPx_ = event.pixel;\r\n    if (!this.finishCoordinate_) {\r\n      this.startDrawing_(event);\r\n    }\r\n    return true;\r\n  } else if (this.condition_(event)) {\r\n    this.lastDragTime_ = Date.now();\r\n    this.downTimeout_ = setTimeout(function() {\r\n      this.handlePointerMove_(new MapBrowserPointerEvent(\r\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\r\n    }.bind(this), this.dragVertexDelay_);\r\n    this.downPx_ = event.pixel;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} event Event.\r\n * @return {boolean} Stop drag sequence?\r\n * @this {module:ol/interaction/Draw}\r\n */\r\nfunction handleUpEvent(event) {\r\n  let pass = true;\r\n\r\n  if (this.downTimeout_) {\r\n    clearTimeout(this.downTimeout_);\r\n    this.downTimeout_ = undefined;\r\n  }\r\n\r\n  this.handlePointerMove_(event);\r\n\r\n  const circleMode = this.mode_ === Mode.CIRCLE;\r\n\r\n  if (this.shouldHandle_) {\r\n    if (!this.finishCoordinate_) {\r\n      this.startDrawing_(event);\r\n      if (this.mode_ === Mode.POINT) {\r\n        this.finishDrawing();\r\n      }\r\n    } else if (this.freehand_ || circleMode) {\r\n      this.finishDrawing();\r\n    } else if (this.atFinish_(event)) {\r\n      if (this.finishCondition_(event)) {\r\n        this.finishDrawing();\r\n      }\r\n    } else {\r\n      this.addToDrawing_(event);\r\n    }\r\n    pass = false;\r\n  } else if (this.freehand_) {\r\n    this.finishCoordinate_ = null;\r\n    this.abortDrawing_();\r\n  }\r\n  if (!pass && this.stopClick_) {\r\n    event.stopPropagation();\r\n  }\r\n  return pass;\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\r\n * polygon with a user specified number of sides and start angle instead of an\r\n * `module:ol/geom/Circle~Circle` geometry.\r\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\r\n *     32.\r\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\r\n *     Default is the angle defined by the heading from the center of the\r\n *     regular polygon to the current pointer position.\r\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\r\n *     polygon.\r\n * @api\r\n */\r\nexport function createRegularPolygon(opt_sides, opt_angle) {\r\n  return function(coordinates, opt_geometry) {\r\n    const center = coordinates[0];\r\n    const end = coordinates[1];\r\n    const radius = Math.sqrt(\r\n      squaredCoordinateDistance(center, end));\r\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\r\n      fromCircle(new Circle(center), opt_sides);\r\n    const angle = opt_angle ? opt_angle :\r\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\r\n    makeRegular(geometry, center, radius, angle);\r\n    return geometry;\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\r\n * with the coordinate system axes).  Use this with the draw interaction and\r\n * `type: 'Circle'` to return a box instead of a circle geometry.\r\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\r\n * @api\r\n */\r\nexport function createBox() {\r\n  return (\r\n    function(coordinates, opt_geometry) {\r\n      const extent = boundingExtent(coordinates);\r\n      const boxCoordinates = [[\r\n        getBottomLeft(extent),\r\n        getBottomRight(extent),\r\n        getTopRight(extent),\r\n        getTopLeft(extent),\r\n        getBottomLeft(extent)\r\n      ]];\r\n      let geometry = opt_geometry;\r\n      if (geometry) {\r\n        geometry.setCoordinates(boxCoordinates);\r\n      } else {\r\n        geometry = new Polygon(boxCoordinates);\r\n      }\r\n      return geometry;\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\r\n * their single-part cousins.\r\n * @param {module:ol/geom/GeometryType} type Geometry type.\r\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\r\n */\r\nfunction getMode(type) {\r\n  let mode;\r\n  if (type === GeometryType.POINT ||\r\n      type === GeometryType.MULTI_POINT) {\r\n    mode = Mode.POINT;\r\n  } else if (type === GeometryType.LINE_STRING ||\r\n      type === GeometryType.MULTI_LINE_STRING) {\r\n    mode = Mode.LINE_STRING;\r\n  } else if (type === GeometryType.POLYGON ||\r\n      type === GeometryType.MULTI_POLYGON) {\r\n    mode = Mode.POLYGON;\r\n  } else if (type === GeometryType.CIRCLE) {\r\n    mode = Mode.CIRCLE;\r\n  }\r\n  return (\r\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\r\n  );\r\n}\r\n\r\n\r\nexport default Draw;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
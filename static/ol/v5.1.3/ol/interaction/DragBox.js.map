{"version":3,"file":"DragBox.js","sources":["../../../src/ol/interaction/DragBox.js"],"sourcesContent":["/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\r\nimport {UNDEFINED} from '../functions.js';\r\nimport PointerInteraction from '../interaction/Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\n\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~always}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nclass DragBoxEvent extends Event {\r\n\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\r\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\r\n   */\r\n  constructor(type, coordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {module:ol/coordinate~Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {module:ol/MapBrowserEvent}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom}).\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires module:ol/interaction/DragBox~DragBoxEvent\r\n * @api\r\n */\r\nclass DragBox extends PointerInteraction {\r\n  /**\r\n   * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    super({\r\n      handleDownEvent: handleDownEvent,\r\n      handleDragEvent: handleDragEvent,\r\n      handleUpEvent: handleUpEvent\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n    * @type {module:ol/render/Box}\r\n    * @private\r\n    */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    /**\r\n     * Function to execute just before `onboxend` is fired\r\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\r\n     * @private\r\n     */\r\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\r\n\r\n    /**\r\n    * @type {module:ol/pixel~Pixel}\r\n    * @private\r\n    */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n    * @private\r\n    * @type {module:ol/events/condition~Condition}\r\n    */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n    * @private\r\n    * @type {module:ol/interaction/DragBox~EndCondition}\r\n    */\r\n    this.boxEndCondition_ = options.boxEndCondition ?\r\n      options.boxEndCondition : defaultBoxEndCondition;\r\n  }\r\n\r\n  /**\r\n  * Returns geometry of last drawn box.\r\n  * @return {module:ol/geom/Polygon} Geometry.\r\n  * @api\r\n  */\r\n  getGeometry() {\r\n    return this.box_.getGeometry();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The default condition for determining whether the boxend event\r\n * should fire.\r\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\r\n *     leading to the box end.\r\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\r\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\r\n * @return {boolean} Whether or not the boxend condition should be fired.\r\n * @this {module:ol/interaction/DragBox}\r\n */\r\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\r\n  const width = endPixel[0] - startPixel[0];\r\n  const height = endPixel[1] - startPixel[1];\r\n  return width * width + height * height >= this.minArea_;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\r\n * @this {module:ol/interaction/DragBox}\r\n */\r\nfunction handleDragEvent(mapBrowserEvent) {\r\n  if (!mouseOnly(mapBrowserEvent)) {\r\n    return;\r\n  }\r\n\r\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\r\n    mapBrowserEvent.coordinate, mapBrowserEvent));\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\r\n * @return {boolean} Stop drag sequence?\r\n * @this {module:ol/interaction/DragBox}\r\n */\r\nfunction handleUpEvent(mapBrowserEvent) {\r\n  if (!mouseOnly(mapBrowserEvent)) {\r\n    return true;\r\n  }\r\n\r\n  this.box_.setMap(null);\r\n\r\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\r\n    this.onBoxEnd_(mapBrowserEvent);\r\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\r\n      mapBrowserEvent.coordinate, mapBrowserEvent));\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\r\n * @return {boolean} Start drag sequence?\r\n * @this {module:ol/interaction/DragBox}\r\n */\r\nfunction handleDownEvent(mapBrowserEvent) {\r\n  if (!mouseOnly(mapBrowserEvent)) {\r\n    return false;\r\n  }\r\n\r\n  if (mouseActionButton(mapBrowserEvent) &&\r\n      this.condition_(mapBrowserEvent)) {\r\n    this.startPixel_ = mapBrowserEvent.pixel;\r\n    this.box_.setMap(mapBrowserEvent.map);\r\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\r\n      mapBrowserEvent.coordinate, mapBrowserEvent));\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nexport default DragBox;\r\n"],"names":["const","super"],"mappings":"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"}
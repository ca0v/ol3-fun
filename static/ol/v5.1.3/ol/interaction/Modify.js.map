{"version":3,"file":"Modify.js","sources":["../../../src/ol/interaction/Modify.js"],"sourcesContent":["/**\r\n * @module ol/interaction/Modify\r\n */\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\r\nimport {equals} from '../array.js';\r\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\r\nimport {listen, unlisten} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\r\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * The segment index assigned to a circle's center when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CENTER_INDEX = 0;\r\n\r\n/**\r\n * The segment index assigned to a circle's circumference when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ModifyEventType = {\r\n  /**\r\n   * Triggered upon feature modification start\r\n   * @event ModifyEvent#modifystart\r\n   * @api\r\n   */\r\n  MODIFYSTART: 'modifystart',\r\n  /**\r\n   * Triggered upon feature modification end\r\n   * @event ModifyEvent#modifyend\r\n   * @api\r\n   */\r\n  MODIFYEND: 'modifyend'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {Array.<number>} [depth]\r\n * @property {module:ol/Feature} feature\r\n * @property {module:ol/geom/SimpleGeometry} geometry\r\n * @property {number} index\r\n * @property {Array.<module:ol/extent~Extent>} segment\r\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {module:ol/events/condition~Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event will be considered to add or move a\r\n * vertex to the sketch. Default is\r\n * {@link module:ol/events/condition~primaryAction}.\r\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. By default,\r\n * {@link module:ol/events/condition~singleClick} with\r\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\r\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\r\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether a new vertex can be added to the sketch\r\n * features. Default is {@link module:ol/events/condition~always}.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\r\n * Style used for the features being modified. By default the default edit\r\n * style is used (see {@link module:ol/style}).\r\n * @property {module:ol/source/Vector} [source] The vector source with\r\n * features to modify.  If a vector source is not provided, a feature collection\r\n * must be provided with the features option.\r\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\r\n * The features the interaction works on.  If a feature collection is not\r\n * provided, a vector source must be provided with the source option.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\r\n * instances of this type.\r\n */\r\nexport class ModifyEvent extends Event {\r\n  /**\r\n   * @param {ModifyEventType} type Type.\r\n   * @param {module:ol/Collection.<module:ol/Feature>} features\r\n   * The features modified.\r\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\r\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\r\n   */\r\n  constructor(type, features, mapBrowserPointerEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features being modified.\r\n     * @type {module:ol/Collection.<module:ol/Feature>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent}.\r\n     * @type {module:ol/MapBrowserEvent}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserPointerEvent;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for modifying feature geometries.  To modify features that have\r\n * been added to an existing source, construct the modify interaction with the\r\n * `source` option.  If you want to modify features in a collection (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.  The interaction must be constructed with either a\r\n * `source` or `features` option.\r\n *\r\n * By default, the interaction will allow deletion of vertices when the `alt`\r\n * key is pressed.  To configure the interaction with a different condition\r\n * for deletion, use the `deleteCondition` option.\r\n * @fires module:ol/interaction/Modify~ModifyEvent\r\n * @api\r\n */\r\nclass Modify extends PointerInteraction {\r\n  /**\r\n   * @param {module:ol/interaction/Modify~Options} options Options.\r\n   */\r\n  constructor(options) {\r\n\r\n    super({\r\n      handleDownEvent: handleDownEvent,\r\n      handleDragEvent: handleDragEvent,\r\n      handleEvent: handleEvent,\r\n      handleUpEvent: handleUpEvent\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/events/condition~Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : primaryAction;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\r\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @type {module:ol/events/condition~Condition}\r\n     * @private\r\n     */\r\n    this.deleteCondition_ = options.deleteCondition ?\r\n      options.deleteCondition : this.defaultDeleteCondition_;\r\n\r\n    /**\r\n     * @type {module:ol/events/condition~Condition}\r\n     * @private\r\n     */\r\n    this.insertVertexCondition_ = options.insertVertexCondition ?\r\n      options.insertVertexCondition : always;\r\n\r\n    /**\r\n     * Editing vertex.\r\n     * @type {module:ol/Feature}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    /**\r\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\r\n     * @type {Object.<string, boolean>}\r\n     * @private\r\n     */\r\n    this.vertexSegments_ = null;\r\n\r\n    /**\r\n     * @type {module:ol/pixel~Pixel}\r\n     * @private\r\n     */\r\n    this.lastPixel_ = [0, 0];\r\n\r\n    /**\r\n     * Tracks if the next `singleclick` event should be ignored to prevent\r\n     * accidental deletion right after vertex creation.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.ignoreNextSingleClick_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.modified_ = false;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Indicate whether the interaction is currently changing a feature's\r\n     * coordinates.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.changingFeature_ = false;\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dragSegments_ = [];\r\n\r\n    /**\r\n     * Draw overlay where sketch features are drawn.\r\n     * @type {module:ol/layer/Vector}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\r\n     */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'Circle': this.writeCircleGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\r\n    };\r\n\r\n\r\n    /**\r\n     * @type {module:ol/source/Vector}\r\n     * @private\r\n     */\r\n    this.source_ = null;\r\n\r\n    let features;\r\n    if (options.source) {\r\n      this.source_ = options.source;\r\n      features = new Collection(this.source_.getFeatures());\r\n      listen(this.source_, VectorEventType.ADDFEATURE,\r\n        this.handleSourceAdd_, this);\r\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n        this.handleSourceRemove_, this);\r\n    } else {\r\n      features = options.features;\r\n    }\r\n    if (!features) {\r\n      throw new Error('The modify interaction requires features or a source');\r\n    }\r\n\r\n    /**\r\n     * @type {module:ol/Collection.<module:ol/Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = features;\r\n\r\n    this.features_.forEach(this.addFeature_.bind(this));\r\n    listen(this.features_, CollectionEventType.ADD,\r\n      this.handleFeatureAdd_, this);\r\n    listen(this.features_, CollectionEventType.REMOVE,\r\n      this.handleFeatureRemove_, this);\r\n\r\n    /**\r\n     * @type {module:ol/MapBrowserPointerEvent}\r\n     * @private\r\n     */\r\n    this.lastPointerEvent_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @private\r\n   */\r\n  addFeature_(feature) {\r\n    const geometry = feature.getGeometry();\r\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\r\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\r\n    }\r\n    const map = this.getMap();\r\n    if (map && map.isRendered() && this.getActive()) {\r\n      this.handlePointerAtPixel_(this.lastPixel_, map);\r\n    }\r\n    listen(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\r\n   * @private\r\n   */\r\n  willModifyFeatures_(evt) {\r\n    if (!this.modified_) {\r\n      this.modified_ = true;\r\n      this.dispatchEvent(new ModifyEvent(\r\n        ModifyEventType.MODIFYSTART, this.features_, evt));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeature_(feature) {\r\n    this.removeFeatureSegmentData_(feature);\r\n    // Remove the vertex feature if the collection of canditate features\r\n    // is empty.\r\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    unlisten(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureSegmentData_(feature) {\r\n    const rBush = this.rBush_;\r\n    const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\r\n    rBush.forEach(\r\n      /**\r\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\r\n       */\r\n      function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n      rBush.remove(nodesToRemove[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setActive(active) {\r\n    if (this.vertexFeature_ && !active) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    super.setActive(active);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    this.overlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceAdd_(event) {\r\n    if (event.feature) {\r\n      this.features_.push(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceRemove_(event) {\r\n    if (event.feature) {\r\n      this.features_.remove(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/events/Event} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    if (!this.changingFeature_) {\r\n      const feature = /** @type {module:ol/Feature} */ (evt.target);\r\n      this.removeFeature_(feature);\r\n      this.addFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = /** @type {module:ol/Feature} */ (evt.element);\r\n    this.removeFeature_(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/Point} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        depth: [i],\r\n        index: i,\r\n        segment: [coordinates, coordinates]\r\n      });\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/LineString} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        index: i,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/Polygon} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n          const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: [j, k],\r\n            index: i,\r\n            segment: segment\r\n          });\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We convert a circle into two segments.  The segment at index\r\n   * {@link CIRCLE_CENTER_INDEX} is the\r\n   * circle's center (a point).  The segment at index\r\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\r\n   * the circumference, and is not a line segment.\r\n   *\r\n   * @param {module:ol/Feature} feature Feature.\r\n   * @param {module:ol/geom/Circle} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCenter();\r\n    const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CENTER_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\r\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\r\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/Feature} feature Feature\r\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\r\n   * @return {module:ol/Feature} Vertex feature.\r\n   * @private\r\n   */\r\n  createOrUpdateVertexFeature_(coordinates) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(coordinates));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.overlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\r\n      geometry.setCoordinates(coordinates);\r\n    }\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/MapBrowserEvent} evt Event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(evt) {\r\n    this.lastPixel_ = evt.pixel;\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pixel~Pixel} pixel Pixel\r\n   * @param {module:ol/PluggableMap} map Map.\r\n   * @private\r\n   */\r\n  handlePointerAtPixel_(pixel, map) {\r\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n    const sortByDistance = function(a, b) {\r\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\r\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\r\n    };\r\n\r\n    const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\r\n      map.getView().getResolution() * this.pixelTolerance_);\r\n\r\n    const rBush = this.rBush_;\r\n    const nodes = rBush.getInExtent(box);\r\n    if (nodes.length > 0) {\r\n      nodes.sort(sortByDistance);\r\n      const node = nodes[0];\r\n      const closestSegment = node.segment;\r\n      let vertex = closestOnSegmentData(pixelCoordinate, node);\r\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\r\n      let dist = coordinateDistance(pixel, vertexPixel);\r\n      if (dist <= this.pixelTolerance_) {\r\n        const vertexSegments = {};\r\n\r\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\r\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n          this.snappedToVertex_ = true;\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n        } else {\r\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n          if (this.snappedToVertex_) {\r\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          }\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\r\n            const segment = nodes[i].segment;\r\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\r\n                coordinatesEqual(closestSegment[1], segment[1]) ||\r\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\r\n                coordinatesEqual(closestSegment[1], segment[0])))) {\r\n              vertexSegments[getUid(segment)] = true;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        vertexSegments[getUid(closestSegment)] = true;\r\n        this.vertexSegments_ = vertexSegments;\r\n        return;\r\n      }\r\n    }\r\n    if (this.vertexFeature_) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\r\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\r\n   * @private\r\n   */\r\n  insertVertex_(segmentData, vertex) {\r\n    const segment = segmentData.segment;\r\n    const feature = segmentData.feature;\r\n    const geometry = segmentData.geometry;\r\n    const depth = segmentData.depth;\r\n    const index = /** @type {number} */ (segmentData.index);\r\n    let coordinates;\r\n\r\n    while (vertex.length < geometry.getStride()) {\r\n      vertex.push(0);\r\n    }\r\n\r\n    switch (geometry.getType()) {\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates.splice(index + 1, 0, vertex);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.setGeometryCoordinates_(geometry, coordinates);\r\n    const rTree = this.rBush_;\r\n    rTree.remove(segmentData);\r\n    this.updateSegmentIndices_(geometry, index, depth, 1);\r\n    const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n      segment: [segment[0], vertex],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData.segment),\r\n      newSegmentData);\r\n    this.dragSegments_.push([newSegmentData, 1]);\r\n\r\n    const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n      segment: [vertex, segment[1]],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index + 1\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\r\n    this.dragSegments_.push([newSegmentData2, 0]);\r\n    this.ignoreNextSingleClick_ = true;\r\n  }\r\n\r\n  /**\r\n   * Removes the vertex currently being pointed.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @api\r\n   */\r\n  removePoint() {\r\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\r\n      const evt = this.lastPointerEvent_;\r\n      this.willModifyFeatures_(evt);\r\n      this.removeVertex_();\r\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n      this.modified_ = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes a vertex from all matching features.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @private\r\n   */\r\n  removeVertex_() {\r\n    const dragSegments = this.dragSegments_;\r\n    const segmentsByFeature = {};\r\n    let deleted = false;\r\n    let component, coordinates, dragSegment, geometry, i, index, left;\r\n    let newIndex, right, segmentData, uid;\r\n    for (i = dragSegments.length - 1; i >= 0; --i) {\r\n      dragSegment = dragSegments[i];\r\n      segmentData = dragSegment[0];\r\n      uid = getUid(segmentData.feature);\r\n      if (segmentData.depth) {\r\n        // separate feature components\r\n        uid += '-' + segmentData.depth.join('-');\r\n      }\r\n      if (!(uid in segmentsByFeature)) {\r\n        segmentsByFeature[uid] = {};\r\n      }\r\n      if (dragSegment[1] === 0) {\r\n        segmentsByFeature[uid].right = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index;\r\n      } else if (dragSegment[1] == 1) {\r\n        segmentsByFeature[uid].left = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index + 1;\r\n      }\r\n\r\n    }\r\n    for (uid in segmentsByFeature) {\r\n      right = segmentsByFeature[uid].right;\r\n      left = segmentsByFeature[uid].left;\r\n      index = segmentsByFeature[uid].index;\r\n      newIndex = index - 1;\r\n      if (left !== undefined) {\r\n        segmentData = left;\r\n      } else {\r\n        segmentData = right;\r\n      }\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      }\r\n      geometry = segmentData.geometry;\r\n      coordinates = geometry.getCoordinates();\r\n      component = coordinates;\r\n      deleted = false;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          if (coordinates[segmentData.depth[0]].length > 2) {\r\n            coordinates[segmentData.depth[0]].splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          if (coordinates.length > 2) {\r\n            coordinates.splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          component = component[segmentData.depth[1]];\r\n          /* falls through */\r\n        case GeometryType.POLYGON:\r\n          component = component[segmentData.depth[0]];\r\n          if (component.length > 4) {\r\n            if (index == component.length - 1) {\r\n              index = 0;\r\n            }\r\n            component.splice(index, 1);\r\n            deleted = true;\r\n            if (index === 0) {\r\n              // close the ring again\r\n              component.pop();\r\n              component.push(component[0]);\r\n              newIndex = component.length - 1;\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          // pass\r\n      }\r\n\r\n      if (deleted) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n        const segments = [];\r\n        if (left !== undefined) {\r\n          this.rBush_.remove(left);\r\n          segments.push(left.segment[0]);\r\n        }\r\n        if (right !== undefined) {\r\n          this.rBush_.remove(right);\r\n          segments.push(right.segment[1]);\r\n        }\r\n        if (left !== undefined && right !== undefined) {\r\n          const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\r\n            depth: segmentData.depth,\r\n            feature: segmentData.feature,\r\n            geometry: segmentData.geometry,\r\n            index: newIndex,\r\n            segment: segments\r\n          });\r\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\r\n            newSegmentData);\r\n        }\r\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\r\n        if (this.vertexFeature_) {\r\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n          this.vertexFeature_ = null;\r\n        }\r\n        dragSegments.length = 0;\r\n      }\r\n\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\r\n   * @param {Array} coordinates Coordinates.\r\n   * @private\r\n   */\r\n  setGeometryCoordinates_(geometry, coordinates) {\r\n    this.changingFeature_ = true;\r\n    geometry.setCoordinates(coordinates);\r\n    this.changingFeature_ = false;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\r\n   * @param {number} index Index.\r\n   * @param {Array.<number>|undefined} depth Depth.\r\n   * @param {number} delta Delta (1 or -1).\r\n   * @private\r\n   */\r\n  updateSegmentIndices_(geometry, index, depth, delta) {\r\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\r\n      if (segmentDataMatch.geometry === geometry &&\r\n          (depth === undefined || segmentDataMatch.depth === undefined ||\r\n          equals(segmentDataMatch.depth, depth)) &&\r\n          segmentDataMatch.index > index) {\r\n        segmentDataMatch.index += delta;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\r\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\r\n * @return {number} The difference in indexes.\r\n */\r\nfunction compareIndexes(a, b) {\r\n  return a.index - b.index;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\r\n * @return {boolean} Start drag sequence?\r\n * @this {module:ol/interaction/Modify}\r\n */\r\nfunction handleDownEvent(evt) {\r\n  if (!this.condition_(evt)) {\r\n    return false;\r\n  }\r\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\r\n  this.dragSegments_.length = 0;\r\n  this.modified_ = false;\r\n  const vertexFeature = this.vertexFeature_;\r\n  if (vertexFeature) {\r\n    const insertVertices = [];\r\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\r\n    const vertex = geometry.getCoordinates();\r\n    const vertexExtent = boundingExtent([vertex]);\r\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\r\n    const componentSegments = {};\r\n    segmentDataMatches.sort(compareIndexes);\r\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\r\n      const segmentDataMatch = segmentDataMatches[i];\r\n      const segment = segmentDataMatch.segment;\r\n      let uid = getUid(segmentDataMatch.feature);\r\n      const depth = segmentDataMatch.depth;\r\n      if (depth) {\r\n        uid += '-' + depth.join('-'); // separate feature components\r\n      }\r\n      if (!componentSegments[uid]) {\r\n        componentSegments[uid] = new Array(2);\r\n      }\r\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\r\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\r\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\r\n          this.dragSegments_.push([segmentDataMatch, 0]);\r\n          componentSegments[uid][0] = segmentDataMatch;\r\n        }\r\n      } else if (coordinatesEqual(segment[0], vertex) &&\r\n          !componentSegments[uid][0]) {\r\n        this.dragSegments_.push([segmentDataMatch, 0]);\r\n        componentSegments[uid][0] = segmentDataMatch;\r\n      } else if (coordinatesEqual(segment[1], vertex) &&\r\n          !componentSegments[uid][1]) {\r\n\r\n        // prevent dragging closed linestrings by the connecting node\r\n        if ((segmentDataMatch.geometry.getType() ===\r\n            GeometryType.LINE_STRING ||\r\n            segmentDataMatch.geometry.getType() ===\r\n            GeometryType.MULTI_LINE_STRING) &&\r\n            componentSegments[uid][0] &&\r\n            componentSegments[uid][0].index === 0) {\r\n          continue;\r\n        }\r\n\r\n        this.dragSegments_.push([segmentDataMatch, 1]);\r\n        componentSegments[uid][1] = segmentDataMatch;\r\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\r\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\r\n        insertVertices.push([segmentDataMatch, vertex]);\r\n      }\r\n    }\r\n    if (insertVertices.length) {\r\n      this.willModifyFeatures_(evt);\r\n    }\r\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\r\n      this.insertVertex_.apply(this, insertVertices[j]);\r\n    }\r\n  }\r\n  return !!this.vertexFeature_;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\r\n * @this {module:ol/interaction/Modify}\r\n */\r\nfunction handleDragEvent(evt) {\r\n  this.ignoreNextSingleClick_ = false;\r\n  this.willModifyFeatures_(evt);\r\n\r\n  const vertex = evt.coordinate;\r\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\r\n    const dragSegment = this.dragSegments_[i];\r\n    const segmentData = dragSegment[0];\r\n    const depth = segmentData.depth;\r\n    const geometry = segmentData.geometry;\r\n    let coordinates;\r\n    const segment = segmentData.segment;\r\n    const index = dragSegment[1];\r\n\r\n    while (vertex.length < geometry.getStride()) {\r\n      vertex.push(segment[index][vertex.length]);\r\n    }\r\n\r\n    switch (geometry.getType()) {\r\n      case GeometryType.POINT:\r\n        coordinates = vertex;\r\n        segment[0] = segment[1] = vertex;\r\n        break;\r\n      case GeometryType.MULTI_POINT:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[segmentData.index] = vertex;\r\n        segment[0] = segment[1] = vertex;\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[segmentData.index + index] = vertex;\r\n        segment[index] = vertex;\r\n        break;\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]][segmentData.index + index] = vertex;\r\n        segment[index] = vertex;\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]][segmentData.index + index] = vertex;\r\n        segment[index] = vertex;\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\r\n        segment[index] = vertex;\r\n        break;\r\n      case GeometryType.CIRCLE:\r\n        segment[0] = segment[1] = vertex;\r\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\r\n          this.changingFeature_ = true;\r\n          geometry.setCenter(vertex);\r\n          this.changingFeature_ = false;\r\n        } else { // We're dragging the circle's circumference:\r\n          this.changingFeature_ = true;\r\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\r\n          this.changingFeature_ = false;\r\n        }\r\n        break;\r\n      default:\r\n        // pass\r\n    }\r\n\r\n    if (coordinates) {\r\n      this.setGeometryCoordinates_(geometry, coordinates);\r\n    }\r\n  }\r\n  this.createOrUpdateVertexFeature_(vertex);\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\r\n * @return {boolean} Stop drag sequence?\r\n * @this {module:ol/interaction/Modify}\r\n */\r\nfunction handleUpEvent(evt) {\r\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\r\n    const segmentData = this.dragSegments_[i][0];\r\n    const geometry = segmentData.geometry;\r\n    if (geometry.getType() === GeometryType.CIRCLE) {\r\n      // Update a circle object in the R* bush:\r\n      const coordinates = geometry.getCenter();\r\n      const centerSegmentData = segmentData.featureSegments[0];\r\n      const circumferenceSegmentData = segmentData.featureSegments[1];\r\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\r\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\r\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\r\n    } else {\r\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\r\n    }\r\n  }\r\n  if (this.modified_) {\r\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n    this.modified_ = false;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\r\n * geometry.\r\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {module:ol/interaction/Modify}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\r\n    return true;\r\n  }\r\n  this.lastPointerEvent_ = mapBrowserEvent;\r\n\r\n  let handled;\r\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\r\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n      !this.handlingDownUpSequence) {\r\n    this.handlePointerMove_(mapBrowserEvent);\r\n  }\r\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\r\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\r\n      handled = this.removePoint();\r\n    } else {\r\n      handled = true;\r\n    }\r\n  }\r\n\r\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\r\n    this.ignoreNextSingleClick_ = false;\r\n  }\r\n\r\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\r\n}\r\n\r\n\r\n/**\r\n * Returns the distance from a point to a line segment.\r\n *\r\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\r\n *        which to calculate the distance.\r\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\r\n *        segment we are calculating the distance to.\r\n * @return {number} The square of the distance between a point and a line segment.\r\n */\r\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE) {\r\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\r\n\r\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n      const distanceToCenterSquared =\r\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\r\n      const distanceToCircumference =\r\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\r\n      return distanceToCircumference * distanceToCircumference;\r\n    }\r\n  }\r\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n/**\r\n * Returns the point closest to a given line segment.\r\n *\r\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\r\n *        should be found.\r\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\r\n *        segment which should contain the closest point.\r\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\r\n */\r\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE &&\r\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n    return geometry.getClosestPoint(pointCoordinates);\r\n  }\r\n  return closestOnSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n\r\n/**\r\n * @return {module:ol/style/Style~StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n\r\nexport default Modify;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
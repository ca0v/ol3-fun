{"version":3,"file":"Collection.js","sources":["../../src/ol/Collection.js"],"sourcesContent":["/**\r\n * @module ol/Collection\r\n */\r\nimport AssertionError from './AssertionError.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport BaseObject from './Object.js';\r\nimport Event from './events/Event.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LENGTH: 'length'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\r\n * type.\r\n */\r\nexport class CollectionEvent extends Event {\r\n\r\n  /**\r\n   * @param {module:ol/CollectionEventType} type Type.\r\n   * @param {*=} opt_element Element.\r\n   */\r\n  constructor(type, opt_element) {\r\n    super(type);\r\n\r\n    /**\r\n     * The element that is added to or removed from the collection.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.element = opt_element;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [unique=false] Disallow the same item from being added to\r\n * the collection twice.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An expanded version of standard JS Array, adding convenience methods for\r\n * manipulation. Add and remove changes to the Collection trigger a Collection\r\n * event. Note that this does not cover changes to the objects _within_ the\r\n * Collection; they trigger events on the appropriate object, not on the\r\n * Collection as a whole.\r\n *\r\n * @template T\r\n * @api\r\n */\r\nclass Collection extends BaseObject {\r\n\r\n  /**\r\n   * @param {Array.<T>=} opt_array Array.\r\n   * @param {module:ol/Collection~Options=} opt_options Collection options.\r\n   */\r\n  constructor(opt_array, opt_options) {\r\n\r\n    super();\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.unique_ = !!options.unique;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array.<T>}\r\n     */\r\n    this.array_ = opt_array ? opt_array : [];\r\n\r\n    if (this.unique_) {\r\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n        this.assertUnique_(this.array_[i], i);\r\n      }\r\n    }\r\n\r\n    this.updateLength_();\r\n\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @api\r\n   */\r\n  clear() {\r\n    while (this.getLength() > 0) {\r\n      this.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add elements to the collection.  This pushes each item in the provided array\r\n   * to the end of the collection.\r\n   * @param {!Array.<T>} arr Array.\r\n   * @return {module:ol/Collection.<T>} This collection.\r\n   * @api\r\n   */\r\n  extend(arr) {\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      this.push(arr[i]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Iterate over each element, calling the provided callback.\r\n   * @param {function(T, number, Array.<T>): *} f The function to call\r\n   *     for every element. This function takes 3 arguments (the element, the\r\n   *     index and the array). The return value is ignored.\r\n   * @api\r\n   */\r\n  forEach(f) {\r\n    const array = this.array_;\r\n    for (let i = 0, ii = array.length; i < ii; ++i) {\r\n      f(array[i], i, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a reference to the underlying Array object. Warning: if the array\r\n   * is mutated, no events will be dispatched by the collection, and the\r\n   * collection's \"length\" property won't be in sync with the actual length\r\n   * of the array.\r\n   * @return {!Array.<T>} Array.\r\n   * @api\r\n   */\r\n  getArray() {\r\n    return this.array_;\r\n  }\r\n\r\n  /**\r\n   * Get the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @return {T} Element.\r\n   * @api\r\n   */\r\n  item(index) {\r\n    return this.array_[index];\r\n  }\r\n\r\n  /**\r\n   * Get the length of this collection.\r\n   * @return {number} The length of the array.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLength() {\r\n    return /** @type {number} */ (this.get(Property.LENGTH));\r\n  }\r\n\r\n  /**\r\n   * Insert an element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  insertAt(index, elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    this.array_.splice(index, 0, elem);\r\n    this.updateLength_();\r\n    this.dispatchEvent(\r\n      new CollectionEvent(CollectionEventType.ADD, elem));\r\n  }\r\n\r\n  /**\r\n   * Remove the last element of the collection and return it.\r\n   * Return `undefined` if the collection is empty.\r\n   * @return {T|undefined} Element.\r\n   * @api\r\n   */\r\n  pop() {\r\n    return this.removeAt(this.getLength() - 1);\r\n  }\r\n\r\n  /**\r\n   * Insert the provided element at the end of the collection.\r\n   * @param {T} elem Element.\r\n   * @return {number} New length of the collection.\r\n   * @api\r\n   */\r\n  push(elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    const n = this.getLength();\r\n    this.insertAt(n, elem);\r\n    return this.getLength();\r\n  }\r\n\r\n  /**\r\n   * Remove the first occurrence of an element from the collection.\r\n   * @param {T} elem Element.\r\n   * @return {T|undefined} The removed element or undefined if none found.\r\n   * @api\r\n   */\r\n  remove(elem) {\r\n    const arr = this.array_;\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      if (arr[i] === elem) {\r\n        return this.removeAt(i);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Remove the element at the provided index and return it.\r\n   * Return `undefined` if the collection does not contain this index.\r\n   * @param {number} index Index.\r\n   * @return {T|undefined} Value.\r\n   * @api\r\n   */\r\n  removeAt(index) {\r\n    const prev = this.array_[index];\r\n    this.array_.splice(index, 1);\r\n    this.updateLength_();\r\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\r\n    return prev;\r\n  }\r\n\r\n  /**\r\n   * Set the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  setAt(index, elem) {\r\n    const n = this.getLength();\r\n    if (index < n) {\r\n      if (this.unique_) {\r\n        this.assertUnique_(elem, index);\r\n      }\r\n      const prev = this.array_[index];\r\n      this.array_[index] = elem;\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.ADD, elem));\r\n    } else {\r\n      for (let j = n; j < index; ++j) {\r\n        this.insertAt(j, undefined);\r\n      }\r\n      this.insertAt(index, elem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateLength_() {\r\n    this.set(Property.LENGTH, this.array_.length);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {T} elem Element.\r\n   * @param {number=} opt_except Optional index to ignore.\r\n   */\r\n  assertUnique_(elem, opt_except) {\r\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n      if (this.array_[i] === elem && i !== opt_except) {\r\n        throw new AssertionError(58);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Collection;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
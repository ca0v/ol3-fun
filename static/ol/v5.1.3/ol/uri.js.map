{"version":3,"file":"uri.js","sources":["../../src/ol/uri.js"],"sourcesContent":["/**\r\n * @module ol/uri\r\n */\r\n\r\n\r\n/**\r\n * Appends query parameters to a URI.\r\n *\r\n * @param {string} uri The original URI, which may already have query data.\r\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\r\n *     and the values are arbitrary types or arrays.\r\n * @return {string} The new URI.\r\n */\r\nexport function appendParams(uri, params) {\r\n  const keyParams = [];\r\n  // Skip any null or undefined parameter values\r\n  Object.keys(params).forEach(function(k) {\r\n    if (params[k] !== null && params[k] !== undefined) {\r\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\r\n    }\r\n  });\r\n  const qs = keyParams.join('&');\r\n  // remove any trailing ? or &\r\n  uri = uri.replace(/[?&]$/, '');\r\n  // append ? or & depending on whether uri has existing parameters\r\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\r\n  return uri + qs;\r\n}\r\n"],"names":["const"],"mappings":"AAAA;;;;;;;;;;;;;AAaA,OAAO,SAAS,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE;EACxCA,GAAK,CAAC,SAAS,GAAG,EAAE,CAAC;;EAErB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;IACtC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;MACjD,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;GACF,CAAC,CAAC;EACHA,GAAK,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;EAE/B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;;EAE/B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EACtD,OAAO,GAAG,GAAG,EAAE,CAAC;CACjB;"}
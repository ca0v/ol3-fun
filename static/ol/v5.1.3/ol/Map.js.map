{"version":3,"file":"Map.js","sources":["../../src/ol/Map.js"],"sourcesContent":["/**\r\n * @module ol/Map\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {defaults as defaultControls} from './control/util.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\nimport {assign} from './obj.js';\r\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\r\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\r\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\r\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\r\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\r\n * @fires module:ol/MapEvent~MapEvent\r\n * @fires module:ol/render/Event~RenderEvent#postcompose\r\n * @fires module:ol/render/Event~RenderEvent#precompose\r\n * @api\r\n */\r\nclass Map extends PluggableMap {\r\n\r\n  /**\r\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions();\r\n    }\r\n\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    const renderer = new CanvasMapRenderer(this);\r\n    renderer.registerLayerRenderers([\r\n      CanvasImageLayerRenderer,\r\n      CanvasTileLayerRenderer,\r\n      CanvasVectorLayerRenderer,\r\n      CanvasVectorTileLayerRenderer\r\n    ]);\r\n    return renderer;\r\n  }\r\n}\r\n\r\n\r\nexport default Map;\r\n"],"names":["super","const"],"mappings":"AAAA;;;AAGA,OAAO,YAAY,MAAM,mBAAmB,CAAC;AAC7C,QAAQ,QAAQ,IAAI,eAAe,OAAO,mBAAmB,CAAC;AAC9D,QAAQ,QAAQ,IAAI,mBAAmB,OAAO,kBAAkB,CAAC;AACjE,QAAQ,MAAM,OAAO,UAAU,CAAC;AAChC,OAAO,wBAAwB,MAAM,iCAAiC,CAAC;AACvE,OAAO,iBAAiB,MAAM,0BAA0B,CAAC;AACzD,OAAO,uBAAuB,MAAM,gCAAgC,CAAC;AACrE,OAAO,yBAAyB,MAAM,kCAAkC,CAAC;AACzE,OAAO,6BAA6B,MAAM,sCAAsC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDjF,IAAM,GAAG,GAAqB;EAK5B,YAAW,CAAC,OAAO,EAAE;IACnB,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;MACrB,OAAO,CAAC,QAAQ,GAAG,eAAe,EAAE,CAAC;KACtC;IACD,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;MACzB,OAAO,CAAC,YAAY,GAAG,mBAAmB,EAAE,CAAC;KAC9C;;IAEDA,iBAAK,OAAC,OAAO,CAAC,CAAC;;;;;kCAChB;;gBAED,yCAAc,GAAG;IACfC,GAAK,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC7C,QAAQ,CAAC,sBAAsB,CAAC;MAC9B,wBAAwB;MACxB,uBAAuB;MACvB,yBAAyB;MACzB,6BAA6B;KAC9B,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;GACjB;;;EA1Be,eA2BjB;;;AAGD,eAAe,GAAG,CAAC;"}
{"version":3,"file":"MapBrowserEventHandler.js","sources":["../../src/ol/MapBrowserEventHandler.js"],"sourcesContent":["/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport EventTarget from './events/EventTarget.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\r\n\r\nclass MapBrowserEventHandler extends EventTarget {\r\n\r\n  /**\r\n   * @param {module:ol/PluggableMap} map The map with the viewport to listen to events on.\r\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\r\n   */\r\n  constructor(map, moveTolerance) {\r\n\r\n    super();\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {module:ol/PluggableMap}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_ = 0;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array.<module:ol/events~EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance ?\r\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {module:ol/pointer/PointerEvent}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    const element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.activePointers_ = 0;\r\n\r\n    /**\r\n     * @type {!Object.<number, boolean>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the viewport element.\r\n     *\r\n     * @type {module:ol/pointer/PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.pointerEventHandler_ = new PointerEventHandler(element);\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the document (used when dragging).\r\n     *\r\n     * @type {module:ol/pointer/PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.documentPointerEventHandler_ = null;\r\n\r\n    /**\r\n     * @type {?module:ol/events~EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_, this);\r\n\r\n    /**\r\n     * @type {?module:ol/events~EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayEvent_, this);\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  emulateClick_(pointerEvent) {\r\n    let newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== 0) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = 0;\r\n      newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(function() {\r\n        this.clickTimeoutId_ = 0;\r\n        const newEvent = new MapBrowserPointerEvent(\r\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n      }.bind(this), 250);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  updateActivePointers_(pointerEvent) {\r\n    const event = pointerEvent;\r\n\r\n    if (event.type == MapBrowserEventType.POINTERUP ||\r\n        event.type == MapBrowserEventType.POINTERCANCEL) {\r\n      delete this.trackedTouches_[event.pointerId];\r\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\r\n      this.trackedTouches_[event.pointerId] = true;\r\n    }\r\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerUp_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.stopPropagation() or event.preventDefault().\r\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_ === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  isMouseActionButton_(pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerDown_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    this.down_ = pointerEvent;\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      /* Set up a pointer event handler on the `document`,\r\n       * which is required when the pointer is moved outside\r\n       * the viewport when dragging.\r\n       */\r\n      this.documentPointerEventHandler_ =\r\n          new PointerEventHandler(document);\r\n\r\n      this.dragListenerKeys_.push(\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_, this),\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERUP,\r\n          this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(this.pointerEventHandler_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_, this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.dragging_ = true;\r\n      const newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\r\n        this.dragging_);\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n\r\n    // Some native android browser triggers mousemove events during small period\r\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\r\n    // https://code.google.com/p/android/issues/detail?id=19827\r\n    // ex: Galaxy Tab P3110 + Android 4.1.1\r\n    pointerEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Wrap and relay a pointer event.  Note that this requires that the type\r\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  relayEvent_(pointerEvent) {\r\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(new MapBrowserPointerEvent(\r\n      pointerEvent.type, this.map_, pointerEvent, dragging));\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  isMoving_(pointerEvent) {\r\n    return this.dragging_ ||\r\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\r\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    if (this.documentPointerEventHandler_) {\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n    if (this.pointerEventHandler_) {\r\n      this.pointerEventHandler_.dispose();\r\n      this.pointerEventHandler_ = null;\r\n    }\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\n\r\nexport default MapBrowserEventHandler;\r\n"],"names":["super","const","let"],"mappings":"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"}
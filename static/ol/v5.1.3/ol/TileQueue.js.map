{"version":3,"file":"TileQueue.js","sources":["../../src/ol/TileQueue.js"],"sourcesContent":["/**\r\n * @module ol/TileQueue\r\n */\r\nimport TileState from './TileState.js';\r\nimport {listen, unlisten} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue from './structs/PriorityQueue.js';\r\n\r\n\r\n/**\r\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\r\n */\r\n\r\n\r\nclass TileQueue extends PriorityQueue {\r\n\r\n  /**\r\n   * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction Tile priority function.\r\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\r\n   */\r\n  constructor(tilePriorityFunction, tileChangeCallback) {\r\n\r\n    super(\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {number} Priority.\r\n       */\r\n      function(element) {\r\n        return tilePriorityFunction.apply(null, element);\r\n      },\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function(element) {\r\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\r\n      });\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(): ?}\r\n     */\r\n    this.tileChangeCallback_ = tileChangeCallback;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilesLoading_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string,boolean>}\r\n     */\r\n    this.tilesLoadingKeys_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  enqueue(element) {\r\n    const added = super.enqueue(element);\r\n    if (added) {\r\n      const tile = element[0];\r\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\r\n    }\r\n    return added;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Number of tiles loading.\r\n   */\r\n  getTilesLoading() {\r\n    return this.tilesLoading_;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/events/Event} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {module:ol/Tile} */ (event.target);\r\n    const state = tile.getState();\r\n    if (state === TileState.LOADED || state === TileState.ERROR ||\r\n        state === TileState.EMPTY || state === TileState.ABORT) {\r\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\r\n      const tileKey = tile.getKey();\r\n      if (tileKey in this.tilesLoadingKeys_) {\r\n        delete this.tilesLoadingKeys_[tileKey];\r\n        --this.tilesLoading_;\r\n      }\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n   */\r\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\r\n    let newLoads = 0;\r\n    let abortedTiles = false;\r\n    let state, tile, tileKey;\r\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\r\n           this.getCount() > 0) {\r\n      tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\r\n      tileKey = tile.getKey();\r\n      state = tile.getState();\r\n      if (state === TileState.ABORT) {\r\n        abortedTiles = true;\r\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n        this.tilesLoadingKeys_[tileKey] = true;\r\n        ++this.tilesLoading_;\r\n        ++newLoads;\r\n        tile.load();\r\n      }\r\n    }\r\n    if (newLoads === 0 && abortedTiles) {\r\n      // Do not stop the render loop when all wanted tiles were aborted due to\r\n      // a small, saturated tile cache.\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default TileQueue;\r\n"],"names":["super","const","let","this"],"mappings":"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"}
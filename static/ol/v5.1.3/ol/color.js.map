{"version":3,"file":"color.js","sources":["../../src/ol/color.js"],"sourcesContent":["/**\r\n * @module ol/color\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * A color represented as a short array [red, green, blue, alpha].\r\n * red, green, and blue should be integers in the range 0..255 inclusive.\r\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\r\n * given then `1` will be used.\r\n * @typedef {Array.<number>} Color\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\r\n\r\n\r\n/**\r\n * Regular expression for matching potential named color style strings.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\r\n\r\n\r\n/**\r\n * Return the color as an rgba string.\r\n * @param {module:ol/color~Color|string} color Color.\r\n * @return {string} Rgba string.\r\n * @api\r\n */\r\nexport function asString(color) {\r\n  if (typeof color === 'string') {\r\n    return color;\r\n  } else {\r\n    return toString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * Return named color as an rgba string.\r\n * @param {string} color Named color.\r\n * @return {string} Rgb string.\r\n */\r\nfunction fromNamed(color) {\r\n  const el = document.createElement('div');\r\n  el.style.color = color;\r\n  if (el.style.color !== '') {\r\n    document.body.appendChild(el);\r\n    const rgb = getComputedStyle(el).color;\r\n    document.body.removeChild(el);\r\n    return rgb;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} s String.\r\n * @return {module:ol/color~Color} Color.\r\n */\r\nexport const fromString = (\r\n  function() {\r\n\r\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\r\n    // semantics, whenever the cache grows too large we simply delete an\r\n    // arbitrary 25% of the entries.\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    const MAX_CACHE_SIZE = 1024;\r\n\r\n    /**\r\n     * @type {Object.<string, module:ol/color~Color>}\r\n     */\r\n    const cache = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    let cacheSize = 0;\r\n\r\n    return (\r\n      /**\r\n       * @param {string} s String.\r\n       * @return {module:ol/color~Color} Color.\r\n       */\r\n      function(s) {\r\n        let color;\r\n        if (cache.hasOwnProperty(s)) {\r\n          color = cache[s];\r\n        } else {\r\n          if (cacheSize >= MAX_CACHE_SIZE) {\r\n            let i = 0;\r\n            for (const key in cache) {\r\n              if ((i++ & 3) === 0) {\r\n                delete cache[key];\r\n                --cacheSize;\r\n              }\r\n            }\r\n          }\r\n          color = fromStringInternal_(s);\r\n          cache[s] = color;\r\n          ++cacheSize;\r\n        }\r\n        return color;\r\n      }\r\n    );\r\n\r\n  })();\r\n\r\n/**\r\n * Return the color as an array. This function maintains a cache of calculated\r\n * arrays which means the result should not be modified.\r\n * @param {module:ol/color~Color|string} color Color.\r\n * @return {module:ol/color~Color} Color.\r\n * @api\r\n */\r\nexport function asArray(color) {\r\n  if (Array.isArray(color)) {\r\n    return color;\r\n  } else {\r\n    return fromString(/** @type {string} */ (color));\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @private\r\n * @return {module:ol/color~Color} Color.\r\n */\r\nfunction fromStringInternal_(s) {\r\n  let r, g, b, a, color;\r\n\r\n  if (NAMED_COLOR_RE_.exec(s)) {\r\n    s = fromNamed(s);\r\n  }\r\n\r\n  if (HEX_COLOR_RE_.exec(s)) { // hex\r\n    const n = s.length - 1; // number of hex digits\r\n    let d; // number of digits per channel\r\n    if (n <= 4) {\r\n      d = 1;\r\n    } else {\r\n      d = 2;\r\n    }\r\n    const hasAlpha = n === 4 || n === 8;\r\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\r\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\r\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\r\n    if (hasAlpha) {\r\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\r\n    } else {\r\n      a = 255;\r\n    }\r\n    if (d == 1) {\r\n      r = (r << 4) + r;\r\n      g = (g << 4) + g;\r\n      b = (b << 4) + b;\r\n      if (hasAlpha) {\r\n        a = (a << 4) + a;\r\n      }\r\n    }\r\n    color = [r, g, b, a / 255];\r\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\r\n    color = s.slice(5, -1).split(',').map(Number);\r\n    normalize(color);\r\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\r\n    color = s.slice(4, -1).split(',').map(Number);\r\n    color.push(1);\r\n    normalize(color);\r\n  } else {\r\n    assert(false, 14); // Invalid color\r\n  }\r\n  return (\r\n    /** @type {module:ol/color~Color} */ (color)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * TODO this function is only used in the test, we probably shouldn't export it\r\n * @param {module:ol/color~Color} color Color.\r\n * @return {module:ol/color~Color} Clamped color.\r\n */\r\nexport function normalize(color) {\r\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\r\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\r\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\r\n  color[3] = clamp(color[3], 0, 1);\r\n  return color;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/color~Color} color Color.\r\n * @return {string} String.\r\n */\r\nexport function toString(color) {\r\n  let r = color[0];\r\n  if (r != (r | 0)) {\r\n    r = (r + 0.5) | 0;\r\n  }\r\n  let g = color[1];\r\n  if (g != (g | 0)) {\r\n    g = (g + 0.5) | 0;\r\n  }\r\n  let b = color[2];\r\n  if (b != (b | 0)) {\r\n    b = (b + 0.5) | 0;\r\n  }\r\n  const a = color[3] === undefined ? 1 : color[3];\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n}\r\n"],"names":["const","let"],"mappings":"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"}
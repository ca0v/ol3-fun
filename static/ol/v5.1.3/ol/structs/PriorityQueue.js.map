{"version":3,"file":"PriorityQueue.js","sources":["../../../src/ol/structs/PriorityQueue.js"],"sourcesContent":["/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport const DROP = Infinity;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\r\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nclass PriorityQueue {\r\n\r\n  /**\r\n   * @param {function(T): number} priorityFunction Priority function.\r\n   * @param {function(T): string} keyFunction Key function.\r\n   */\r\n  constructor(priorityFunction, keyFunction) {\r\n\r\n    /**\r\n     * @type {function(T): number}\r\n     * @private\r\n     */\r\n    this.priorityFunction_ = priorityFunction;\r\n\r\n    /**\r\n     * @type {function(T): string}\r\n     * @private\r\n     */\r\n    this.keyFunction_ = keyFunction;\r\n\r\n    /**\r\n     * @type {Array.<T>}\r\n     * @private\r\n     */\r\n    this.elements_ = [];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @private\r\n     */\r\n    this.priorities_ = [];\r\n\r\n    /**\r\n     * @type {!Object.<string, boolean>}\r\n     * @private\r\n     */\r\n    this.queuedElements_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.elements_.length = 0;\r\n    this.priorities_.length = 0;\r\n    clear(this.queuedElements_);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove and return the highest-priority element. O(log N).\r\n   * @return {T} Element.\r\n   */\r\n  dequeue() {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[0];\r\n    if (elements.length == 1) {\r\n      elements.length = 0;\r\n      priorities.length = 0;\r\n    } else {\r\n      elements[0] = elements.pop();\r\n      priorities[0] = priorities.pop();\r\n      this.siftUp_(0);\r\n    }\r\n    const elementKey = this.keyFunction_(element);\r\n    delete this.queuedElements_[elementKey];\r\n    return element;\r\n  }\r\n\r\n\r\n  /**\r\n   * Enqueue an element. O(log N).\r\n   * @param {T} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\r\n      31); // Tried to enqueue an `element` that was already added to the queue\r\n    const priority = this.priorityFunction_(element);\r\n    if (priority != DROP) {\r\n      this.elements_.push(element);\r\n      this.priorities_.push(priority);\r\n      this.queuedElements_[this.keyFunction_(element)] = true;\r\n      this.siftDown_(0, this.elements_.length - 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.elements_.length;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the left child of the node at the given index.\r\n   * @param {number} index The index of the node to get the left child for.\r\n   * @return {number} The index of the left child.\r\n   * @private\r\n   */\r\n  getLeftChildIndex_(index) {\r\n    return index * 2 + 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the right child of the node at the given index.\r\n   * @param {number} index The index of the node to get the right child for.\r\n   * @return {number} The index of the right child.\r\n   * @private\r\n   */\r\n  getRightChildIndex_(index) {\r\n    return index * 2 + 2;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the index of the parent of the node at the given index.\r\n   * @param {number} index The index of the node to get the parent for.\r\n   * @return {number} The index of the parent.\r\n   * @private\r\n   */\r\n  getParentIndex_(index) {\r\n    return (index - 1) >> 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * Make this a heap. O(N).\r\n   * @private\r\n   */\r\n  heapify_() {\r\n    let i;\r\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n      this.siftUp_(i);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.elements_.length === 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Is key queued.\r\n   */\r\n  isKeyQueued(key) {\r\n    return key in this.queuedElements_;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {T} element Element.\r\n   * @return {boolean} Is queued.\r\n   */\r\n  isQueued(element) {\r\n    return this.isKeyQueued(this.keyFunction_(element));\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} index The index of the node to move down.\r\n   * @private\r\n   */\r\n  siftUp_(index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const count = elements.length;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n    const startIndex = index;\r\n\r\n    while (index < (count >> 1)) {\r\n      const lIndex = this.getLeftChildIndex_(index);\r\n      const rIndex = this.getRightChildIndex_(index);\r\n\r\n      const smallerChildIndex = rIndex < count &&\r\n          priorities[rIndex] < priorities[lIndex] ?\r\n        rIndex : lIndex;\r\n\r\n      elements[index] = elements[smallerChildIndex];\r\n      priorities[index] = priorities[smallerChildIndex];\r\n      index = smallerChildIndex;\r\n    }\r\n\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n    this.siftDown_(startIndex, index);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} startIndex The index of the root.\r\n   * @param {number} index The index of the node to move up.\r\n   * @private\r\n   */\r\n  siftDown_(startIndex, index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n\r\n    while (index > startIndex) {\r\n      const parentIndex = this.getParentIndex_(index);\r\n      if (priorities[parentIndex] > priority) {\r\n        elements[index] = elements[parentIndex];\r\n        priorities[index] = priorities[parentIndex];\r\n        index = parentIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n  }\r\n\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  reprioritize() {\r\n    const priorityFunction = this.priorityFunction_;\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    let index = 0;\r\n    const n = elements.length;\r\n    let element, i, priority;\r\n    for (i = 0; i < n; ++i) {\r\n      element = elements[i];\r\n      priority = priorityFunction(element);\r\n      if (priority == DROP) {\r\n        delete this.queuedElements_[this.keyFunction_(element)];\r\n      } else {\r\n        priorities[index] = priority;\r\n        elements[index++] = element;\r\n      }\r\n    }\r\n    elements.length = index;\r\n    priorities.length = index;\r\n    this.heapify_();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default PriorityQueue;\r\n"],"names":["const","let","this"],"mappings":"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"}
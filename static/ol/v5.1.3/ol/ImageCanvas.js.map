{"version":3,"file":"ImageCanvas.js","sources":["../../src/ol/ImageCanvas.js"],"sourcesContent":["/**\r\n * @module ol/ImageCanvas\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\n\r\n\r\n/**\r\n * A function that is called to trigger asynchronous canvas drawing.  It is\r\n * called with a \"done\" callback that should be called when drawing is done.\r\n * If any error occurs during drawing, the \"done\" callback should be called with\r\n * that error.\r\n *\r\n * @typedef {function(function(Error))} Loader\r\n */\r\n\r\n\r\nclass ImageCanvas extends ImageBase {\r\n\r\n  /**\r\n   * @param {module:ol/extent~Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {HTMLCanvasElement} canvas Canvas.\r\n   * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\r\n   *     support asynchronous canvas drawing.\r\n   */\r\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\r\n\r\n    const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n\r\n    super(extent, resolution, pixelRatio, state);\r\n\r\n    /**\r\n     * Optional canvas loader function.\r\n     * @type {?module:ol/ImageCanvas~Loader}\r\n     * @private\r\n     */\r\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Error}\r\n     */\r\n    this.error_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * Get any error associated with asynchronous rendering.\r\n   * @return {Error} Any error that occurred during rendering.\r\n   */\r\n  getError() {\r\n    return this.error_;\r\n  }\r\n\r\n  /**\r\n   * Handle async drawing complete.\r\n   * @param {Error} err Any error during drawing.\r\n   * @private\r\n   */\r\n  handleLoad_(err) {\r\n    if (err) {\r\n      this.error_ = err;\r\n      this.state = ImageState.ERROR;\r\n    } else {\r\n      this.state = ImageState.LOADED;\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    if (this.state == ImageState.IDLE) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.loader_(this.handleLoad_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas element.\r\n   */\r\n  getImage() {\r\n    return this.canvas_;\r\n  }\r\n}\r\n\r\n\r\nexport default ImageCanvas;\r\n"],"names":["const","super"],"mappings":"AAAA;;;AAGA,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,UAAU,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;AAazC,IAAM,WAAW,GAAkB;EAUjC,oBAAW,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE;;IAE9DA,GAAK,CAAC,KAAK,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;;IAE7EC,cAAK,OAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;;;;;;;IAO7C,IAAI,CAAC,OAAO,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC;;;;;;IAM5D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;;IAMtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;;kDAEpB;;;;;;wBAMD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB;;;;;;;wBAOD,mCAAW,CAAC,GAAG,EAAE;IACf,IAAI,GAAG,EAAE;MACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;MAClB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;KAC/B,MAAM;MACL,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;KAChC;IACD,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;wBAKD,qBAAI,GAAG;IACL,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,IAAI,EAAE;MACjC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAAC,OAAO,EAAE,CAAC;MACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3C;IACF;;;;;wBAKD,6BAAQ,GAAG;IACT,OAAO,IAAI,CAAC,OAAO,CAAC;GACrB;;;EA5EuB,YA6EzB;;;AAGD,eAAe,WAAW,CAAC;"}
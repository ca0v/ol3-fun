{"version":3,"file":"FullScreen.js","sources":["../../../src/ol/control/FullScreen.js"],"sourcesContent":["/**\r\n * @module ol/control/FullScreen\r\n */\r\nimport Control from '../control/Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @return {string} Change type.\r\n */\r\nconst getChangeType = (function() {\r\n  let changeType;\r\n  return function() {\r\n    if (!changeType) {\r\n      const body = document.body;\r\n      if (body.webkitRequestFullscreen) {\r\n        changeType = 'webkitfullscreenchange';\r\n      } else if (body.mozRequestFullScreen) {\r\n        changeType = 'mozfullscreenchange';\r\n      } else if (body.msRequestFullscreen) {\r\n        changeType = 'MSFullscreenChange';\r\n      } else if (body.requestFullscreen) {\r\n        changeType = 'fullscreenchange';\r\n      }\r\n    }\r\n    return changeType;\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-full-screen'] CSS class name.\r\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\r\n * button when full-screen is active.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\r\n * @property {boolean} [keys=false] Full keyboard access.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {HTMLElement|string} [source] The element to be displayed\r\n * fullscreen. When not provided, the element containing the map viewport will\r\n * be displayed fullscreen.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Provides a button that when clicked fills up the full screen with the map.\r\n * The full screen source element is by default the element containing the map viewport unless\r\n * overridden by providing the `source` option. In which case, the dom\r\n * element introduced using this parameter will be displayed in full screen.\r\n *\r\n * When in full screen mode, a close button is shown to exit full screen mode.\r\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\r\n * toggle the map in full screen mode.\r\n *\r\n * @api\r\n */\r\nclass FullScreen extends Control {\r\n\r\n  /**\r\n   * @param {module:ol/control/FullScreen~Options=} opt_options Options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.cssClassName_ = options.className !== undefined ? options.className :\r\n      'ol-full-screen';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u2922';\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.labelNode_ = typeof label === 'string' ?\r\n      document.createTextNode(label) : label;\r\n\r\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\r\n      document.createTextNode(labelActive) : labelActive;\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\r\n    const button = document.createElement('button');\r\n    button.className = this.cssClassName_ + '-' + isFullScreen();\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.labelNode_);\r\n\r\n    listen(button, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\r\n        ' ' + CLASS_CONTROL + ' ' +\r\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.keys_ = options.keys !== undefined ? options.keys : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|string|undefined}\r\n     */\r\n    this.source_ = options.source;\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleFullScreen_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreen_() {\r\n    if (!isFullScreenSupported()) {\r\n      return;\r\n    }\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    if (isFullScreen()) {\r\n      exitFullScreen();\r\n    } else {\r\n      let element;\r\n      if (this.source_) {\r\n        element = typeof this.source_ === 'string' ?\r\n          document.getElementById(this.source_) :\r\n          this.source_;\r\n      } else {\r\n        element = map.getTargetElement();\r\n      }\r\n      if (this.keys_) {\r\n        requestFullScreenWithKeys(element);\r\n\r\n      } else {\r\n        requestFullScreen(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreenChange_() {\r\n    const button = this.element.firstElementChild;\r\n    const map = this.getMap();\r\n    if (isFullScreen()) {\r\n      button.className = this.cssClassName_ + '-true';\r\n      replaceNode(this.labelActiveNode_, this.labelNode_);\r\n    } else {\r\n      button.className = this.cssClassName_ + '-false';\r\n      replaceNode(this.labelNode_, this.labelActiveNode_);\r\n    }\r\n    if (map) {\r\n      map.updateSize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      this.listenerKeys.push(listen(document,\r\n        getChangeType(),\r\n        this.handleFullScreenChange_, this)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @return {boolean} Fullscreen is supported by the current platform.\r\n */\r\nfunction isFullScreenSupported() {\r\n  const body = document.body;\r\n  return !!(\r\n    body.webkitRequestFullscreen ||\r\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\r\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\r\n    (body.requestFullscreen && document.fullscreenEnabled)\r\n  );\r\n}\r\n\r\n/**\r\n * @return {boolean} Element is currently in fullscreen.\r\n */\r\nfunction isFullScreen() {\r\n  return !!(\r\n    document.webkitIsFullScreen || document.mozFullScreen ||\r\n    document.msFullscreenElement || document.fullscreenElement\r\n  );\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreen(element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if (element.msRequestFullscreen) {\r\n    element.msRequestFullscreen();\r\n  } else if (element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen();\r\n  } else if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  }\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element with keyboard input.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreenWithKeys(element) {\r\n  if (element.mozRequestFullScreenWithKeys) {\r\n    element.mozRequestFullScreenWithKeys();\r\n  } else if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n  } else {\r\n    requestFullScreen(element);\r\n  }\r\n}\r\n\r\n/**\r\n * Exit fullscreen.\r\n */\r\nfunction exitFullScreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen();\r\n  }\r\n}\r\n\r\nexport default FullScreen;\r\n"],"names":["const","let","super"],"mappings":"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"}
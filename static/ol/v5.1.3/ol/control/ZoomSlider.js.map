{"version":3,"file":"ZoomSlider.js","sources":["../../../src/ol/control/ZoomSlider.js"],"sourcesContent":["/**\r\n * @module ol/control/ZoomSlider\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport Control from '../control/Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen} from '../events.js';\r\nimport {stopPropagation} from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {clamp} from '../math.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\r\n\r\n\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nconst Direction = {\r\n  VERTICAL: 0,\r\n  HORIZONTAL: 1\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nclass ZoomSlider extends Control {\r\n\r\n  /**\r\n   * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render\r\n    });\r\n\r\n    /**\r\n     * Will hold the current resolution of the view.\r\n     *\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.currentResolution_ = undefined;\r\n\r\n    /**\r\n     * The direction of the slider. Will be determined from actual display of the\r\n     * container and defaults to Direction.VERTICAL.\r\n     *\r\n     * @type {Direction}\r\n     * @private\r\n     */\r\n    this.direction_ = Direction.VERTICAL;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.heightLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.widthLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.previousX_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.previousY_;\r\n\r\n    /**\r\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n     * is called.\r\n     * @type {module:ol/size~Size}\r\n     * @private\r\n     */\r\n    this.thumbSize_ = null;\r\n\r\n    /**\r\n     * Whether the slider is initialized.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.sliderInitialized_ = false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\r\n    const thumbElement = document.createElement('button');\r\n    thumbElement.setAttribute('type', 'button');\r\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n    const containerElement = this.element;\r\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    containerElement.appendChild(thumbElement);\r\n    /**\r\n     * @type {module:ol/pointer/PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.dragger_ = new PointerEventHandler(containerElement);\r\n\r\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\r\n      this.handleDraggerStart_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\r\n      this.handleDraggerDrag_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERUP,\r\n      this.handleDraggerEnd_, this);\r\n\r\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\r\n    listen(thumbElement, EventType.CLICK, stopPropagation);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.dragger_.dispose();\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the slider element. This will determine and set this controls\r\n   * direction_ and also constrain the dragging of the thumb to always be within\r\n   * the bounds of the container.\r\n   *\r\n   * @private\r\n   */\r\n  initSlider_() {\r\n    const container = this.element;\r\n    const containerSize = {\r\n      width: container.offsetWidth, height: container.offsetHeight\r\n    };\r\n\r\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n    const computedStyle = getComputedStyle(thumb);\r\n    const thumbWidth = thumb.offsetWidth +\r\n        parseFloat(computedStyle['marginRight']) +\r\n        parseFloat(computedStyle['marginLeft']);\r\n    const thumbHeight = thumb.offsetHeight +\r\n        parseFloat(computedStyle['marginTop']) +\r\n        parseFloat(computedStyle['marginBottom']);\r\n    this.thumbSize_ = [thumbWidth, thumbHeight];\r\n\r\n    if (containerSize.width > containerSize.height) {\r\n      this.direction_ = Direction.HORIZONTAL;\r\n      this.widthLimit_ = containerSize.width - thumbWidth;\r\n    } else {\r\n      this.direction_ = Direction.VERTICAL;\r\n      this.heightLimit_ = containerSize.height - thumbHeight;\r\n    }\r\n    this.sliderInitialized_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The browser event to handle.\r\n   * @private\r\n   */\r\n  handleContainerClick_(event) {\r\n    const view = this.getMap().getView();\r\n\r\n    const relativePosition = this.getRelativePosition_(\r\n      event.offsetX - this.thumbSize_[0] / 2,\r\n      event.offsetY - this.thumbSize_[1] / 2);\r\n\r\n    const resolution = this.getResolutionForPosition_(relativePosition);\r\n\r\n    view.animate({\r\n      resolution: view.constrainResolution(resolution),\r\n      duration: this.duration_,\r\n      easing: easeOut\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle dragger start events.\r\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerStart_(event) {\r\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\r\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\r\n      this.previousX_ = event.clientX;\r\n      this.previousY_ = event.clientY;\r\n      this.dragging_ = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger drag events.\r\n   *\r\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerDrag_(event) {\r\n    if (this.dragging_) {\r\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n      const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\r\n      const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\r\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\r\n      this.getMap().getView().setResolution(this.currentResolution_);\r\n      this.setThumbPosition_(this.currentResolution_);\r\n      this.previousX_ = event.clientX;\r\n      this.previousY_ = event.clientY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger end events.\r\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerEnd_(event) {\r\n    if (this.dragging_) {\r\n      const view = this.getMap().getView();\r\n      view.setHint(ViewHint.INTERACTING, -1);\r\n\r\n      view.animate({\r\n        resolution: view.constrainResolution(this.currentResolution_),\r\n        duration: this.duration_,\r\n        easing: easeOut\r\n      });\r\n\r\n      this.dragging_ = false;\r\n      this.previousX_ = undefined;\r\n      this.previousY_ = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Positions the thumb inside its container according to the given resolution.\r\n   *\r\n   * @param {number} res The res.\r\n   * @private\r\n   */\r\n  setThumbPosition_(res) {\r\n    const position = this.getPositionForResolution_(res);\r\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n\r\n    if (this.direction_ == Direction.HORIZONTAL) {\r\n      thumb.style.left = this.widthLimit_ * position + 'px';\r\n    } else {\r\n      thumb.style.top = this.heightLimit_ * position + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the relative position of the thumb given x and y offsets.  The\r\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n   * in pixel units within the dragger limits.\r\n   *\r\n   * @param {number} x Pixel position relative to the left of the slider.\r\n   * @param {number} y Pixel position relative to the top of the slider.\r\n   * @return {number} The relative position of the thumb.\r\n   * @private\r\n   */\r\n  getRelativePosition_(x, y) {\r\n    let amount;\r\n    if (this.direction_ === Direction.HORIZONTAL) {\r\n      amount = x / this.widthLimit_;\r\n    } else {\r\n      amount = y / this.heightLimit_;\r\n    }\r\n    return clamp(amount, 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Calculates the corresponding resolution of the thumb given its relative\r\n   * position (where 0 is the minimum and 1 is the maximum).\r\n   *\r\n   * @param {number} position The relative position of the thumb.\r\n   * @return {number} The corresponding resolution.\r\n   * @private\r\n   */\r\n  getResolutionForPosition_(position) {\r\n    const fn = this.getMap().getView().getResolutionForValueFunction();\r\n    return fn(1 - position);\r\n  }\r\n\r\n  /**\r\n   * Determines the relative position of the slider for the given resolution.  A\r\n   * relative position of 0 corresponds to the minimum view resolution.  A\r\n   * relative position of 1 corresponds to the maximum view resolution.\r\n   *\r\n   * @param {number} res The resolution.\r\n   * @return {number} The relative position value (between 0 and 1).\r\n   * @private\r\n   */\r\n  getPositionForResolution_(res) {\r\n    const fn = this.getMap().getView().getValueForResolutionFunction();\r\n    return 1 - fn(res);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the zoomslider element.\r\n * @param {module:ol/MapEvent} mapEvent Map event.\r\n * @this {module:ol/control/ZoomSlider}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  if (!mapEvent.frameState) {\r\n    return;\r\n  }\r\n  if (!this.sliderInitialized_) {\r\n    this.initSlider_();\r\n  }\r\n  const res = mapEvent.frameState.viewState.resolution;\r\n  if (res !== this.currentResolution_) {\r\n    this.currentResolution_ = res;\r\n    this.setThumbPosition_(res);\r\n  }\r\n}\r\n\r\n\r\nexport default ZoomSlider;\r\n"],"names":["const","super","let"],"mappings":"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"}
{"version":3,"file":"ScaleLine.js","sources":["../../../src/ol/control/ScaleLine.js"],"sourcesContent":["/**\r\n * @module ol/control/ScaleLine\r\n */\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {assert} from '../asserts.js';\r\nimport Control from '../control/Control.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {listen} from '../events.js';\r\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\r\nimport ProjUnits from '../proj/Units.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst UNITS_PROP = 'units';\r\n\r\n/**\r\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\r\n * `'nautical'`, `'metric'`, `'us'`.\r\n * @enum {string}\r\n */\r\nexport const Units = {\r\n  DEGREES: 'degrees',\r\n  IMPERIAL: 'imperial',\r\n  NAUTICAL: 'nautical',\r\n  METRIC: 'metric',\r\n  US: 'us'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array.<number>}\r\n */\r\nconst LEADING_DIGITS = [1, 2, 5];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-scale-line'] CSS Class name.\r\n * @property {number} [minWidth=64] Minimum width in pixels.\r\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control displaying rough y-axis distances, calculated for the center of the\r\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\r\n * projection in OpenLayers), the scale is valid for all directions.\r\n * No scale line will be shown when the y-axis distance of a pixel at the\r\n * viewport center cannot be calculated in the view projection.\r\n * By default the scale line will show in the bottom left portion of the map,\r\n * but this can be changed by using the css selector `.ol-scale-line`.\r\n *\r\n * @api\r\n */\r\nclass ScaleLine extends Control {\r\n\r\n  /**\r\n   * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-scale-line';\r\n\r\n    super({\r\n      element: document.createElement('DIV'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.innerElement_ = document.createElement('DIV');\r\n    this.innerElement_.className = className + '-inner';\r\n\r\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\r\n    this.element.appendChild(this.innerElement_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/View~State}\r\n     */\r\n    this.viewState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderedWidth_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = '';\r\n\r\n    listen(\r\n      this, getChangeEventType(UNITS_PROP),\r\n      this.handleUnitsChanged_, this);\r\n\r\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\r\n        Units.METRIC);\r\n\r\n  }\r\n\r\n  /**\r\n   * Return the units to use in the scale line.\r\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\r\n   * to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return (\r\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleUnitsChanged_() {\r\n    this.updateElement_();\r\n  }\r\n\r\n  /**\r\n   * Set the units to use in the scale line.\r\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setUnits(units) {\r\n    this.set(UNITS_PROP, units);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateElement_() {\r\n    const viewState = this.viewState_;\r\n\r\n    if (!viewState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const center = viewState.center;\r\n    const projection = viewState.projection;\r\n    const units = this.getUnits();\r\n    const pointResolutionUnits = units == Units.DEGREES ?\r\n      ProjUnits.DEGREES :\r\n      ProjUnits.METERS;\r\n    let pointResolution =\r\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\r\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\r\n      && pointResolutionUnits == ProjUnits.METERS) {\r\n      pointResolution *= projection.getMetersPerUnit();\r\n    }\r\n\r\n    let nominalCount = this.minWidth_ * pointResolution;\r\n    let suffix = '';\r\n    if (units == Units.DEGREES) {\r\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\r\n      if (projection.getUnits() == ProjUnits.DEGREES) {\r\n        nominalCount *= metersPerDegree;\r\n      } else {\r\n        pointResolution /= metersPerDegree;\r\n      }\r\n      if (nominalCount < metersPerDegree / 60) {\r\n        suffix = '\\u2033'; // seconds\r\n        pointResolution *= 3600;\r\n      } else if (nominalCount < metersPerDegree) {\r\n        suffix = '\\u2032'; // minutes\r\n        pointResolution *= 60;\r\n      } else {\r\n        suffix = '\\u00b0'; // degrees\r\n      }\r\n    } else if (units == Units.IMPERIAL) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution /= 0.0254;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.3048;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.344;\r\n      }\r\n    } else if (units == Units.NAUTICAL) {\r\n      pointResolution /= 1852;\r\n      suffix = 'nm';\r\n    } else if (units == Units.METRIC) {\r\n      if (nominalCount < 0.001) {\r\n        suffix = 'Î¼m';\r\n        pointResolution *= 1000000;\r\n      } else if (nominalCount < 1) {\r\n        suffix = 'mm';\r\n        pointResolution *= 1000;\r\n      } else if (nominalCount < 1000) {\r\n        suffix = 'm';\r\n      } else {\r\n        suffix = 'km';\r\n        pointResolution /= 1000;\r\n      }\r\n    } else if (units == Units.US) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution *= 39.37;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.30480061;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.3472;\r\n      }\r\n    } else {\r\n      assert(false, 33); // Invalid units\r\n    }\r\n\r\n    let i = 3 * Math.floor(\r\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\r\n    let count, width;\r\n    while (true) {\r\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\r\n          Math.pow(10, Math.floor(i / 3));\r\n      width = Math.round(count / pointResolution);\r\n      if (isNaN(width)) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n        return;\r\n      } else if (width >= this.minWidth_) {\r\n        break;\r\n      }\r\n      ++i;\r\n    }\r\n\r\n    const html = count + ' ' + suffix;\r\n    if (this.renderedHTML_ != html) {\r\n      this.innerElement_.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n\r\n    if (this.renderedWidth_ != width) {\r\n      this.innerElement_.style.width = width + 'px';\r\n      this.renderedWidth_ = width;\r\n    }\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the scale line element.\r\n * @param {module:ol/MapEvent} mapEvent Map event.\r\n * @this {module:ol/control/ScaleLine}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  const frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.viewState_ = null;\r\n  } else {\r\n    this.viewState_ = frameState.viewState;\r\n  }\r\n  this.updateElement_();\r\n}\r\n\r\n\r\nexport default ScaleLine;\r\n"],"names":["const","super","let","this"],"mappings":"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"}
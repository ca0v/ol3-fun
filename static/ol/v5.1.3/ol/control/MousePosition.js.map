{"version":3,"file":"MousePosition.js","sources":["../../../src/ol/control/MousePosition.js"],"sourcesContent":["/**\r\n * @module ol/control/MousePosition\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport Control from '../control/Control.js';\r\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst PROJECTION = 'projection';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst COORDINATE_FORMAT = 'coordinateFormat';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-mouse-position'] CSS class name.\r\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\r\n * @property {module:ol/proj~ProjectionLike} projection Projection.\r\n * @property {function(module:ol/MapEvent)} [render] Function called when the\r\n * control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {Element|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\r\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\r\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\r\n * retain the last rendered position, set this option to something falsey (like an empty\r\n * string `''`).\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control to show the 2D coordinates of the mouse cursor. By default, these\r\n * are in the view projection, but can be in any supported projection.\r\n * By default the control is shown in the top right corner of the map, but this\r\n * can be changed by using the css selector `.ol-mouse-position`.\r\n *\r\n * @api\r\n */\r\nclass MousePosition extends Control {\r\n\r\n  /**\r\n   * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const element = document.createElement('DIV');\r\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\r\n\r\n    super({\r\n      element: element,\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    listen(this,\r\n      getChangeEventType(PROJECTION),\r\n      this.handleProjectionChanged_, this);\r\n\r\n    if (options.coordinateFormat) {\r\n      this.setCoordinateFormat(options.coordinateFormat);\r\n    }\r\n    if (options.projection) {\r\n      this.setProjection(options.projection);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = element.innerHTML;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/proj/Projection}\r\n     */\r\n    this.mapProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?module:ol/proj~TransformFunction}\r\n     */\r\n    this.transform_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/pixel~Pixel}\r\n     */\r\n    this.lastMouseMovePixel_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleProjectionChanged_() {\r\n    this.transform_ = null;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate format type used to render the current position or\r\n   * undefined.\r\n   * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getCoordinateFormat() {\r\n    return (\r\n      /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the projection that is used to report the mouse position.\r\n   * @return {module:ol/proj/Projection|undefined} The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return (\r\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseMove(event) {\r\n    const map = this.getMap();\r\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\r\n    this.updateHTML_(this.lastMouseMovePixel_);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseOut(event) {\r\n    this.updateHTML_(null);\r\n    this.lastMouseMovePixel_ = null;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      const viewport = map.getViewport();\r\n      this.listenerKeys.push(\r\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\r\n      );\r\n      if (this.renderOnMouseOut_) {\r\n        this.listenerKeys.push(\r\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the coordinate format type used to render the current position.\r\n   * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setCoordinateFormat(format) {\r\n    this.set(COORDINATE_FORMAT, format);\r\n  }\r\n\r\n  /**\r\n   * Set the projection that is used to report the mouse position.\r\n   * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.set(PROJECTION, getProjection(projection));\r\n  }\r\n\r\n  /**\r\n   * @param {?module:ol/pixel~Pixel} pixel Pixel.\r\n   * @private\r\n   */\r\n  updateHTML_(pixel) {\r\n    let html = this.undefinedHTML_;\r\n    if (pixel && this.mapProjection_) {\r\n      if (!this.transform_) {\r\n        const projection = this.getProjection();\r\n        if (projection) {\r\n          this.transform_ = getTransformFromProjections(\r\n            this.mapProjection_, projection);\r\n        } else {\r\n          this.transform_ = identityTransform;\r\n        }\r\n      }\r\n      const map = this.getMap();\r\n      const coordinate = map.getCoordinateFromPixel(pixel);\r\n      if (coordinate) {\r\n        this.transform_(coordinate, coordinate);\r\n        const coordinateFormat = this.getCoordinateFormat();\r\n        if (coordinateFormat) {\r\n          html = coordinateFormat(coordinate);\r\n        } else {\r\n          html = coordinate.toString();\r\n        }\r\n      }\r\n    }\r\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\r\n      this.element.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the mouseposition element.\r\n * @param {module:ol/MapEvent} mapEvent Map event.\r\n * @this {module:ol/control/MousePosition}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  const frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.mapProjection_ = null;\r\n  } else {\r\n    if (this.mapProjection_ != frameState.viewState.projection) {\r\n      this.mapProjection_ = frameState.viewState.projection;\r\n      this.transform_ = null;\r\n    }\r\n  }\r\n  this.updateHTML_(this.lastMouseMovePixel_);\r\n}\r\n\r\n\r\nexport default MousePosition;\r\n"],"names":["const","super","let"],"mappings":"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"}
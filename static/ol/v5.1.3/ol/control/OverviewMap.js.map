{"version":3,"file":"OverviewMap.js","sources":["../../../src/ol/control/OverviewMap.js"],"sourcesContent":["/**\r\n * @module ol/control/OverviewMap\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Map from '../Map.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport Overlay from '../Overlay.js';\r\nimport OverlayPositioning from '../OverlayPositioning.js';\r\nimport ViewProperty from '../ViewProperty.js';\r\nimport Control from '../control/Control.js';\r\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen, listenOnce, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\r\n\r\n\r\n/**\r\n * Maximum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed out.\r\n * @type {number}\r\n */\r\nconst MAX_RATIO = 0.75;\r\n\r\n\r\n/**\r\n * Minimum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed in.\r\n * @type {number}\r\n */\r\nconst MIN_RATIO = 0.1;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-overviewmap'] CSS class name.\r\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\r\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\r\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\r\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\r\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\r\n * Layers for the overview map. If not set, then all main map layers are used\r\n * instead.\r\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\r\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\r\n * a default view with an EPSG:3857 projection will be used.\r\n */\r\n\r\n\r\n/**\r\n * Create a new control with a map acting as an overview map for an other\r\n * defined map.\r\n *\r\n * @api\r\n */\r\nclass OverviewMap extends Control {\r\n\r\n  /**\r\n   * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\r\n   */\r\n  constructor(opt_options) {\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ = options.collapsible !== undefined ?\r\n      options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\r\n\r\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\r\n\r\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u00BB';\r\n\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\r\n      this.collapseLabel_ : this.label_;\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    listen(button, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.ovmapDiv_ = document.createElement('DIV');\r\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\r\n\r\n    /**\r\n     * @type {module:ol/Map}\r\n     * @private\r\n     */\r\n    this.ovmap_ = new Map({\r\n      controls: new Collection(),\r\n      interactions: new Collection(),\r\n      view: options.view\r\n    });\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (options.layers) {\r\n      options.layers.forEach(\r\n        /**\r\n         * @param {module:ol/layer/Layer} layer Layer.\r\n         */\r\n        (function(layer) {\r\n          ovmap.addLayer(layer);\r\n        }).bind(this));\r\n    }\r\n\r\n    const box = document.createElement('DIV');\r\n    box.className = 'ol-overviewmap-box';\r\n    box.style.boxSizing = 'border-box';\r\n\r\n    /**\r\n     * @type {module:ol/Overlay}\r\n     * @private\r\n     */\r\n    this.boxOverlay_ = new Overlay({\r\n      position: [0, 0],\r\n      positioning: OverlayPositioning.BOTTOM_LEFT,\r\n      element: box\r\n    });\r\n    this.ovmap_.addOverlay(this.boxOverlay_);\r\n\r\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ovmapDiv_);\r\n    element.appendChild(button);\r\n\r\n    /* Interactive map */\r\n\r\n    const scope = this;\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const overlayBox = this.boxOverlay_.getElement();\r\n\r\n    /* Functions definition */\r\n\r\n    const computeDesiredMousePosition = function(mousePosition) {\r\n      return {\r\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\r\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\r\n      };\r\n    };\r\n\r\n    const move = function(event) {\r\n      const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\r\n\r\n      overlay.setPosition(coordinates);\r\n    };\r\n\r\n    const endMoving = function(event) {\r\n      const coordinates = ovmap.getEventCoordinate(event);\r\n\r\n      scope.getMap().getView().setCenter(coordinates);\r\n\r\n      window.removeEventListener('mousemove', move);\r\n      window.removeEventListener('mouseup', endMoving);\r\n    };\r\n\r\n    /* Binding */\r\n\r\n    overlayBox.addEventListener('mousedown', function() {\r\n      window.addEventListener('mousemove', move);\r\n      window.addEventListener('mouseup', endMoving);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    if (map === oldMap) {\r\n      return;\r\n    }\r\n    if (oldMap) {\r\n      const oldView = oldMap.getView();\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      this.ovmap_.setTarget(null);\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      this.ovmap_.setTarget(this.ovmapDiv_);\r\n      this.listenerKeys.push(listen(\r\n        map, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleMapPropertyChange_, this));\r\n\r\n      // TODO: to really support map switching, this would need to be reworked\r\n      if (this.ovmap_.getLayers().getLength() === 0) {\r\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\r\n      }\r\n\r\n      const view = map.getView();\r\n      if (view) {\r\n        this.bindView_(view);\r\n        if (view.isDef()) {\r\n          this.ovmap_.updateSize();\r\n          this.resetExtent_();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle map property changes.  This only deals with changes to the map's view.\r\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\r\n   * @private\r\n   */\r\n  handleMapPropertyChange_(event) {\r\n    if (event.key === MapProperty.VIEW) {\r\n      const oldView = /** @type {module:ol/View} */ (event.oldValue);\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      const newView = this.getMap().getView();\r\n      this.bindView_(newView);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register listeners for view property changes.\r\n   * @param {module:ol/View} view The view.\r\n   * @private\r\n   */\r\n  bindView_(view) {\r\n    listen(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  }\r\n\r\n  /**\r\n   * Unregister listeners for view property changes.\r\n   * @param {module:ol/View} view The view.\r\n   * @private\r\n   */\r\n  unbindView_(view) {\r\n    unlisten(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  }\r\n\r\n  /**\r\n   * Handle rotation changes to the main map.\r\n   * TODO: This should rotate the extent rectrangle instead of the\r\n   * overview map's view.\r\n   * @private\r\n   */\r\n  handleRotationChanged_() {\r\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent if the box size (width or\r\n   * height) is less than the size of the overview map size times minRatio\r\n   * or is greater than the size of the overview size times maxRatio.\r\n   *\r\n   * If the map extent was not reset, the box size can fits in the defined\r\n   * ratio sizes. This method then checks if is contained inside the overview\r\n   * map current extent. If not, recenter the overview map to the current\r\n   * main map center location.\r\n   * @private\r\n   */\r\n  validateExtent_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtent(mapSize);\r\n\r\n    const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\r\n\r\n    const ovview = ovmap.getView();\r\n    const ovextent = ovview.calculateExtent(ovmapSize);\r\n\r\n    const topLeftPixel =\r\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\r\n    const bottomRightPixel =\r\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\r\n\r\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\r\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\r\n\r\n    const ovmapWidth = ovmapSize[0];\r\n    const ovmapHeight = ovmapSize[1];\r\n\r\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\r\n        boxHeight < ovmapHeight * MIN_RATIO ||\r\n        boxWidth > ovmapWidth * MAX_RATIO ||\r\n        boxHeight > ovmapHeight * MAX_RATIO) {\r\n      this.resetExtent_();\r\n    } else if (!containsExtent(ovextent, extent)) {\r\n      this.recenter_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent to half calculated min and max ratio times\r\n   * the extent of the main map.\r\n   * @private\r\n   */\r\n  resetExtent_() {\r\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\r\n      return;\r\n    }\r\n\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtent(mapSize);\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    // get how many times the current map overview could hold different\r\n    // box sizes using the min and max ratio, pick the step in the middle used\r\n    // to calculate the extent from the main map to set it to the overview map,\r\n    const steps = Math.log(\r\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\r\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\r\n    scaleFromCenter(extent, ratio);\r\n    ovview.fit(extent);\r\n  }\r\n\r\n  /**\r\n   * Set the center of the overview map to the map center without changing its\r\n   * resolution.\r\n   * @private\r\n   */\r\n  recenter_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    ovview.setCenter(view.getCenter());\r\n  }\r\n\r\n  /**\r\n   * Update the box using the main map extent\r\n   * @private\r\n   */\r\n  updateBox_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    const rotation = view.getRotation();\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const box = this.boxOverlay_.getElement();\r\n    const extent = view.calculateExtent(mapSize);\r\n    const ovresolution = ovview.getResolution();\r\n    const bottomLeft = getBottomLeft(extent);\r\n    const topRight = getTopRight(extent);\r\n\r\n    // set position using bottom left coordinates\r\n    const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\r\n    overlay.setPosition(rotateBottomLeft);\r\n\r\n    // set box size calculated from map extent size and overview map resolution\r\n    if (box) {\r\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\r\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\r\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\r\n   * @private\r\n   */\r\n  calculateCoordinateRotate_(rotation, coordinate) {\r\n    let coordinateRotate;\r\n\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n\r\n    const currentCenter = view.getCenter();\r\n\r\n    if (currentCenter) {\r\n      coordinateRotate = [\r\n        coordinate[0] - currentCenter[0],\r\n        coordinate[1] - currentCenter[1]\r\n      ];\r\n      rotateCoordinate(coordinateRotate, rotation);\r\n      addCoordinate(coordinateRotate, currentCenter);\r\n    }\r\n    return coordinateRotate;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n\r\n    // manage overview map if it had not been rendered before and control\r\n    // is expanded\r\n    const ovmap = this.ovmap_;\r\n    if (!this.collapsed_ && !ovmap.isRendered()) {\r\n      ovmap.updateSize();\r\n      this.resetExtent_();\r\n      listenOnce(ovmap, MapEventType.POSTRENDER,\r\n        function(event) {\r\n          this.updateBox_();\r\n        },\r\n        this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the overview map is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the overview map should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the overview map according to the passed parameter. Will\r\n   * not do anything if the overview map isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Determine if the overview map is collapsed.\r\n   * @return {boolean} The overview map is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Return the overview map.\r\n   * @return {module:ol/PluggableMap} Overview map.\r\n   * @api\r\n   */\r\n  getOverviewMap() {\r\n    return this.ovmap_;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Update the overview map element.\r\n * @param {module:ol/MapEvent} mapEvent Map event.\r\n * @this {module:ol/control/OverviewMap}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  this.validateExtent_();\r\n  this.updateBox_();\r\n}\r\n\r\n\r\nexport default OverviewMap;\r\n"],"names":["const","super","let"],"mappings":"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"}
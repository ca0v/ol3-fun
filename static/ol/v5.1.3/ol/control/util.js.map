{"version":3,"file":"util.js","sources":["../../../src/ol/control/util.js"],"sourcesContent":["/**\r\n * @module ol/control/util\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Attribution from './Attribution.js';\r\nimport Rotate from './Rotate.js';\r\nimport Zoom from './Zoom.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\r\n * Defaults options.\r\n * @return {module:ol/Collection.<module:ol/control/Control>}\r\n * Controls.\r\n * @function module:ol/control.defaults\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n\r\n  const options = opt_options ? opt_options : {};\r\n\r\n  const controls = new Collection();\r\n\r\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  const attributionControl = options.attribution !== undefined ?\r\n    options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n"],"names":["const"],"mappings":"AAAA;;;AAGA,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAC1C,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,IAAI,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmC7B,OAAO,SAAS,QAAQ,CAAC,WAAW,EAAE;;EAEpCA,GAAK,CAAC,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC;;EAE/CA,GAAK,CAAC,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;;EAElCA,GAAK,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;EACrE,IAAI,WAAW,EAAE;IACf,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;GAC9C;;EAEDA,GAAK,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;EAC3E,IAAI,aAAa,EAAE;IACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;GAClD;;EAEDA,GAAK,CAAC,kBAAkB,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS;IAC1D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;EAC7B,IAAI,kBAAkB,EAAE;IACtB,QAAQ,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;GAC5D;;EAED,OAAO,QAAQ,CAAC;CACjB;"}
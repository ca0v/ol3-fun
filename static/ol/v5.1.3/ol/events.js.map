{"version":3,"file":"events.js","sources":["../../src/ol/events.js"],"sourcesContent":["/**\r\n * @module ol/events\r\n */\r\nimport {clear} from './obj.js';\r\n\r\n\r\n/**\r\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\r\n * @typedef {Object} EventsKey\r\n * @property {Object} [bindTo]\r\n * @property {module:ol/events~ListenerFunction} [boundListener]\r\n * @property {boolean} callOnce\r\n * @property {number} [deleteIndex]\r\n * @property {module:ol/events~ListenerFunction} listener\r\n * @property {EventTarget|module:ol/events/EventTarget} target\r\n * @property {string} type\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Listener function. This function is called with an event object as argument.\r\n * When the function returns `false`, event propagation will stop.\r\n *\r\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\r\n * @return {module:ol/events~ListenerFunction} Bound listener.\r\n */\r\nexport function bindListener(listenerObj) {\r\n  const boundListener = function(evt) {\r\n    const listener = listenerObj.listener;\r\n    const bindTo = listenerObj.bindTo || listenerObj.target;\r\n    if (listenerObj.callOnce) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n    return listener.call(bindTo, evt);\r\n  };\r\n  listenerObj.boundListener = boundListener;\r\n  return boundListener;\r\n}\r\n\r\n\r\n/**\r\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\r\n * array.\r\n *\r\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\r\n * @param {!Function} listener The listener function.\r\n * @param {Object=} opt_this The `this` value inside the listener.\r\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\r\n *     listener, for {@link module:ol/events~unlistenByKey}.\r\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\r\n */\r\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\r\n  let listenerObj;\r\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n    listenerObj = listeners[i];\r\n    if (listenerObj.listener === listener &&\r\n        listenerObj.bindTo === opt_this) {\r\n      if (opt_setDeleteIndex) {\r\n        listenerObj.deleteIndex = i;\r\n      }\r\n      return listenerObj;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\r\n */\r\nexport function getListeners(target, type) {\r\n  const listenerMap = target.ol_lm;\r\n  return listenerMap ? listenerMap[type] : undefined;\r\n}\r\n\r\n\r\n/**\r\n * Get the lookup of listeners.  If one does not exist on the target, it is\r\n * created.\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\r\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\r\n *     listeners by event type.\r\n */\r\nfunction getListenerMap(target) {\r\n  let listenerMap = target.ol_lm;\r\n  if (!listenerMap) {\r\n    listenerMap = target.ol_lm = {};\r\n  }\r\n  return listenerMap;\r\n}\r\n\r\n\r\n/**\r\n * Clean up all listener objects of the given type.  All properties on the\r\n * listener objects will be removed, and if no listeners remain in the listener\r\n * map, it will be removed from the target.\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n */\r\nfunction removeListeners(target, type) {\r\n  const listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n      target.removeEventListener(type, listeners[i].boundListener);\r\n      clear(listeners[i]);\r\n    }\r\n    listeners.length = 0;\r\n    const listenerMap = target.ol_lm;\r\n    if (listenerMap) {\r\n      delete listenerMap[type];\r\n      if (Object.keys(listenerMap).length === 0) {\r\n        delete target.ol_lm;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Registers an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` to a `this` object, and returns\r\n * a key for use with {@link module:ol/events~unlistenByKey}.\r\n *\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {module:ol/events~ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\r\n * @return {module:ol/events~EventsKey} Unique key for the listener.\r\n */\r\nexport function listen(target, type, listener, opt_this, opt_once) {\r\n  const listenerMap = getListenerMap(target);\r\n  let listeners = listenerMap[type];\r\n  if (!listeners) {\r\n    listeners = listenerMap[type] = [];\r\n  }\r\n  let listenerObj = findListener(listeners, listener, opt_this, false);\r\n  if (listenerObj) {\r\n    if (!opt_once) {\r\n      // Turn one-off listener into a permanent one.\r\n      listenerObj.callOnce = false;\r\n    }\r\n  } else {\r\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\r\n      bindTo: opt_this,\r\n      callOnce: !!opt_once,\r\n      listener: listener,\r\n      target: target,\r\n      type: type\r\n    });\r\n    target.addEventListener(type, bindListener(listenerObj));\r\n    listeners.push(listenerObj);\r\n  }\r\n\r\n  return listenerObj;\r\n}\r\n\r\n\r\n/**\r\n * Registers a one-off event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` as self-unregistering listener\r\n * to a `this` object, and returns a key for use with\r\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\r\n * unregistered before it is called.\r\n *\r\n * When {@link module:ol/events~listen} is called with the same arguments after this\r\n * function, the self-unregistering listener will be turned into a permanent\r\n * listener.\r\n *\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {module:ol/events~ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\r\n */\r\nexport function listenOnce(target, type, listener, opt_this) {\r\n  return listen(target, type, listener, opt_this, true);\r\n}\r\n\r\n\r\n/**\r\n * Unregisters an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * To return a listener, this function needs to be called with the exact same\r\n * arguments that were used for a previous {@link module:ol/events~listen} call.\r\n *\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {module:ol/events~ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n */\r\nexport function unlisten(target, type, listener, opt_this) {\r\n  const listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    const listenerObj = findListener(listeners, listener, opt_this, true);\r\n    if (listenerObj) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * The argument passed to this function is the key returned from\r\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\r\n *\r\n * @param {module:ol/events~EventsKey} key The key.\r\n */\r\nexport function unlistenByKey(key) {\r\n  if (key && key.target) {\r\n    key.target.removeEventListener(key.type, key.boundListener);\r\n    const listeners = getListeners(key.target, key.type);\r\n    if (listeners) {\r\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\r\n      if (i !== -1) {\r\n        listeners.splice(i, 1);\r\n      }\r\n      if (listeners.length === 0) {\r\n        removeListeners(key.target, key.type);\r\n      }\r\n    }\r\n    clear(key);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters all event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\r\n */\r\nexport function unlistenAll(target) {\r\n  const listenerMap = getListenerMap(target);\r\n  for (const type in listenerMap) {\r\n    removeListeners(target, type);\r\n  }\r\n}\r\n"],"names":["const","let"],"mappings":"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"}
{"version":3,"file":"EventTarget.js","sources":["../../../src/ol/events/EventTarget.js"],"sourcesContent":["/**\r\n * @module ol/events/EventTarget\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {unlistenAll} from '../events.js';\r\nimport {UNDEFINED} from '../functions.js';\r\nimport Event from '../events/Event.js';\r\n\r\n\r\n/**\r\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\r\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\r\n *\r\n * There are two important simplifications compared to the specification:\r\n *\r\n * 1. The handling of `useCapture` in `addEventListener` and\r\n *    `removeEventListener`. There is no real capture model.\r\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\r\n *    There is no event target hierarchy. When a listener calls\r\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\r\n *    more listeners after this one will be called. Same as when the listener\r\n *    returns false.\r\n */\r\nclass EventTarget extends Disposable {\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string, number>}\r\n     */\r\n    this.pendingRemovals_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string, number>}\r\n     */\r\n    this.dispatching_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\r\n     */\r\n    this.listeners_ = {};\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {module:ol/events~ListenerFunction} listener Listener.\r\n   */\r\n  addEventListener(type, listener) {\r\n    let listeners = this.listeners_[type];\r\n    if (!listeners) {\r\n      listeners = this.listeners_[type] = [];\r\n    }\r\n    if (listeners.indexOf(listener) === -1) {\r\n      listeners.push(listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatches an event and calls all listeners listening for events\r\n   * of this type. The event parameter can either be a string or an\r\n   * Object with a `type` property.\r\n   *\r\n   * @param {{type: string,\r\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\r\n   *     module:ol/events/Event|string} event Event object.\r\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\r\n   *     event object or if any of the listeners returned false.\r\n   * @function\r\n   * @api\r\n   */\r\n  dispatchEvent(event) {\r\n    const evt = typeof event === 'string' ? new Event(event) : event;\r\n    const type = evt.type;\r\n    evt.target = this;\r\n    const listeners = this.listeners_[type];\r\n    let propagate;\r\n    if (listeners) {\r\n      if (!(type in this.dispatching_)) {\r\n        this.dispatching_[type] = 0;\r\n        this.pendingRemovals_[type] = 0;\r\n      }\r\n      ++this.dispatching_[type];\r\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\r\n          propagate = false;\r\n          break;\r\n        }\r\n      }\r\n      --this.dispatching_[type];\r\n      if (this.dispatching_[type] === 0) {\r\n        let pendingRemovals = this.pendingRemovals_[type];\r\n        delete this.pendingRemovals_[type];\r\n        while (pendingRemovals--) {\r\n          this.removeEventListener(type, UNDEFINED);\r\n        }\r\n        delete this.dispatching_[type];\r\n      }\r\n      return propagate;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    unlistenAll(this);\r\n  }\r\n\r\n  /**\r\n   * Get the listeners for a specified event type. Listeners are returned in the\r\n   * order that they will be called in.\r\n   *\r\n   * @param {string} type Type.\r\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\r\n   */\r\n  getListeners(type) {\r\n    return this.listeners_[type];\r\n  }\r\n\r\n  /**\r\n   * @param {string=} opt_type Type. If not provided,\r\n   *     `true` will be returned if this EventTarget has any listeners.\r\n   * @return {boolean} Has listeners.\r\n   */\r\n  hasListener(opt_type) {\r\n    return opt_type ?\r\n      opt_type in this.listeners_ :\r\n      Object.keys(this.listeners_).length > 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {module:ol/events~ListenerFunction} listener Listener.\r\n   */\r\n  removeEventListener(type, listener) {\r\n    const listeners = this.listeners_[type];\r\n    if (listeners) {\r\n      const index = listeners.indexOf(listener);\r\n      if (type in this.pendingRemovals_) {\r\n        // make listener a no-op, and remove later in #dispatchEvent()\r\n        listeners[index] = UNDEFINED;\r\n        ++this.pendingRemovals_[type];\r\n      } else {\r\n        listeners.splice(index, 1);\r\n        if (listeners.length === 0) {\r\n          delete this.listeners_[type];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default EventTarget;\r\n"],"names":["super","let","const","this"],"mappings":"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"}
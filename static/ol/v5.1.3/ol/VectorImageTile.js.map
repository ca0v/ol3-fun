{"version":3,"file":"VectorImageTile.js","sources":["../../src/ol/VectorImageTile.js"],"sourcesContent":["/**\r\n * @module ol/VectorImageTile\r\n */\r\nimport {getUid} from './util.js';\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {getHeight, getIntersection, getWidth} from './extent.js';\r\nimport EventType from './events/EventType.js';\r\nimport {loadFeaturesXhr} from './featureloader.js';\r\nimport {UNDEFINED} from './functions.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} ReplayState\r\n * @property {boolean} dirty\r\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\r\n * @property {number} renderedTileRevision\r\n * @property {number} renderedRevision\r\n */\r\n\r\n\r\nclass VectorImageTile extends Tile {\r\n\r\n  /**\r\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\r\n   * @param {module:ol/TileState} state State.\r\n   * @param {number} sourceRevision Source revision.\r\n   * @param {module:ol/format/Feature} format Feature format.\r\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\r\n   * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\r\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\r\n   * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\r\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\r\n   * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {module:ol/proj/Projection} projection Projection.\r\n   * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\r\n   *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\r\n   *     instantiate for source tiles.\r\n   * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\r\n   *     Function to call when a source tile's state changes.\r\n   * @param {number} zoom Integer zoom to render the tile for.\r\n   */\r\n  constructor(tileCoord, state, sourceRevision, format, tileLoadFunction,\r\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\r\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\r\n\r\n    super(tileCoord, state, {transition: 0});\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string, CanvasRenderingContext2D>}\r\n     */\r\n    this.context_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {module:ol/featureloader~FeatureLoader}\r\n     */\r\n    this.loader_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\r\n     */\r\n    this.replayState_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, module:ol/VectorTile>}\r\n     */\r\n    this.sourceTiles_ = sourceTiles;\r\n\r\n    /**\r\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\r\n     * @type {Array.<string>}\r\n     */\r\n    this.tileKeys = [];\r\n\r\n    /**\r\n     * @type {module:ol/extent~Extent}\r\n     */\r\n    this.extent = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.sourceRevision_ = sourceRevision;\r\n\r\n    /**\r\n     * @type {module:ol/tilecoord~TileCoord}\r\n     */\r\n    this.wrappedTileCoord = urlTileCoord;\r\n\r\n    /**\r\n     * @type {Array.<module:ol/events~EventsKey>}\r\n     */\r\n    this.loadListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Array.<module:ol/events~EventsKey>}\r\n     */\r\n    this.sourceTileListenerKeys_ = [];\r\n\r\n    if (urlTileCoord) {\r\n      const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\r\n      const resolution = tileGrid.getResolution(zoom);\r\n      const sourceZ = sourceTileGrid.getZForResolution(resolution);\r\n      const useLoadedOnly = zoom != tileCoord[0];\r\n      let loadCount = 0;\r\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\r\n        let sharedExtent = getIntersection(extent,\r\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\r\n        const sourceExtent = sourceTileGrid.getExtent();\r\n        if (sourceExtent) {\r\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\r\n        }\r\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\r\n            getHeight(sharedExtent) / resolution >= 0.5) {\r\n          // only include source tile if overlap is at least 1 pixel\r\n          ++loadCount;\r\n          const sourceTileKey = sourceTileCoord.toString();\r\n          let sourceTile = sourceTiles[sourceTileKey];\r\n          if (!sourceTile && !useLoadedOnly) {\r\n            const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\r\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\r\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\r\n              tileUrl == undefined ? '' : tileUrl,\r\n              format, tileLoadFunction);\r\n            this.sourceTileListenerKeys_.push(\r\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\r\n          }\r\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\r\n            sourceTile.consumers++;\r\n            this.tileKeys.push(sourceTileKey);\r\n          }\r\n        }\r\n      }.bind(this));\r\n\r\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\r\n        this.finishLoading_();\r\n      }\r\n\r\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\r\n        while (zoom > tileGrid.getMinZoom()) {\r\n          const tile = new VectorImageTile(tileCoord, state, sourceRevision,\r\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\r\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\r\n            tileClass, UNDEFINED, --zoom);\r\n          if (tile.state == TileState.LOADED) {\r\n            this.interimTile = tile;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    if (this.interimTile) {\r\n      this.interimTile.dispose();\r\n    }\r\n\r\n    for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\r\n      const sourceTileKey = this.tileKeys[i];\r\n      const sourceTile = this.getTile(sourceTileKey);\r\n      sourceTile.consumers--;\r\n      if (sourceTile.consumers == 0) {\r\n        delete this.sourceTiles_[sourceTileKey];\r\n        sourceTile.dispose();\r\n      }\r\n    }\r\n    this.tileKeys.length = 0;\r\n    this.sourceTiles_ = null;\r\n    this.loadListenerKeys_.forEach(unlistenByKey);\r\n    this.loadListenerKeys_.length = 0;\r\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\r\n    this.sourceTileListenerKeys_.length = 0;\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   * @return {CanvasRenderingContext2D} The rendering context.\r\n   */\r\n  getContext(layer) {\r\n    const key = getUid(layer).toString();\r\n    if (!(key in this.context_)) {\r\n      this.context_[key] = createCanvasContext2D();\r\n    }\r\n    return this.context_[key];\r\n  }\r\n\r\n  /**\r\n   * Get the Canvas for this tile.\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  getImage(layer) {\r\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\r\n      null : this.getContext(layer).canvas;\r\n  }\r\n\r\n  /**\r\n   * @param {module:ol/layer/Layer} layer Layer.\r\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\r\n   */\r\n  getReplayState(layer) {\r\n    const key = getUid(layer).toString();\r\n    if (!(key in this.replayState_)) {\r\n      this.replayState_[key] = {\r\n        dirty: false,\r\n        renderedRenderOrder: null,\r\n        renderedRevision: -1,\r\n        renderedTileRevision: -1\r\n      };\r\n    }\r\n    return this.replayState_[key];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getKey() {\r\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\r\n  }\r\n\r\n  /**\r\n   * @param {string} tileKey Key (tileCoord) of the source tile.\r\n   * @return {module:ol/VectorTile} Source tile.\r\n   */\r\n  getTile(tileKey) {\r\n    return this.sourceTiles_[tileKey];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  load() {\r\n    // Source tiles with LOADED state - we just count them because once they are\r\n    // loaded, we're no longer listening to state changes.\r\n    let leftToLoad = 0;\r\n    // Source tiles with ERROR state - we track them because they can still have\r\n    // an ERROR state after another load attempt.\r\n    const errorSourceTiles = {};\r\n\r\n    if (this.state == TileState.IDLE) {\r\n      this.setState(TileState.LOADING);\r\n    }\r\n    if (this.state == TileState.LOADING) {\r\n      this.tileKeys.forEach(function(sourceTileKey) {\r\n        const sourceTile = this.getTile(sourceTileKey);\r\n        if (sourceTile.state == TileState.IDLE) {\r\n          sourceTile.setLoader(this.loader_);\r\n          sourceTile.load();\r\n        }\r\n        if (sourceTile.state == TileState.LOADING) {\r\n          const key = listen(sourceTile, EventType.CHANGE, function(e) {\r\n            const state = sourceTile.getState();\r\n            if (state == TileState.LOADED ||\r\n                state == TileState.ERROR) {\r\n              const uid = getUid(sourceTile);\r\n              if (state == TileState.ERROR) {\r\n                errorSourceTiles[uid] = true;\r\n              } else {\r\n                --leftToLoad;\r\n                delete errorSourceTiles[uid];\r\n              }\r\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\r\n                this.finishLoading_();\r\n              }\r\n            }\r\n          }.bind(this));\r\n          this.loadListenerKeys_.push(key);\r\n          ++leftToLoad;\r\n        }\r\n      }.bind(this));\r\n    }\r\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\r\n      setTimeout(this.finishLoading_.bind(this), 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  finishLoading_() {\r\n    let loaded = this.tileKeys.length;\r\n    let empty = 0;\r\n    for (let i = loaded - 1; i >= 0; --i) {\r\n      const state = this.getTile(this.tileKeys[i]).getState();\r\n      if (state != TileState.LOADED) {\r\n        --loaded;\r\n      }\r\n      if (state == TileState.EMPTY) {\r\n        ++empty;\r\n      }\r\n    }\r\n    if (loaded == this.tileKeys.length) {\r\n      this.loadListenerKeys_.forEach(unlistenByKey);\r\n      this.loadListenerKeys_.length = 0;\r\n      this.setState(TileState.LOADED);\r\n    } else {\r\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default VectorImageTile;\r\n\r\n/**\r\n * Sets the loader for a tile.\r\n * @param {module:ol/VectorTile} tile Vector tile.\r\n * @param {string} url URL.\r\n */\r\nexport function defaultLoadFunction(tile, url) {\r\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\r\n  tile.setLoader(loader);\r\n}\r\n"],"names":["super","const","let","this"],"mappings":"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"}